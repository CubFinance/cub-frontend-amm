{"version":3,"sources":["style/Global.ts","connectors/NetworkConnector.ts","connectors/index.ts","constants/index.ts","hooks/index.ts","state/application/actions.ts","state/application/hooks.ts","components/Column/index.tsx","state/lists/actions.ts","utils/listVersionLabel.ts","components/Row/index.tsx","components/Popups/ListUpdatePopup.tsx","utils/index.ts","components/Shared/Common.tsx","components/Popups/TransactionPopup.tsx","components/Popups/PopupItem.tsx","components/Popups/index.tsx","components/Loader/index.tsx","components/Web3ReactManager/index.tsx","components/Card/index.tsx","components/Modal/index.tsx","components/TransactionConfirmationModal/helpers.tsx","components/TransactionConfirmationModal/ConfirmationPendingContent.tsx","components/TransactionConfirmationModal/TransactionSubmittedContent.tsx","components/TransactionConfirmationModal/TransactionConfirmationModal.tsx","components/TransactionConfirmationModal/ConfirmationModalContent.tsx","components/TransactionConfirmationModal/TransactionErrorContent.tsx","components/TransactionConfirmationModal/index.tsx","hooks/TranslationsContext.ts","utils/translateTextHelpers.ts","hooks/useI18n.ts","components/CardNav/index.tsx","constants/abis/erc20.ts","state/lists/hooks.ts","state/multicall/actions.ts","state/multicall/hooks.ts","state/user/actions.ts","utils/theme.ts","state/user/hooks.tsx","constants/multicall/index.ts","hooks/useContract.ts","hooks/Tokens.ts","state/wallet/hooks.ts","hooks/useLast.ts","utils/contenthashToUri.ts","utils/parseENSAddress.ts","utils/uriToHttp.ts","utils/isZero.ts","hooks/useHttpLocations.ts","hooks/useENSContentHash.ts","components/Logo/index.tsx","components/ListLogo/index.tsx","hooks/useInterval.ts","components/Popover/index.tsx","components/Tooltip/index.tsx","components/QuestionHelper/index.tsx","components/pancake/CoinLogo.ts","components/CurrencyLogo/index.tsx","components/SearchModal/CommonBases.tsx","components/SearchModal/styleds.tsx","components/SearchModal/CurrencyList.tsx","components/SearchModal/filtering.ts","components/SearchModal/SortButton.tsx","components/SearchModal/sorting.ts","components/SearchModal/CurrencySearch.tsx","constants/lists.ts","utils/getTokenList.ts","utils/resolveENSContentHash.ts","hooks/useFetchListCallback.ts","hooks/useOnClickOutside.tsx","components/SearchModal/ListSelect.tsx","hooks/useToggle.ts","components/SearchModal/CurrencySearchModal.tsx","components/DoubleLogo/index.tsx","components/NumericalInput/index.tsx","components/CurrencyInputPanel/index.tsx","components/NavigationTabs/index.tsx","data/TotalSupply.ts","utils/currencyId.ts","utils/wrappedCurrency.ts","components/swap/styleds.tsx","components/PositionCard/index.tsx","data/Reserves.ts","data/Allowances.ts","state/swap/actions.ts","state/transactions/actions.ts","state/transactions/hooks.tsx","utils/prices.ts","hooks/useApproveCallback.ts","state/mint/actions.ts","hooks/useDebounce.ts","hooks/useENS.ts","hooks/useENSName.ts","hooks/useENSAddress.ts","hooks/Trades.ts","state/swap/hooks.ts","hooks/useParsedQueryString.ts","state/mint/hooks.ts","utils/maxAmountSpend.ts","components/Pane/index.tsx","components/Container.tsx","state/toasts/index.ts","hooks/useToast.ts","hooks/useAuth.ts","components/ConnectWalletButton/index.tsx","pages/AppBody.tsx","pages/Pool/styleds.tsx","pages/AddLiquidity/ConfirmAddModalBottom.tsx","pages/AddLiquidity/PoolPriceBar.tsx","pages/AddLiquidity/index.tsx","pages/AddLiquidity/redirects.tsx","pages/RemoveLiquidity/redirects.tsx","pages/PoolFinder/index.tsx","components/PageHeader/SlippageToleranceSetting.tsx","components/PageHeader/TransactionDeadlineSetting.tsx","components/PageHeader/AudioSetting.tsx","components/PageHeader/SettingsModal.tsx","components/PageHeader/RecentTransactionsModal.tsx","components/PageHeader/index.tsx","pages/Pool/index.tsx","state/burn/actions.ts","components/Slider/index.tsx","state/burn/hooks.ts","pages/RemoveLiquidity/index.tsx","utils/useDebouncedChangeHandler.ts","components/AddressInputPanel/index.tsx","components/swap/FormattedPriceImpact.tsx","components/swap/SwapModalFooter.tsx","components/swap/SwapModalHeader.tsx","components/swap/ConfirmSwapModal.tsx","components/swap/SwapRoute.tsx","components/swap/AdvancedSwapDetails.tsx","components/swap/AdvancedSwapDetailsDropdown.tsx","components/swap/TradePrice.tsx","components/TokenWarningModal/index.tsx","components/SyrupWarningModal/index.tsx","components/SafeMoonWarningModal/index.tsx","components/ProgressSteps/index.tsx","hooks/useSwapCallback.ts","hooks/useWrapCallback.ts","pages/Swap/index.tsx","components/swap/confirmPriceImpactWithoutFee.ts","pages/Migration/FirstCard.tsx","pages/Migration/SecondCard.tsx","components/FoldableText/index.tsx","pages/Migration/config.ts","pages/Migration/FAQ.tsx","pages/Migration/index.tsx","pages/Swap/redirects.tsx","constants/localisation/languageCodes.ts","hooks/LanguageContext.ts","ThemeContext.tsx","hooks/useTheme.ts","hooks/useGetPriceData.ts","hooks/useGetLocalProfile.ts","components/Menu/config.ts","components/Menu/index.tsx","hooks/useGetDocumentTitlePrice.ts","pages/App.tsx","hooks/useIsWindowVisible.ts","state/application/updater.ts","state/lists/updater.ts","utils/retry.ts","state/multicall/updater.tsx","utils/chunkArray.ts","state/transactions/updater.tsx","components/ToastListener/index.tsx","state/application/reducer.ts","state/global/actions.ts","state/user/reducer.ts","state/transactions/reducer.ts","state/swap/reducer.ts","state/mint/reducer.ts","state/lists/reducer.ts","state/burn/reducer.ts","state/multicall/reducer.ts","state/index.ts","utils/getLibrary.ts","Providers.tsx","i18n.ts","index.tsx"],"names":["GlobalStyle","createGlobalStyle","theme","colors","background","primary","RequestError","message","code","data","Error","MiniRpcProvider","chainId","url","batchWaitTimeMs","isMetaMask","host","path","nextId","batchTimeoutId","batch","clearBatch","a","console","info","fetch","method","headers","accept","body","JSON","stringify","map","item","request","response","forEach","reject","ok","status","statusText","json","byKey","reduce","memo","current","id","result","resolve","error","sendAsync","callback","params","then","jsonrpc","catch","toString","promise","Promise","push","setTimeout","this","parsed","URL","pathname","NetworkConnector","urls","defaultChainId","invariant","Object","keys","length","supportedChainIds","k","Number","providers","currentChainId","accumulator","provider","account","AbstractConnector","NETWORK_URL","process","NETWORK_CHAIN_ID","parseInt","networkLibrary","network","injected","InjectedConnector","bscConnector","BscConnector","walletconnect","WalletConnectConnector","rpc","bridge","qrcode","pollingInterval","connectorsByName","WalletLinkConnector","appName","appLogoUrl","ConnectorNames","Injected","WalletConnect","BSC","ROUTER_ADDRESS","CUB","Token","ChainId","MAINNET","CAKE","WBNB","DAI","BUSD","BTCB","USDT","UST","ETH","WETH_ONLY","WETH","BSCTESTNET","BASES_TO_CHECK_TRADES_AGAINST","CUSTOM_BASES","SUGGESTED_BASES","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","NetworkContextName","INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","ONE_BIPS","Percent","JSBI","BigInt","BIPS_BASE","ALLOWED_PRICE_IMPACT_LOW","ALLOWED_PRICE_IMPACT_MEDIUM","ALLOWED_PRICE_IMPACT_HIGH","PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN","BLOCKED_PRICE_IMPACT_NON_EXPERT","MIN_ETH","exponentiate","useActiveWeb3React","context","useWeb3ReactCore","contextNetwork","active","updateBlockNumber","createAction","toggleWalletModal","toggleSettingsMenu","addPopup","removePopup","useBlockNumber","useSelector","state","application","blockNumber","useRemovePopup","dispatch","useDispatch","useCallback","key","Column","styled","div","ColumnCenter","AutoColumn","gap","justify","fetchTokenList","pending","fulfilled","rejected","acceptListUpdate","addList","removeList","selectList","listVersionLabel","version","major","minor","patch","Row","Box","align","padding","border","borderRadius","RowBetween","RowFlat","AutoRow","RowFixed","ListUpdatePopup","popKey","listUrl","oldList","newList","auto","removeThisPopup","handleAcceptUpdate","useMemo","diffTokenLists","tokens","tokensAdded","added","tokensChanged","changed","tokensRemoved","removed","numTokensChanged","style","flex","name","fontSize","token","i","Fragment","title","address","symbol","flexGrow","marginRight","onClick","isAddress","value","getAddress","BSCSCAN_PREFIXES","56","97","getBscScanLink","type","prefix","shortenAddress","chars","substring","calculateGasMargin","mul","BigNumber","from","add","calculateSlippageAmount","slippage","divide","multiply","raw","getContract","ABI","library","AddressZero","Contract","getSigner","connectUnchecked","getProviderOrSigner","getRouterContract","_","IUniswapV2Router02ABI","LinkStyledButton","button","disabled","textSubtle","StyledInternalLink","Link","StyledLink","ExternalLink","target","href","rel","rest","handleClick","event","ctrlKey","metaKey","preventDefault","rotate","keyframes","Spinner","img","RowNoFlex","TransactionPopup","hash","success","summary","useContext","ThemeContext","paddingRight","color","size","failure","slice","StyledClose","X","Popup","invertedContrast","mediaQueries","sm","Fader","tertiary","AnimatedFader","animated","PopupItem","removeAfterMs","content","useEffect","timeout","clearTimeout","popupContent","txn","listUpdate","faderStyle","useSpring","width","to","config","duration","undefined","MobilePopupWrapper","height","MobilePopupInner","FixedPopupColumn","Popups","activePopups","list","popupList","filter","show","useActivePopups","reverse","StyledSVG","svg","stroke","Loader","viewBox","fill","xmlns","d","strokeWidth","strokeLinecap","strokeLinejoin","MessageWrapper","Message","h2","primaryDark","Web3ReactManager","children","t","useTranslation","useWeb3React","networkActive","networkError","activateNetwork","activate","triedEager","useState","tried","setTried","isAuthorized","hasSignedIn","window","localStorage","getItem","connectorLocalStorageKey","isMobile","ethereum","useEagerConnect","suppress","on","handleChainChanged","e","handleAccountsChanged","accounts","removeListener","useInactiveListener","showLoader","setShowLoader","Card","LightCard","GreyCard","AnimatedDialogOverlay","DialogOverlay","StyledDialogOverlay","AnimatedDialogContent","DialogContent","StyledDialogContent","minHeight","maxHeight","mobile","isOpen","attrs","transparentize","css","lg","Modal","onDismiss","initialFocusRef","fadeTransition","useTransition","opacity","enter","leave","props","aria-label","tabIndex","Wrapper","Section","ConfirmedIcon","BottomSection","StyledContentHeader","Heading","ContentHeader","variant","CustomLightSpinner","ConfirmationPendingContent","pendingText","src","alt","TransactionSubmittedContent","mt","TransactionConfirmationModal","attemptingTxn","ConfirmationModalContent","bottomContent","topContent","TransactionErrorContent","marginTop","textAlign","defaultTranslationState","translations","setTranslations","TranslationsContext","createContext","variableRegex","getTranslation","translationId","fallback","foundTranslation","find","translation","stringId","translatedString","text","includes","stringToReplace","exec","indexToReplace","split","indexOf","fallbackValueAtIndex","replace","replaceDynamicString","TranslateString","useI18n","StyledNav","Nav","activeIndex","scale","as","ERC20_INTERFACE","Interface","ERC20_ABI","WrappedTokenInfo","tokenInfo","tags","decimals","logoURI","EMPTY_LIST","listCache","WeakMap","useTokenList","lists","byUrl","get","tokenMap","tagId","x","Boolean","set","listToTokenMap","useSelectedListUrl","selectedListUrl","useSelectedTokenList","ADDRESS_REGEX","LOWER_HEX_REGEX","toCallKey","call","test","callData","parseCallKey","callKey","pcs","addMulticallListeners","removeMulticallListeners","fetchingMulticallResults","errorFetchingMulticallResults","updateMulticallResults","isMethodArg","isValidMethodArgs","Array","isArray","every","xi","INVALID_RESULT","valid","NEVER_RELOAD","blocksPerFetch","Infinity","useCallsData","calls","options","callResults","multicall","serializedCallKeys","c","sort","callKeys","parse","INVALID_CALL_STATE","loading","syncing","LOADING_CALL_STATE","toCallState","callResult","contractInterface","fragment","latestBlockNumber","decodeFunctionResult","useMultipleContractSingleData","addresses","methodName","callInputs","getFunction","encodeFunctionData","results","useSingleCallResult","contract","inputs","interface","updateMatchesDarkMode","updateUserDarkMode","updateUserExpertMode","updateUserSlippageTolerance","updateUserDeadline","addSerializedToken","removeSerializedToken","addSerializedPair","removeSerializedPair","muteAudio","unmuteAudio","CACHE_KEY","serializeToken","deserializeToken","serializedToken","useIsExpertMode","user","userExpertMode","useUserSlippageTolerance","userSlippageTolerance","slippageTolerance","useUserDeadline","userDeadline","deadline","useUserAddedTokens","serializedTokensMap","values","serializePair","pair","token0","token1","toV2LiquidityToken","tokenA","tokenB","Pair","useTrackedTokenPairs","useAllTokens","pinnedPairs","generatedPairs","flatMap","tokenAddress","base","p","savedSerializedPairs","pairs","userPairs","forChain","pairId","combinedList","concat","keyed","sorted","sortsBefore","MULTICALL_NETWORKS","useContract","withSignerIfPossible","useTokenContract","useENSRegistrarContract","ENS_ABI","useENSResolverContract","ENS_PUBLIC_RESOLVER_ABI","useMulticallContract","MULTICALL_ABI","userAddedTokens","allTokens","BYTES32_REGEX","parseStringOrBytes32","str","bytes32","defaultValue","parseBytes32String","useToken","tokenContract","tokenContractBytes32","ERC20_BYTES32_ABI","useBytes32TokenContract","tokenName","tokenNameBytes32","symbolBytes32","useCurrency","currencyId","isBNB","toUpperCase","ETHER","useETHBalances","uncheckedAddresses","multicallContract","useSingleContractMultipleData","CurrencyAmount","ether","useTokenBalancesWithLoadingIndicator","validatedTokens","balances","vt","anyLoading","some","callState","amount","TokenAmount","useTokenBalances","useTokenBalance","tokenBalances","useCurrencyBalances","currencies","currency","ethBalance","useCurrencyBalance","useLast","filterFn","last","setLast","prev","isDefined","UTF_8_DECODER","TextDecoder","contenthashToUri","contenthash","buff","hex","startsWith","substr","arr","Uint8Array","hexToUint8Array","codec","getCodec","rmPrefix","cid","CID","toB58String","multihash","decode","digest","trim","ENS_NAME_REGEX","parseENSAddress","ensAddress","match","ensName","toLowerCase","ensPath","uriToHttp","uri","isZero","hexNumberString","useHttpLocations","ens","resolvedContentHash","ensNodeArgument","namehash","resolverAddressResult","resolverAddress","useENSContentHash","BAD_SRCS","Logo","srcs","refresh","s","onError","StyledListLogo","ListLogo","useInterval","delay","leading","savedCallback","useRef","tick","setInterval","clearInterval","PopoverContainer","ReferenceElement","Arrow","Popover","placement","referenceElement","setReferenceElement","popperElement","setPopperElement","arrowElement","setArrowElement","usePopper","strategy","modifiers","offset","element","styles","update","attributes","ref","popper","className","arrow","TooltipContainer","Tooltip","MouseoverTooltip","setShow","open","close","onMouseEnter","onMouseLeave","QuestionWrapper","QuestionHelper","marginLeft","CoinLogo","getTokenLogoURL","StyledBnbLogo","StyledLogo","CurrencyLogo","uriLocations","BaseWrapper","disable","CommonBases","onSelect","selectedCurrency","currencyEquals","selected","FadedSpan","PaddedColumn","MenuItem","SearchInput","input","textDisabled","Separator","SeparatorDark","currencyKey","StyledBalanceText","Text","Tag","Balance","balance","toExact","toSignificant","TagContainer","TokenTags","tag","description","join","CurrencyRow","isSelected","otherSelected","isOnSelectedList","defaultTokens","isTokenOnList","customAdded","useIsUserAddedToken","removeToken","useRemoveUserAddedToken","addToken","useAddUserToken","stopPropagation","justifySelf","CurrencyList","onCurrencySelect","otherCurrency","fixedListRef","showETH","itemData","Currency","index","itemKey","itemCount","itemSize","filterTokens","search","searchingAddress","lowerSearchParts","matchesSearch","sParts","sp","endsWith","FilterWrapper","SortButton","toggleSortOrder","ascending","useTokenComparator","inverted","useAllTokenBalances","comparator","balanceA","balanceB","balanceComp","greaterThan","equalTo","getTokenComparator","CurrencySearch","otherSelectedCurrency","showCommonBases","onChangeList","fixedList","searchQuery","setSearchQuery","invertSearchOrder","setInvertSearchOrder","isAddressSearch","searchToken","tokenComparator","audioPlay","filteredTokens","filteredSortedTokens","symbolMatch","handleCurrencySelect","audio","document","getElementById","play","inputRef","handleInput","checksummedInput","scrollTo","handleEnter","selectedUrl","listsByUrl","pendingUpdate","loadingRequestId","useSelectedListInfo","placeholder","onChange","onKeyDown","iso","disableWidth","DEFAULT_TOKEN_LIST_URL","DEFAULT_LIST_OF_LISTS","tokenListValidator","Ajv","allErrors","compile","schema","getTokenList","resolveENSContentHash","defaultTokenJson","parsedENS","contentHashUri","translatedUri","isLast","validationErrors","errors","dataPath","REGISTRAR_ABI","constant","outputs","payable","stateMutability","REGISTRAR_ADDRESS","RESOLVER_ABI","internalType","resolverContract","ensRegistrarContract","resolver","useFetchListCallback","ensResolver","Web3Provider","getNetworkLibrary","requestId","nanoid","tokenList","errorMessage","useOnClickOutside","node","handler","handlerRef","handleClickOutside","contains","addEventListener","removeEventListener","UnpaddedLinkStyledButton","StyledMenu","StyledListUrlText","ListOrigin","lowerListUrl","listUrlRowHTMLId","ListRow","onBack","initialState","setState","toggle","useToggle","selectThisList","handleAcceptListUpdate","handleRemoveList","prompt","bold","overflow","textOverflow","display","minWidth","ListContainer","ListSelect","listUrlInput","setListUrlInput","adding","addError","setAddError","fetchList","handleAddList","validUrl","handleEnterKey","sortedLists","u1","u2","l1","l2","cursor","maxWidth","CurrencySearchModal","listView","setListView","lastOpen","handleClickChangeList","handleClickBack","noListSelected","sizeraw","margin","HigherLogo","CoveredLogo","DoubleCurrencyLogo","currency0","currency1","StyledInput","inputRegex","RegExp","Input","React","onUserInput","nextUserInput","inputMode","autoComplete","autoCorrect","pattern","minLength","maxLength","spellCheck","InputRow","CurrencySelect","darken","LabelRow","Aligner","span","InputPanel","hideInput","Container","shadows","inset","CurrencyInputPanel","onMax","showMaxButton","label","disableCurrencySelect","hideBalance","modalOpen","setModalOpen","selectedCurrencyBalance","translatedLabel","handleDismissSearch","val","Tabs","ActiveText","StyledArrowLeft","ArrowLeft","FindPoolTabs","AddRemoveTabs","useTotalSupply","totalSupply","wrappedCurrency","wrappedCurrencyAmount","currencyAmount","unwrappedToken","equals","ArrowWrapper","clickable","SectionBreak","BottomGrouping","ErrorText","severity","binance","StyledBalanceMaxMini","Dots","SwapCallbackErrorInner","SwapCallbackErrorInnerAlertTriangle","SwapCallbackError","SwapShowAcceptChanges","FixedHeightRow","HoverCard","MinimalPositionCard","showUnwrapped","showMore","setShowMore","userPoolBalance","liquidityToken","totalPoolTokens","greaterThanOrEqual","getLiquidityValue","token0Deposited","token1Deposited","textTransform","fontWeight","ml","FullPositionCard","removeOnly","poolTokenPercentage","toFixed","PairState","PAIR_INTERFACE","IUniswapV2PairABI","usePairs","currencyA","currencyB","reserves","LOADING","INVALID","NOT_EXISTS","reserve0","reserve1","EXISTS","usePair","useTokenAllowance","owner","spender","allowance","Field","selectCurrency","switchCurrencies","typeInput","replaceSwapState","setRecipient","addTransaction","clearAllTransactions","finalizeTransaction","checkedTransaction","useTransactionAdder","approval","useAllTransactions","transactions","isTransactionRecent","tx","Date","getTime","addedTime","ApprovalState","BASE_FEE","ONE_HUNDRED_PERCENT","INPUT_FRACTION_AFTER_FEE","subtract","computeTradePriceBreakdown","trade","realizedLPFee","route","currentFee","priceImpactWithoutFeeFraction","priceImpact","priceImpactWithoutFee","numerator","denominator","inputAmount","quotient","computeSlippageAdjustedAmounts","allowedSlippage","num","pct","Math","floor","INPUT","maximumAmountIn","OUTPUT","minimumAmountOut","warningSeverity","lessThan","formatExecutionPrice","executionPrice","invert","outputAmount","useApproveCallback","amountToApprove","currentAllowance","pendingApproval","allTransactions","receipt","useHasPendingApproval","approvalState","APPROVED","PENDING","NOT_APPROVED","UNKNOWN","approve","useExact","estimateGas","MaxUint256","estimatedGas","gasLimit","resetMintState","useDebounce","debouncedValue","setDebouncedValue","useENS","nameOrAddress","validated","reverseLookup","debouncedAddress","ENSName","useENSName","lookup","debouncedName","addr","useENSAddress","useAllCommonPairs","bases","basePairs","otherBase","t0","t1","allPairs","customBases","customBasesA","customBasesB","curr","useSwapState","swap","tryParseAmount","typedValueParsed","parseUnits","BAD_RECIPIENT_ADDRESSES","involvesAddress","checksummedAddress","useDerivedSwapInfo","inputError","independentField","typedValue","inputCurrencyId","outputCurrencyId","recipient","inputCurrency","outputCurrency","recipientLookup","relevantTokenBalances","isExactIn","parsedAmount","bestTradeExactIn","currencyAmountIn","currencyOut","allowedPairs","Trade","maxHops","maxNumResults","useTradeExactIn","bestTradeExactOut","currencyIn","currencyAmountOut","useTradeExactOut","v2Trade","currencyBalances","formattedTo","slippageAdjustedAmounts","balanceIn","amountIn","parseCurrencyFromURLParameter","urlParam","queryParametersToSwapState","parsedQs","validatedRecipient","exactAmount","isNaN","parseFloat","parseIndependentFieldURLParameter","exactField","useDefaultsFromURLSearch","useLocation","parseArrays","ignoreQueryPrefix","useParsedQueryString","setResult","field","ZERO","useMintState","mint","maxAmountSpend","Pane","borderColor","xs","isDark","toastsSlice","createSlice","reducers","action","payload","toastIndex","findIndex","toast","splice","unshift","remove","clear","actions","useToast","pushToast","toastError","kebabCase","toastTypes","DANGER","toastInfo","INFO","toastSuccess","SUCCESS","toastWarning","WARNING","removeToast","clearToast","useAuth","deactivate","login","connectorID","connector","removeItem","UnsupportedChainIdError","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","walletConnectProvider","logout","UnlockButton","onPresentConnectModal","useWalletModal","BodyWrapper","AppBody","ClickableText","ConfirmAddModalBottom","noLiquidity","price","parsedAmounts","onAdd","CURRENCY_A","CURRENCY_B","justifyContent","PoolPriceBar","pt","AddLiquidity","currencyIdA","currencyIdB","history","oneCurrencyIsWBNB","expertMode","otherTypedValue","dependentField","pairState","equal","independentAmount","dependentAmount","wrappedIndependentAmount","dependentCurrency","dependentTokenAmount","priceOf","quote","currencyAAmount","currencyBAmount","Price","wrappedCurrencyA","liquidityMinted","tokenAmountA","tokenAmountB","getLiquidityMinted","useDerivedMintInfo","onFieldAInput","onFieldBInput","useMintActionHandlers","isValid","showConfirm","setShowConfirm","setAttemptingTxn","txHash","setTxHash","formattedAmounts","maxAmounts","atMaxAmounts","approvalA","approveACallback","approvalB","approveBCallback","router","parsedAmountA","parsedAmountB","amountsMin","deadlineFromNow","ceil","now","tokenBIsBNB","estimate","addLiquidityETH","args","addLiquidity","estimatedGasLimit","modalHeader","mr","small","fontStyle","modalBottom","handleCurrencyASelect","currA","newCurrencyIdA","handleCurrencyBSelect","currB","newCurrencyIdB","handleDismissConfirmation","CardNav","mb","ConnectWalletButton","OLD_PATH_STRUCTURE","RedirectOldAddLiquidityPathStructure","RedirectDuplicateTokenIds","RedirectOldRemoveLiquidityPathStructure","Fields","Option","Options","predefinedValues","SlippageToleranceSettings","translateString","setUserslippageTolerance","setValue","setError","rawValue","alignItems","predefinedValue","step","min","evt","inputValue","isWarning","TransactionDeadlineSetting","setDeadline","AudioSetting","useMatchBreakpoints","isSm","isXs","toggleSetAudioMode","useAudioModeManager","checked","defaultOnDismiss","SettingsModal","SlippageToleranceSetting","newTransactionsFirst","b","RecentTransactionsModal","sortedRecentTransactions","flexDirection","sortedRecentTransaction","icon","getRowStatus","StyledPageHeader","Details","PageHeader","useModal","onPresentSettings","onPresentRecentTransactions","Pool","trackedTokenPairs","tokenPairsWithLiquidityTokens","tpwlt","v2PairsBalances","fetchingV2PairBalances","liquidityTokensWithBalances","v2Pairs","v2IsLoading","V2Pair","allV2PairsWithLiquidity","v2Pair","PoolFinder","showSearch","setShowSearch","TOKEN1","activeField","setActiveField","setCurrency0","setCurrency1","addPair","serializedPair","usePairAdder","validPairNoLiquidity","position","hasPosition","TOKEN0","handleSearchDismiss","prerequisiteMessage","startIcon","endIcon","justifyItems","backgroundColor","StyledRangeInput","Slider","max","changeCallback","aria-labelledby","useBurnState","burn","OutlineCard","Body","RemoveLiquidity","userLiquidity","LIQUIDITY","liquidityValueA","liquidityValueB","liquidityValues","percentToRemove","LIQUIDITY_PERCENT","liquidityValue","useDerivedBurnInfo","_onUserInput","useBurnActionHandlers","showDetailed","setShowDetailed","atMaxAmount","pairContract","signatureData","setSignatureData","approveCallback","liquidityAmount","nonces","nonce","deadlineForSignature","EIP712Domain","domain","verifyingContract","Permit","toHexString","types","primaryType","send","splitSignature","signature","v","r","onLiquidityInput","onCurrencyAInput","onCurrencyBInput","onRemove","currencyAmountA","currencyAmountB","currencyBIsETH","oneCurrencyIsETH","methodNames","all","safeGasEstimates","indexOfSuccessfulEstimation","safeGasEstimate","isBigNumber","liquidityPercentChangeCallback","oneCurrencyIsWETH","handleSelectCurrencyA","handleSelectCurrencyB","debouncedMs","inner","setInner","timer","onChangeInner","newValue","useDebouncedChangeHandler","innerLiquidityPercentage","setInnerLiquidityPercentage","paddingBottom","ContainerRow","InputContainer","AddressInputPanel","withoutSpaces","autoCapitalize","FormattedPriceImpact","SwapModalFooter","onConfirm","swapErrorMessage","disabledConfirm","showInverted","setShowInverted","paddingLeft","tradeType","TradeType","EXACT_INPUT","PriceInfoText","SwapModalHeader","showAcceptChanges","onAcceptChanges","priceImpactSeverity","EXACT_OUTPUT","ConfirmSwapModal","originalTrade","tradeB","tradeA","confirmationContent","px","py","my","flexWrap","isLastItem","flexShrink","TradeSummary","AdvancedSwapDetails","showRoute","AdvancedDetailsFooter","AdvancedSwapDetailsDropdown","lastTrade","TradePrice","formattedPrice","baseCurrency","quoteCurrency","WarningContainer","StyledWarningIcon","AlertTriangle","TokenWarningCard","tokenSymbol","duplicateNameOrSymbol","userToken","TokenWarningModal","understandChecked","setUnderstandChecked","toggleUnderstand","uc","handleDismiss","htmlFor","userSelect","SyrupWarningModal","transactionType","SafeMoonWarningModal","SwapCallbackState","Grouping","Circle","confirmed","backgroundDisabled","CircleRow","Connector","prevConfirmed","ProgressCircles","steps","useSwapCallArguments","recipientAddressOrName","recipientAddress","swapMethods","Router","swapCallParameters","feeOnTransfer","ttl","parameters","useSwapCallback","swapCalls","VALID","gasEstimate","gasError","callStatic","callError","reason","estimatedCalls","successfulEstimation","el","ix","errorCalls","inputSymbol","outputSymbol","withRecipient","WrapType","NOT_APPLICABLE","wrapType","useWrapCallback","wethContract","WETH_ABI","useWETHContract","sufficientBalance","WRAP","execute","deposit","txReceipt","UNWRAP","withdraw","Swap","loadedUrlParams","loadedInputCurrency","loadedOutputCurrency","dismissTokenWarning","setDismissTokenWarning","selectedToken","purchaseType","transactionWarning","setTransactionWarning","urlLoadedTokens","handleConfirmTokenWarning","handleConfirmWarning","toggleSetExpertMode","useExpertModeManager","isExpertMode","swapInputError","onWrap","wrapInputError","showWrap","onCurrencySelection","onSwitchTokens","onChangeRecipient","useSwapActionHandlers","handleTypeInput","handleTypeOutput","tradeToConfirm","setSwapState","userHasSpecifiedInputOutput","noRoute","useApproveCallbackFromTrade","approvalSubmitted","setApprovalSubmitted","maxAmountInput","atMaxAmountInput","swapCallback","swapCallbackError","handleSwap","confirm","confirmPriceImpactWithoutFee","prevState","showApproveFlow","handleConfirmDismiss","handleAcceptChanges","checkForWarning","handleInputSelect","handleMaxInput","handleOutputSelect","otherProjects","FoldableContent","CardBody","isVisible","FirstCard","setIsVisible","external","expanded","project","ArrowSeparator","SecondCard","Flex","StyledExpandableLabelWrapper","StyledChildrenFlex","isExpanded","inputSecondary","FoldableText","setIsExpanded","pb","gradients","violetAlt","FAQ","Header","bubblegum","Migration","RedirectPathToSwapOnly","location","EN","language","allLanguages","defaultLanguageState","selectedLanguage","setSelectedLanguage","translatedLanguage","setTranslatedLanguage","LanguageContext","toggleTheme","ThemeContextProvider","isDarkUserSetting","setIsDark","Provider","setItem","dark","light","useTheme","StyledThemeCopntext","useGetPriceData","setData","res","fetchData","profileLink","noProfileLink","useGetLocalProfile","profile","setProfile","localData","Cookies","localProfile","prevProfile","username","image","avatar","items","Menu","priceData","cakePriceUsd","links","currentLang","langs","setLang","useGetDocumentTitlePrice","cakePriceUsdString","toLocaleString","minimumFractionDigits","maximumFractionDigits","AppWrapper","App","apiKey","REACT_APP_CROWDIN_APIKEY","projectId","REACT_APP_CROWDIN_PROJECTID","credentials","stringTranslationsApi","StringTranslations","storedLangCode","storedLang","getStoredLang","fetchTranslationsForSelectedLanguage","listLanguageTranslations","translationApiResponse","langObject","exact","strict","component","VISIBILITY_STATE_SUPPORTED","isWindowVisible","visibilityState","useIsWindowVisible","focused","setFocused","listener","Updater","windowVisible","blockNumberCallback","getBlockNumber","debouncedState","bump","getVersionUpgrade","VersionUpgrade","NONE","PATCH","MINOR","minVersionBump","MAJOR","waitRandom","ms","round","random","CancelledError","RetryableError","chunk","minBlockNumber","aggregate","obj","resultsBlockNumber","returnData","toNumber","debouncedListeners","callListeners","cancellations","listeningKeys","allListeners","listeners","keyListeners","previousMin","activeListeningKeys","unserializedOutdatedCallKeys","minDataBlockNumber","fetchingBlockNumber","outdatedListeningKeys","serializedOutdatedCallKeys","outdatedCallKeys","chunkedCalls","maxChunkSize","numChunks","chunkSize","chunkArray","fn","rejectCancelled","n","minWait","maxWait","completed","cancel","retry","fetchChunk","fetchBlockNumber","firstCallKeyIndex","lastCallKeyIndex","lastBlockNumber","useAddPopup","lastCheckedBlockNumber","blocksSinceCheck","minutesPending","shouldCheck","getTransactionReceipt","blockHash","contractAddress","transactionHash","transactionIndex","ToastListener","toasts","createReducer","walletModalOpen","settingsMenuOpen","builder","addCase","popup","updateVersion","currentTimestamp","pairKey","token0Address","token1Address","userDarkMode","matchesDarkMode","timestamp","lastUpdateVersionTimestamp","tokenAAddress","tokenBAddress","txs","confirmedTime","otherField","NEW_LIST_STATE","lastInitializedDefaultListOfLists","DEFAULT_LIST","lastInitializedSet","l","Set","newListOfListsSet","has","PERSISTED_KEYS","loadedState","load","states","cache","rawCache","getThemeCache","store","configureStore","reducer","middleware","getDefaultMiddleware","thunk","save","preloadedState","getLibrary","Web3ProviderNetwork","createWeb3ReactRoot","Providers","i18next","use","XHR","LanguageDetector","initReactI18next","init","backend","loadPath","react","useSuspense","fallbackLng","preload","keySeparator","interpolation","escapeValue","autoRefreshOnNetworkChange","ReactDOM","render","Global"],"mappings":"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","file":"static/js/main.7954ea12.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components'\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  body {\r\n    background-color: ${({ theme }) => theme.colors.background};\r\n\r\n    img {\r\n      height: auto;\r\n      max-width: 100%;\r\n    }\r\n  }\r\n\r\n  ul {\r\n    list-style: none; \r\n  }\r\n\r\n  li {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n\r\n  li::before {\r\n    content: \"•\";\r\n    color: ${({ theme }) => theme.colors.primary};\r\n    margin-right: 8px;\r\n  }\r\n`\r\n\r\nexport default GlobalStyle\r\n","import { ConnectorUpdate } from '@web3-react/types'\r\nimport { AbstractConnector } from '@web3-react/abstract-connector'\r\nimport invariant from 'tiny-invariant'\r\n\r\ninterface NetworkConnectorArguments {\r\n  urls: { [chainId: number]: string }\r\n  defaultChainId?: number\r\n}\r\n\r\n// taken from ethers.js, compatible interface with web3 provider\r\ntype AsyncSendable = {\r\n  isMetaMask?: boolean\r\n  host?: string\r\n  path?: string\r\n  sendAsync?: (request: any, callback: (error: any, response: any) => void) => void\r\n  send?: (request: any, callback: (error: any, response: any) => void) => void\r\n}\r\n\r\nclass RequestError extends Error {\r\n  constructor(message: string, public code: number, public data?: unknown) {\r\n    super(message)\r\n  }\r\n}\r\n\r\ninterface BatchItem {\r\n  request: { jsonrpc: '2.0'; id: number; method: string; params: unknown }\r\n  resolve: (result: any) => void\r\n  reject: (error: Error) => void\r\n}\r\n\r\nclass MiniRpcProvider implements AsyncSendable {\r\n  public readonly isMetaMask: false = false\r\n\r\n  public readonly chainId: number\r\n\r\n  public readonly url: string\r\n\r\n  public readonly host: string\r\n\r\n  public readonly path: string\r\n\r\n  public readonly batchWaitTimeMs: number\r\n\r\n  private nextId = 1\r\n\r\n  private batchTimeoutId: ReturnType<typeof setTimeout> | null = null\r\n\r\n  private batch: BatchItem[] = []\r\n\r\n  constructor(chainId: number, url: string, batchWaitTimeMs?: number) {\r\n    this.chainId = chainId\r\n    this.url = url\r\n    const parsed = new URL(url)\r\n    this.host = parsed.host\r\n    this.path = parsed.pathname\r\n    // how long to wait to batch calls\r\n    this.batchWaitTimeMs = batchWaitTimeMs ?? 50\r\n  }\r\n\r\n  public readonly clearBatch = async () => {\r\n    console.info('Clearing batch', this.batch)\r\n    const { batch } = this\r\n    this.batch = []\r\n    this.batchTimeoutId = null\r\n    let response: Response\r\n    try {\r\n      response = await fetch(this.url, {\r\n        method: 'POST',\r\n        headers: { 'content-type': 'application/json', accept: 'application/json' },\r\n        body: JSON.stringify(batch.map((item) => item.request)),\r\n      })\r\n    } catch (error) {\r\n      batch.forEach(({ reject }) => reject(new Error('Failed to send batch call')))\r\n      return\r\n    }\r\n\r\n    if (!response.ok) {\r\n      batch.forEach(({ reject }) => reject(new RequestError(`${response.status}: ${response.statusText}`, -32000)))\r\n      return\r\n    }\r\n\r\n    let json\r\n    try {\r\n      json = await response.json()\r\n    } catch (error) {\r\n      batch.forEach(({ reject }) => reject(new Error('Failed to parse JSON response')))\r\n      return\r\n    }\r\n    const byKey = batch.reduce<{ [id: number]: BatchItem }>((memo, current) => {\r\n      memo[current.request.id] = current\r\n      return memo\r\n    }, {})\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    for (const result of json) {\r\n      const {\r\n        resolve,\r\n        reject,\r\n        request: { method },\r\n      } = byKey[result.id]\r\n      // @ts-ignore\r\n      if (resolve && reject) {\r\n        if ('error' in result) {\r\n          reject(new RequestError(result?.error?.message, result?.error?.code, result?.error?.data))\r\n        } else if ('result' in result) {\r\n          resolve(result.result)\r\n        } else {\r\n          reject(new RequestError(`Received unexpected JSON-RPC response to ${method} request.`, -32000, result))\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public readonly sendAsync = (\r\n    request: { jsonrpc: '2.0'; id: number | string | null; method: string; params?: any },\r\n    callback: (error: any, response: any) => void\r\n  ): void => {\r\n    this.request(request.method, request.params)\r\n      .then((result) => callback(null, { jsonrpc: '2.0', id: request.id, result }))\r\n      .catch((error) => callback(error, null))\r\n  }\r\n\r\n  public readonly request = async (\r\n    method: string | { method: string; params: unknown[] },\r\n    params?: any\r\n  ): Promise<unknown> => {\r\n    if (typeof method !== 'string') {\r\n      return this.request(method.method, method.params)\r\n    }\r\n    if (method === 'eth_chainId') {\r\n      return `0x${this.chainId.toString(16)}`\r\n    }\r\n    const promise = new Promise((resolve, reject) => {\r\n      this.batch.push({\r\n        request: {\r\n          jsonrpc: '2.0',\r\n          id: this.nextId++,\r\n          method,\r\n          params,\r\n        },\r\n        resolve,\r\n        reject,\r\n      })\r\n    })\r\n    this.batchTimeoutId = this.batchTimeoutId ?? setTimeout(this.clearBatch, this.batchWaitTimeMs)\r\n    return promise\r\n  }\r\n}\r\n\r\nexport class NetworkConnector extends AbstractConnector {\r\n  private readonly providers: { [chainId: number]: MiniRpcProvider }\r\n\r\n  private currentChainId: number\r\n\r\n  constructor({ urls, defaultChainId }: NetworkConnectorArguments) {\r\n    invariant(defaultChainId || Object.keys(urls).length === 1, 'defaultChainId is a required argument with >1 url')\r\n    super({ supportedChainIds: Object.keys(urls).map((k): number => Number(k)) })\r\n\r\n    this.currentChainId = defaultChainId || Number(Object.keys(urls)[0])\r\n    this.providers = Object.keys(urls).reduce<{ [chainId: number]: MiniRpcProvider }>((accumulator, chainId) => {\r\n      accumulator[Number(chainId)] = new MiniRpcProvider(Number(chainId), urls[Number(chainId)])\r\n      return accumulator\r\n    }, {})\r\n  }\r\n\r\n  public get provider(): MiniRpcProvider {\r\n    return this.providers[this.currentChainId]\r\n  }\r\n\r\n  public async activate(): Promise<ConnectorUpdate> {\r\n    return { provider: this.providers[this.currentChainId], chainId: this.currentChainId, account: null }\r\n  }\r\n\r\n  public async getProvider(): Promise<MiniRpcProvider> {\r\n    return this.providers[this.currentChainId]\r\n  }\r\n\r\n  public async getChainId(): Promise<number> {\r\n    return this.currentChainId\r\n  }\r\n\r\n  public async getAccount(): Promise<null> {\r\n    return null\r\n  }\r\n\r\n  public deactivate() {\r\n    return null\r\n  }\r\n}\r\n\r\nexport default NetworkConnector\r\n","import { ConnectorNames } from '@pancakeswap-libs/uikit'\r\nimport { Web3Provider } from '@ethersproject/providers'\r\nimport { InjectedConnector } from '@web3-react/injected-connector'\r\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\r\nimport { WalletLinkConnector } from '@web3-react/walletlink-connector'\r\nimport { BscConnector } from '@binance-chain/bsc-connector'\r\nimport { NetworkConnector } from './NetworkConnector'\r\n\r\nconst NETWORK_URL = process.env.REACT_APP_NETWORK_URL\r\n\r\nexport const NETWORK_CHAIN_ID: number = parseInt(process.env.REACT_APP_CHAIN_ID ?? '56')\r\n\r\nif (typeof NETWORK_URL === 'undefined') {\r\n  throw new Error(`REACT_APP_NETWORK_URL must be a defined environment variable`)\r\n}\r\n\r\nexport const network = new NetworkConnector({\r\n  urls: { [NETWORK_CHAIN_ID]: NETWORK_URL },\r\n})\r\n\r\nlet networkLibrary: Web3Provider | undefined\r\nexport function getNetworkLibrary(): Web3Provider {\r\n  // eslint-disable-next-line no-return-assign\r\n  return (networkLibrary = networkLibrary ?? new Web3Provider(network.provider as any))\r\n}\r\n\r\nexport const injected = new InjectedConnector({\r\n  supportedChainIds: [56, 97],\r\n})\r\n\r\nexport const bscConnector = new BscConnector({ supportedChainIds: [56] })\r\n\r\n// mainnet only\r\nexport const walletconnect = new WalletConnectConnector({\r\n  rpc: { [NETWORK_CHAIN_ID]: NETWORK_URL },\r\n  bridge: 'https://bridge.walletconnect.org',\r\n  qrcode: true,\r\n  pollingInterval: 15000,\r\n})\r\n\r\n// mainnet only\r\nexport const walletlink = new WalletLinkConnector({\r\n  url: NETWORK_URL,\r\n  appName: 'Uniswap',\r\n  appLogoUrl:\r\n    'https://mpng.pngfly.com/20181202/bex/kisspng-emoji-domain-unicorn-pin-badges-sticker-unicorn-tumblr-emoji-unicorn-iphoneemoji-5c046729264a77.5671679315437924251569.jpg',\r\n})\r\n\r\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\r\n  [ConnectorNames.Injected]: injected,\r\n  [ConnectorNames.WalletConnect]: walletconnect,\r\n  [ConnectorNames.BSC]: bscConnector,\r\n}\r\n","import { ChainId, JSBI, Percent, Token, WETH } from '@pancakeswap-libs/sdk'\r\n\r\nexport const ROUTER_ADDRESS = '0x05fF2B0DB69458A0750badebc4f9e13aDd608C7F'\r\n\r\n// a list of tokens by chain\r\ntype ChainTokenList = {\r\n  readonly [chainId in ChainId]: Token[]\r\n}\r\n\r\nexport const CUB = new Token(\r\n  ChainId.MAINNET,\r\n  '0x50d809c74e0b8e49e7b4c65bb3109abe3ff4c1c1',\r\n  18,\r\n  'CUB',\r\n  'Cub Finance Token'\r\n)\r\n\r\nexport const CAKE = new Token(\r\n  ChainId.MAINNET,\r\n  '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\r\n  18,\r\n  'CAKE',\r\n  'PancakeSwap Token'\r\n)\r\nexport const WBNB = new Token(ChainId.MAINNET, '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', 18, 'WBNB', 'Wrapped BNB')\r\nexport const DAI = new Token(ChainId.MAINNET, '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3', 18, 'DAI', 'Dai Stablecoin')\r\nexport const BUSD = new Token(ChainId.MAINNET, '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56', 18, 'BUSD', 'Binance USD')\r\nexport const BTCB = new Token(ChainId.MAINNET, '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c', 18, 'BTCB', 'Binance BTC')\r\nexport const USDT = new Token(ChainId.MAINNET, '0x55d398326f99059fF775485246999027B3197955', 18, 'USDT', 'Tether USD')\r\nexport const UST = new Token(\r\n  ChainId.MAINNET,\r\n  '0x23396cF899Ca06c4472205fC903bDB4de249D6fC',\r\n  18,\r\n  'UST',\r\n  'Wrapped UST Token'\r\n)\r\nexport const ETH = new Token(\r\n  ChainId.MAINNET,\r\n  '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\r\n  18,\r\n  'ETH',\r\n  'Binance-Peg Ethereum Token'\r\n)\r\n\r\nconst WETH_ONLY: ChainTokenList = {\r\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET]],\r\n  [ChainId.BSCTESTNET]: [WETH[ChainId.BSCTESTNET]],\r\n}\r\n\r\n// used to construct intermediary pairs for trading\r\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\r\n  ...WETH_ONLY,\r\n  [ChainId.MAINNET]: [...WETH_ONLY[ChainId.MAINNET], DAI, BUSD, BTCB, USDT, UST, ETH],\r\n}\r\n\r\n/**\r\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\r\n * tokens.\r\n */\r\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\r\n  [ChainId.MAINNET]: {},\r\n}\r\n\r\n// used for display in the default list when adding liquidity\r\nexport const SUGGESTED_BASES: ChainTokenList = {\r\n  ...WETH_ONLY,\r\n  [ChainId.MAINNET]: [...WETH_ONLY[ChainId.MAINNET], DAI, BUSD, USDT],\r\n}\r\n\r\n// used to construct the list of all pairs we consider by default in the frontend\r\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\r\n  ...WETH_ONLY,\r\n  [ChainId.MAINNET]: [...WETH_ONLY[ChainId.MAINNET], DAI, BUSD, BTCB, USDT],\r\n}\r\n\r\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\r\n  [ChainId.MAINNET]: [\r\n    [CAKE, WBNB],\r\n    [BUSD, USDT],\r\n    [DAI, USDT],\r\n  ],\r\n}\r\n\r\nexport const NetworkContextName = 'NETWORK'\r\n\r\n// default allowed slippage, in bips\r\nexport const INITIAL_ALLOWED_SLIPPAGE = 80\r\n// 20 minutes, denominated in seconds\r\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\r\n\r\n// one basis point\r\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\r\nexport const BIPS_BASE = JSBI.BigInt(10000)\r\n// used for warning states\r\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\r\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\r\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\r\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\r\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\r\n// for non expert mode disable swaps above this\r\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\r\n\r\n// used to ensure the user doesn't send so much ETH so they end up with <.01\r\nexport const MIN_ETH: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 ETH\r\n","import { Web3Provider } from '@ethersproject/providers'\r\nimport { ChainId } from '@pancakeswap-libs/sdk'\r\nimport { connectorLocalStorageKey } from '@pancakeswap-libs/uikit'\r\nimport { useWeb3React as useWeb3ReactCore } from '@web3-react/core'\r\n// eslint-disable-next-line import/no-unresolved\r\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types'\r\nimport { useEffect, useState } from 'react'\r\nimport { isMobile } from 'react-device-detect'\r\nimport { injected } from '../connectors'\r\nimport { NetworkContextName } from '../constants'\r\n\r\nexport function useActiveWeb3React(): Web3ReactContextInterface<Web3Provider> & { chainId?: ChainId } {\r\n  const context = useWeb3ReactCore<Web3Provider>()\r\n  const contextNetwork = useWeb3ReactCore<Web3Provider>(NetworkContextName)\r\n  return context.active ? context : contextNetwork\r\n}\r\n\r\nexport function useEagerConnect() {\r\n  const { activate, active } = useWeb3ReactCore() // specifically using useWeb3ReactCore because of what this hook does\r\n  const [tried, setTried] = useState(false)\r\n\r\n  useEffect(() => {\r\n    injected.isAuthorized().then((isAuthorized) => {\r\n      const hasSignedIn = window.localStorage.getItem(connectorLocalStorageKey)\r\n      if (isAuthorized && hasSignedIn) {\r\n        activate(injected, undefined, true).catch(() => {\r\n          setTried(true)\r\n        })\r\n      } else if (isMobile && window.ethereum && hasSignedIn) {\r\n        activate(injected, undefined, true).catch(() => {\r\n          setTried(true)\r\n        })\r\n      } else {\r\n        setTried(true)\r\n      }\r\n    })\r\n  }, [activate]) // intentionally only running on mount (make sure it's only mounted once :))\r\n\r\n  // if the connection worked, wait until we get confirmation of that to flip the flag\r\n  useEffect(() => {\r\n    if (active) {\r\n      setTried(true)\r\n    }\r\n  }, [active])\r\n\r\n  return tried\r\n}\r\n\r\n/**\r\n * Use for network and injected - logs user in\r\n * and out after checking what network theyre on\r\n */\r\nexport function useInactiveListener(suppress = false) {\r\n  const { active, error, activate } = useWeb3ReactCore() // specifically using useWeb3React because of what this hook does\r\n\r\n  useEffect(() => {\r\n    const { ethereum } = window\r\n\r\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\r\n      const handleChainChanged = () => {\r\n        // eat errors\r\n        activate(injected, undefined, true).catch((e) => {\r\n          console.error('Failed to activate after chain changed', e)\r\n        })\r\n      }\r\n\r\n      const handleAccountsChanged = (accounts: string[]) => {\r\n        if (accounts.length > 0) {\r\n          // eat errors\r\n          activate(injected, undefined, true).catch((e) => {\r\n            console.error('Failed to activate after accounts changed', e)\r\n          })\r\n        }\r\n      }\r\n\r\n      ethereum.on('chainChanged', handleChainChanged)\r\n      ethereum.on('accountsChanged', handleAccountsChanged)\r\n\r\n      return () => {\r\n        if (ethereum.removeListener) {\r\n          ethereum.removeListener('chainChanged', handleChainChanged)\r\n          ethereum.removeListener('accountsChanged', handleAccountsChanged)\r\n        }\r\n      }\r\n    }\r\n    return undefined\r\n  }, [active, error, suppress, activate])\r\n}\r\n","import { createAction } from '@reduxjs/toolkit'\r\nimport { TokenList } from '@uniswap/token-lists'\r\n\r\nexport type PopupContent =\r\n  | {\r\n      txn: {\r\n        hash: string\r\n        success: boolean\r\n        summary?: string\r\n      }\r\n    }\r\n  | {\r\n      listUpdate: {\r\n        listUrl: string\r\n        oldList: TokenList\r\n        newList: TokenList\r\n        auto: boolean\r\n      }\r\n    }\r\n\r\nexport const updateBlockNumber = createAction<{ chainId: number; blockNumber: number }>('app/updateBlockNumber')\r\nexport const toggleWalletModal = createAction<void>('app/toggleWalletModal')\r\nexport const toggleSettingsMenu = createAction<void>('app/toggleSettingsMenu')\r\nexport const addPopup = createAction<{ key?: string; removeAfterMs?: number | null; content: PopupContent }>(\r\n  'app/addPopup'\r\n)\r\nexport const removePopup = createAction<{ key: string }>('app/removePopup')\r\n","import { useCallback, useMemo } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport { addPopup, PopupContent, removePopup, toggleWalletModal, toggleSettingsMenu } from './actions'\r\nimport { AppState } from '../index'\r\n\r\nexport function useBlockNumber(): number | undefined {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  return useSelector((state: AppState) => state.application.blockNumber[chainId ?? -1])\r\n}\r\n\r\nexport function useWalletModalOpen(): boolean {\r\n  return useSelector((state: AppState) => state.application.walletModalOpen)\r\n}\r\n\r\nexport function useWalletModalToggle(): () => void {\r\n  const dispatch = useDispatch()\r\n  return useCallback(() => dispatch(toggleWalletModal()), [dispatch])\r\n}\r\n\r\nexport function useSettingsMenuOpen(): boolean {\r\n  return useSelector((state: AppState) => state.application.settingsMenuOpen)\r\n}\r\n\r\nexport function useToggleSettingsMenu(): () => void {\r\n  const dispatch = useDispatch()\r\n  return useCallback(() => dispatch(toggleSettingsMenu()), [dispatch])\r\n}\r\n\r\n// returns a function that allows adding a popup\r\nexport function useAddPopup(): (content: PopupContent, key?: string) => void {\r\n  const dispatch = useDispatch()\r\n\r\n  return useCallback(\r\n    (content: PopupContent, key?: string) => {\r\n      dispatch(addPopup({ content, key }))\r\n    },\r\n    [dispatch]\r\n  )\r\n}\r\n\r\n// returns a function that allows removing a popup via its key\r\nexport function useRemovePopup(): (key: string) => void {\r\n  const dispatch = useDispatch()\r\n  return useCallback(\r\n    (key: string) => {\r\n      dispatch(removePopup({ key }))\r\n    },\r\n    [dispatch]\r\n  )\r\n}\r\n\r\n// get the list of active popups\r\nexport function useActivePopups(): AppState['application']['popupList'] {\r\n  const list = useSelector((state: AppState) => state.application.popupList)\r\n  return useMemo(() => list.filter(item => item.show), [list])\r\n}\r\n","import styled from 'styled-components'\r\n\r\nconst Column = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n`\r\nexport const ColumnCenter = styled(Column)`\r\n  width: 100%;\r\n  align-items: center;\r\n`\r\n\r\nexport const AutoColumn = styled.div<{\r\n  gap?: 'sm' | 'md' | 'lg' | string\r\n  justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\r\n}>`\r\n  display: grid;\r\n  grid-auto-rows: auto;\r\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\r\n  justify-items: ${({ justify }) => justify && justify};\r\n`\r\n\r\nexport default Column\r\n","import { ActionCreatorWithPayload, createAction } from '@reduxjs/toolkit'\r\nimport { TokenList, Version } from '@uniswap/token-lists'\r\n\r\nexport const fetchTokenList: Readonly<{\r\n  pending: ActionCreatorWithPayload<{ url: string; requestId: string }>\r\n  fulfilled: ActionCreatorWithPayload<{ url: string; tokenList: TokenList; requestId: string }>\r\n  rejected: ActionCreatorWithPayload<{ url: string; errorMessage: string; requestId: string }>\r\n}> = {\r\n  pending: createAction('lists/fetchTokenList/pending'),\r\n  fulfilled: createAction('lists/fetchTokenList/fulfilled'),\r\n  rejected: createAction('lists/fetchTokenList/rejected')\r\n}\r\n\r\nexport const acceptListUpdate = createAction<string>('lists/acceptListUpdate')\r\nexport const addList = createAction<string>('lists/addList')\r\nexport const removeList = createAction<string>('lists/removeList')\r\nexport const selectList = createAction<string>('lists/selectList')\r\nexport const rejectVersionUpdate = createAction<Version>('lists/rejectVersionUpdate')\r\n","import { Version } from '@uniswap/token-lists'\r\n\r\nexport default function listVersionLabel(version: Version): string {\r\n  return `v${version.major}.${version.minor}.${version.patch}`\r\n}\r\n","import styled from 'styled-components'\r\nimport { Box } from 'rebass/styled-components'\r\n\r\nconst Row = styled(Box)<{ align?: string; padding?: string; border?: string; borderRadius?: string }>`\r\n  width: 100%;\r\n  display: flex;\r\n  padding: 0;\r\n  align-items: ${({ align }) => (align || 'center')};\r\n  padding: ${({ padding }) => padding};\r\n  border: ${({ border }) => border};\r\n  border-radius: ${({ borderRadius }) => borderRadius};\r\n`\r\n\r\nexport const RowBetween = styled(Row)`\r\n  justify-content: space-between;\r\n`\r\n\r\nexport const RowFlat = styled.div`\r\n  display: flex;\r\n  align-items: flex-end;\r\n`\r\n\r\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\r\n  flex-wrap: wrap;\r\n  margin: ${({ gap }) => gap && `-${gap}`};\r\n  justify-content: ${({ justify }) => justify && justify};\r\n\r\n  & > * {\r\n    margin: ${({ gap }) => gap} !important;\r\n  }\r\n`\r\n\r\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\r\n  width: fit-content;\r\n  margin: ${({ gap }) => gap && `-${gap}`};\r\n`\r\n\r\nexport default Row\r\n","import React, { useCallback, useMemo } from 'react'\r\nimport { diffTokenLists, TokenList } from '@uniswap/token-lists'\r\nimport { Button, Text } from '@pancakeswap-libs/uikit'\r\nimport { useDispatch } from 'react-redux'\r\nimport { AppDispatch } from '../../state'\r\nimport { useRemovePopup } from '../../state/application/hooks'\r\nimport { acceptListUpdate } from '../../state/lists/actions'\r\nimport listVersionLabel from '../../utils/listVersionLabel'\r\nimport { AutoColumn } from '../Column'\r\nimport { AutoRow } from '../Row'\r\n\r\nexport default function ListUpdatePopup({\r\n  popKey,\r\n  listUrl,\r\n  oldList,\r\n  newList,\r\n  auto,\r\n}: {\r\n  popKey: string\r\n  listUrl: string\r\n  oldList: TokenList\r\n  newList: TokenList\r\n  auto: boolean\r\n}) {\r\n  const removePopup = useRemovePopup()\r\n  const removeThisPopup = useCallback(() => removePopup(popKey), [popKey, removePopup])\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  const handleAcceptUpdate = useCallback(() => {\r\n    if (auto) return\r\n    dispatch(acceptListUpdate(listUrl))\r\n    removeThisPopup()\r\n  }, [auto, dispatch, listUrl, removeThisPopup])\r\n\r\n  const { added: tokensAdded, changed: tokensChanged, removed: tokensRemoved } = useMemo(() => {\r\n    return diffTokenLists(oldList.tokens, newList.tokens)\r\n  }, [newList.tokens, oldList.tokens])\r\n  const numTokensChanged = useMemo(\r\n    () =>\r\n      Object.keys(tokensChanged).reduce((memo, chainId: any) => memo + Object.keys(tokensChanged[chainId]).length, 0),\r\n    [tokensChanged]\r\n  )\r\n\r\n  return (\r\n    <AutoRow>\r\n      <AutoColumn style={{ flex: '1' }} gap=\"8px\">\r\n        {auto ? (\r\n          <Text>\r\n            The token list &quot;{oldList.name}&quot; has been updated to{' '}\r\n            <strong>{listVersionLabel(newList.version)}</strong>.\r\n          </Text>\r\n        ) : (\r\n          <>\r\n            <div>\r\n              <Text fontSize=\"14px\">\r\n                An update is available for the token list &quot;{oldList.name}&quot; (\r\n                {listVersionLabel(oldList.version)} to {listVersionLabel(newList.version)}).\r\n              </Text>\r\n              <ul>\r\n                {tokensAdded.length > 0 ? (\r\n                  <li>\r\n                    {tokensAdded.map((token, i) => (\r\n                      <React.Fragment key={`${token.chainId}-${token.address}`}>\r\n                        <strong title={token.address}>{token.symbol}</strong>\r\n                        {i === tokensAdded.length - 1 ? null : ', '}\r\n                      </React.Fragment>\r\n                    ))}{' '}\r\n                    added\r\n                  </li>\r\n                ) : null}\r\n                {tokensRemoved.length > 0 ? (\r\n                  <li>\r\n                    {tokensRemoved.map((token, i) => (\r\n                      <React.Fragment key={`${token.chainId}-${token.address}`}>\r\n                        <strong title={token.address}>{token.symbol}</strong>\r\n                        {i === tokensRemoved.length - 1 ? null : ', '}\r\n                      </React.Fragment>\r\n                    ))}{' '}\r\n                    removed\r\n                  </li>\r\n                ) : null}\r\n                {numTokensChanged > 0 ? <li>{numTokensChanged} tokens updated</li> : null}\r\n              </ul>\r\n            </div>\r\n            <AutoRow>\r\n              <div style={{ flexGrow: 1, marginRight: 12 }}>\r\n                <Button onClick={handleAcceptUpdate}>Accept update</Button>\r\n              </div>\r\n              <div style={{ flexGrow: 1 }}>\r\n                <Button onClick={removeThisPopup}>Dismiss</Button>\r\n              </div>\r\n            </AutoRow>\r\n          </>\r\n        )}\r\n      </AutoColumn>\r\n    </AutoRow>\r\n  )\r\n}\r\n","import { Contract } from '@ethersproject/contracts'\r\nimport { getAddress } from '@ethersproject/address'\r\nimport { AddressZero } from '@ethersproject/constants'\r\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\r\nimport { ChainId, JSBI, Percent, Token, CurrencyAmount, Currency, ETHER } from '@pancakeswap-libs/sdk'\r\nimport { ROUTER_ADDRESS } from '../constants'\r\nimport { TokenAddressMap } from '../state/lists/hooks'\r\n\r\n// returns the checksummed address if the address is valid, otherwise returns false\r\nexport function isAddress(value: any): string | false {\r\n  try {\r\n    return getAddress(value)\r\n  } catch {\r\n    return false\r\n  }\r\n}\r\n\r\nconst BSCSCAN_PREFIXES: { [chainId in ChainId]: string } = {\r\n  56: '',\r\n  97: 'testnet.'\r\n}\r\n\r\nexport function getBscScanLink(chainId: ChainId, data: string, type: 'transaction' | 'token' | 'address'): string {\r\n  const prefix = `https://${BSCSCAN_PREFIXES[chainId] || BSCSCAN_PREFIXES[ChainId.MAINNET]}bscscan.com`\r\n\r\n  switch (type) {\r\n    case 'transaction': {\r\n      return `${prefix}/tx/${data}`\r\n    }\r\n    case 'token': {\r\n      return `${prefix}/token/${data}`\r\n    }\r\n    case 'address':\r\n    default: {\r\n      return `${prefix}/address/${data}`\r\n    }\r\n  }\r\n}\r\n\r\n// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\r\nexport function shortenAddress(address: string, chars = 4): string {\r\n  const parsed = isAddress(address)\r\n  if (!parsed) {\r\n    throw Error(`Invalid 'address' parameter '${address}'.`)\r\n  }\r\n  return `${parsed.substring(0, chars + 2)}...${parsed.substring(42 - chars)}`\r\n}\r\n\r\n// add 10%\r\nexport function calculateGasMargin(value: BigNumber): BigNumber {\r\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\r\n}\r\n\r\n// converts a basis points value to a sdk percent\r\nexport function basisPointsToPercent(num: number): Percent {\r\n  return new Percent(JSBI.BigInt(Math.floor(num)), JSBI.BigInt(10000))\r\n}\r\n\r\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\r\n  if (slippage < 0 || slippage > 10000) {\r\n    throw Error(`Unexpected slippage value: ${slippage}`)\r\n  }\r\n  return [\r\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\r\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000))\r\n  ]\r\n}\r\n\r\n// account is not optional\r\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\r\n  return library.getSigner(account).connectUnchecked()\r\n}\r\n\r\n// account is optional\r\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\r\n  return account ? getSigner(library, account) : library\r\n}\r\n\r\n// account is optional\r\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\r\n  if (!isAddress(address) || address === AddressZero) {\r\n    throw Error(`Invalid 'address' parameter '${address}'.`)\r\n  }\r\n\r\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\r\n}\r\n\r\n// account is optional\r\nexport function getRouterContract(_: number, library: Web3Provider, account?: string): Contract {\r\n  return getContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, library, account)\r\n}\r\n\r\nexport function escapeRegExp(string: string): string {\r\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\r\n}\r\n\r\nexport function isTokenOnList(defaultTokens: TokenAddressMap, currency?: Currency): boolean {\r\n  if (currency === ETHER) return true\r\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\r\n}\r\n","import React, { HTMLProps, useCallback } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport styled, { keyframes } from 'styled-components'\r\n\r\n// A button that triggers some onClick result, but looks like a link.\r\nexport const LinkStyledButton = styled.button<{ disabled?: boolean }>`\r\n  border: none;\r\n  text-decoration: none;\r\n  background: none;\r\n\r\n  cursor: ${({ disabled }) => (disabled ? 'default' : 'pointer')};\r\n  color: ${({ theme, disabled }) => (disabled ? theme.colors.textSubtle : theme.colors.primary)};\r\n  font-weight: 500;\r\n\r\n  :hover {\r\n    text-decoration: ${({ disabled }) => (disabled ? null : 'underline')};\r\n  }\r\n\r\n  :focus {\r\n    outline: none;\r\n    text-decoration: ${({ disabled }) => (disabled ? null : 'underline')};\r\n  }\r\n\r\n  :active {\r\n    text-decoration: none;\r\n  }\r\n`\r\n\r\n// An internal link from the react-router-dom library that is correctly styled\r\nexport const StyledInternalLink = styled(Link)`\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  color: ${({ theme }) => theme.colors.primary};\r\n  font-weight: 500;\r\n\r\n  :hover {\r\n    text-decoration: underline;\r\n  }\r\n\r\n  :focus {\r\n    outline: none;\r\n    text-decoration: underline;\r\n  }\r\n\r\n  :active {\r\n    text-decoration: none;\r\n  }\r\n`\r\n\r\nconst StyledLink = styled.a`\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  color: ${({ theme }) => theme.colors.primary};\r\n  font-weight: 500;\r\n\r\n  :hover {\r\n    text-decoration: underline;\r\n  }\r\n\r\n  :focus {\r\n    outline: none;\r\n    text-decoration: underline;\r\n  }\r\n\r\n  :active {\r\n    text-decoration: none;\r\n  }\r\n`\r\n\r\n/**\r\n * Outbound link that handles firing google analytics events\r\n */\r\nexport function ExternalLink({\r\n  target = '_blank',\r\n  href,\r\n  rel = 'noopener noreferrer',\r\n  ...rest\r\n}: Omit<HTMLProps<HTMLAnchorElement>, 'as' | 'ref' | 'onClick'> & { href: string }) {\r\n  const handleClick = useCallback(\r\n    (event: React.MouseEvent<HTMLAnchorElement>) => {\r\n      if (!(target === '_blank' || event.ctrlKey || event.metaKey)) {\r\n        event.preventDefault()\r\n      }\r\n    },\r\n    [target]\r\n  )\r\n  return <StyledLink target={target} rel={rel} href={href} onClick={handleClick} {...rest} />\r\n}\r\n\r\nconst rotate = keyframes`\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n`\r\n\r\nexport const Spinner = styled.img`\r\n  animation: 2s ${rotate} linear infinite;\r\n  width: 16px;\r\n  height: 16px;\r\n`\r\n","import React, { useContext } from 'react'\r\nimport { AlertCircle, CheckCircle } from 'react-feather'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\nimport styled, { ThemeContext } from 'styled-components'\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport { getBscScanLink } from '../../utils'\r\nimport { ExternalLink } from '../Shared'\r\nimport { AutoColumn } from '../Column'\r\nimport { AutoRow } from '../Row'\r\n\r\nconst RowNoFlex = styled(AutoRow)`\r\n  flex-wrap: nowrap;\r\n`\r\n\r\nexport default function TransactionPopup({\r\n  hash,\r\n  success,\r\n  summary,\r\n}: {\r\n  hash: string\r\n  success?: boolean\r\n  summary?: string\r\n}) {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const theme = useContext(ThemeContext)\r\n\r\n  return (\r\n    <RowNoFlex>\r\n      <div style={{ paddingRight: 16 }}>\r\n        {success ? (\r\n          <CheckCircle color={theme.colors.success} size={24} />\r\n        ) : (\r\n          <AlertCircle color={theme.colors.failure} size={24} />\r\n        )}\r\n      </div>\r\n      <AutoColumn gap=\"8px\">\r\n        <Text>{summary ?? `Hash: ${hash.slice(0, 8)}...${hash.slice(58, 65)}`}</Text>\r\n        {chainId && <ExternalLink href={getBscScanLink(chainId, hash, 'transaction')}>View on bscscan</ExternalLink>}\r\n      </AutoColumn>\r\n    </RowNoFlex>\r\n  )\r\n}\r\n","import React, { useCallback, useContext, useEffect } from 'react'\r\nimport { X } from 'react-feather'\r\nimport { useSpring } from 'react-spring/web'\r\nimport styled, { ThemeContext } from 'styled-components'\r\nimport { animated } from 'react-spring'\r\nimport { PopupContent } from '../../state/application/actions'\r\nimport { useRemovePopup } from '../../state/application/hooks'\r\nimport ListUpdatePopup from './ListUpdatePopup'\r\nimport TransactionPopup from './TransactionPopup'\r\n\r\nexport const StyledClose = styled(X)`\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 10px;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`\r\nexport const Popup = styled.div`\r\n  display: inline-block;\r\n  width: 100%;\r\n  padding: 1em;\r\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\r\n  position: relative;\r\n  border-radius: 10px;\r\n  padding: 20px;\r\n  padding-right: 35px;\r\n  overflow: hidden;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    min-width: 290px;\r\n  }\r\n`\r\nconst Fader = styled.div`\r\n  position: absolute;\r\n  bottom: 0px;\r\n  left: 0px;\r\n  width: 100%;\r\n  height: 2px;\r\n  background-color: ${({ theme }) => theme.colors.tertiary};\r\n`\r\n\r\nconst AnimatedFader = animated(Fader)\r\n\r\nexport default function PopupItem({\r\n  removeAfterMs,\r\n  content,\r\n  popKey\r\n}: {\r\n  removeAfterMs: number | null\r\n  content: PopupContent\r\n  popKey: string\r\n}) {\r\n  const removePopup = useRemovePopup()\r\n  const removeThisPopup = useCallback(() => removePopup(popKey), [popKey, removePopup])\r\n  useEffect(() => {\r\n    if (removeAfterMs === null) return undefined\r\n\r\n    const timeout = setTimeout(() => {\r\n      removeThisPopup()\r\n    }, removeAfterMs)\r\n\r\n    return () => {\r\n      clearTimeout(timeout)\r\n    }\r\n  }, [removeAfterMs, removeThisPopup])\r\n\r\n  const theme = useContext(ThemeContext)\r\n\r\n  let popupContent\r\n  if ('txn' in content) {\r\n    const {\r\n      txn: { hash, success, summary }\r\n    } = content\r\n    popupContent = <TransactionPopup hash={hash} success={success} summary={summary} />\r\n  } else if ('listUpdate' in content) {\r\n    const {\r\n      listUpdate: { listUrl, oldList, newList, auto }\r\n    } = content\r\n    popupContent = <ListUpdatePopup popKey={popKey} listUrl={listUrl} oldList={oldList} newList={newList} auto={auto} />\r\n  }\r\n\r\n  const faderStyle = useSpring({\r\n    from: { width: '100%' },\r\n    to: { width: '0%' },\r\n    config: { duration: removeAfterMs ?? undefined }\r\n  })\r\n\r\n  return (\r\n    <Popup>\r\n      <StyledClose color={theme.colors.textSubtle} onClick={removeThisPopup} />\r\n      {popupContent}\r\n      {removeAfterMs !== null ? <AnimatedFader style={faderStyle} /> : null}\r\n    </Popup>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useActivePopups } from '../../state/application/hooks'\r\nimport { AutoColumn } from '../Column'\r\nimport PopupItem from './PopupItem'\r\n\r\nconst MobilePopupWrapper = styled.div<{ height: string | number }>`\r\n  position: relative;\r\n  max-width: 100%;\r\n  height: ${({ height }) => height};\r\n  margin: ${({ height }) => (height ? '0 auto;' : 0)};\r\n  margin-bottom: ${({ height }) => (height ? '20px' : 0)}};\r\n  display: none;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst MobilePopupInner = styled.div`\r\n  height: 99%;\r\n  overflow-x: auto;\r\n  overflow-y: hidden;\r\n  display: flex;\r\n  flex-direction: row;\r\n  -webkit-overflow-scrolling: touch;\r\n  ::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst FixedPopupColumn = styled(AutoColumn)`\r\n  position: fixed;\r\n  top: 64px;\r\n  right: 1rem;\r\n  max-width: 355px !important;\r\n  width: 100%;\r\n  z-index: 2;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    display: none;\r\n  }\r\n`\r\n\r\nexport default function Popups() {\r\n  // get all popups\r\n  const activePopups = useActivePopups()\r\n\r\n  return (\r\n    <>\r\n      <FixedPopupColumn gap=\"20px\">\r\n        {activePopups.map((item) => (\r\n          <PopupItem key={item.key} content={item.content} popKey={item.key} removeAfterMs={item.removeAfterMs} />\r\n        ))}\r\n      </FixedPopupColumn>\r\n      <MobilePopupWrapper height={activePopups?.length > 0 ? 'fit-content' : 0}>\r\n        <MobilePopupInner>\r\n          {activePopups // reverse so new items up front\r\n            .slice(0)\r\n            .reverse()\r\n            .map((item) => (\r\n              <PopupItem key={item.key} content={item.content} popKey={item.key} removeAfterMs={item.removeAfterMs} />\r\n            ))}\r\n        </MobilePopupInner>\r\n      </MobilePopupWrapper>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport styled, { keyframes } from 'styled-components'\r\n\r\nconst rotate = keyframes`\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n`\r\n\r\nconst StyledSVG = styled.svg<{ size: string; stroke?: string }>`\r\n  animation: 2s ${rotate} linear infinite;\r\n  height: ${({ size }) => size};\r\n  width: ${({ size }) => size};\r\n  path {\r\n    stroke: ${({ stroke, theme }) => stroke ?? theme.colors.primary};\r\n  }\r\n`\r\n\r\n/**\r\n * Takes in custom size and stroke for circle color, default to primary color as fill,\r\n * need ...rest for layered styles on top\r\n */\r\nexport default function Loader({ size = '16px', stroke, ...rest }: { size?: string; stroke?: string }) {\r\n  return (\r\n    <StyledSVG viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" size={size} stroke={stroke} {...rest}>\r\n      <path\r\n        d=\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\"\r\n        strokeWidth=\"2.5\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      />\r\n    </StyledSVG>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nimport { network } from '../../connectors'\r\nimport { useEagerConnect, useInactiveListener } from '../../hooks'\r\nimport { NetworkContextName } from '../../constants'\r\nimport Loader from '../Loader'\r\n\r\nconst MessageWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 20rem;\r\n`\r\n\r\nconst Message = styled.h2`\r\n  color: ${({ theme }) => theme.colors.primaryDark};\r\n`\r\n\r\nexport default function Web3ReactManager({ children }: { children: JSX.Element }) {\r\n  const { t } = useTranslation()\r\n  const { active } = useWeb3React()\r\n  const { active: networkActive, error: networkError, activate: activateNetwork } = useWeb3React(NetworkContextName)\r\n\r\n  // try to eagerly connect to an injected provider, if it exists and has granted access already\r\n  const triedEager = useEagerConnect()\r\n\r\n  // after eagerly trying injected, if the network connect ever isn't active or in an error state, activate itd\r\n  useEffect(() => {\r\n    if (triedEager && !networkActive && !networkError && !active) {\r\n      activateNetwork(network)\r\n    }\r\n  }, [triedEager, networkActive, networkError, activateNetwork, active])\r\n\r\n  // when there's no account connected, react to logins (broadly speaking) on the injected provider, if it exists\r\n  useInactiveListener(!triedEager)\r\n\r\n  // handle delayed loader state\r\n  const [showLoader, setShowLoader] = useState(false)\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      setShowLoader(true)\r\n    }, 600)\r\n\r\n    return () => {\r\n      clearTimeout(timeout)\r\n    }\r\n  }, [])\r\n\r\n  // on page load, do nothing until we've tried to connect to the injected connector\r\n  if (!triedEager) {\r\n    return null\r\n  }\r\n\r\n  // if the account context isn't active, and there's an error on the network context, it's an irrecoverable error\r\n  if (!active && networkError) {\r\n    return (\r\n      <MessageWrapper>\r\n        <Message>{t('unknownError')}</Message>\r\n      </MessageWrapper>\r\n    )\r\n  }\r\n\r\n  // if neither context is active, spin\r\n  if (!active && !networkActive) {\r\n    return showLoader ? (\r\n      <MessageWrapper>\r\n        <Loader />\r\n      </MessageWrapper>\r\n    ) : null\r\n  }\r\n\r\n  return children\r\n}\r\n","import styled from 'styled-components'\r\n\r\nconst Card = styled.div<any>`\r\n  width: 100%;\r\n  border-radius: 16px;\r\n  padding: 1.25rem;\r\n  padding: ${({ padding }) => padding};\r\n  border: ${({ border }) => border};\r\n  border-radius: ${({ borderRadius }) => borderRadius};\r\n`\r\nexport default Card\r\n\r\nexport const LightCard = styled(Card)`\r\n  border: 1px solid ${({ theme }) => theme.colors.invertedContrast};\r\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\r\n`\r\n\r\nexport const GreyCard = styled(Card)`\r\n  background-color: ${({ theme }) => theme.colors.tertiary};\r\n`\r\n","import React from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport { animated, useTransition } from 'react-spring'\r\nimport { DialogOverlay, DialogContent } from '@reach/dialog'\r\nimport { isMobile } from 'react-device-detect'\r\nimport '@reach/dialog/styles.css'\r\nimport { transparentize } from 'polished'\r\n\r\nconst AnimatedDialogOverlay = animated(DialogOverlay)\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nconst StyledDialogOverlay = styled(AnimatedDialogOverlay)`\r\n  &[data-reach-dialog-overlay] {\r\n    z-index: 2;\r\n    background-color: transparent;\r\n    overflow: hidden;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    background-color: rgba(0, 0, 0, 0.3);\r\n  }\r\n`\r\n\r\nconst AnimatedDialogContent = animated(DialogContent)\r\n// destructure to not pass custom props to Dialog DOM element\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nconst StyledDialogContent = styled(({ minHeight, maxHeight, mobile, isOpen, ...rest }) => (\r\n  <AnimatedDialogContent {...rest} />\r\n)).attrs({\r\n  'aria-label': 'dialog',\r\n})`\r\n  &[data-reach-dialog-content] {\r\n    margin: 0 0 2rem 0;\r\n    border: 1px solid ${({ theme }) => theme.colors.invertedContrast};\r\n    background-color: ${({ theme }) => theme.colors.invertedContrast};\r\n    box-shadow: 0 4px 8px 0 ${transparentize(0.95, '#191326')};\r\n    padding: 0px;\r\n    width: 80%;\r\n    overflow: hidden;\r\n\r\n    align-self: ${({ mobile }) => (mobile ? 'flex-end' : 'center')};\r\n\r\n    max-width: 420px;\r\n    ${({ maxHeight }) =>\r\n      maxHeight &&\r\n      css`\r\n        max-height: ${maxHeight}vh;\r\n      `}\r\n    ${({ minHeight }) =>\r\n      minHeight &&\r\n      css`\r\n        min-height: ${minHeight}vh;\r\n      `}\r\n    display: flex;\r\n    border-radius: 20px;\r\n\r\n    ${({ theme }) => theme.mediaQueries.lg} {\r\n      width: 65vw;\r\n    }\r\n    ${({ theme }) => theme.mediaQueries.sm} {\r\n      width: 85vw;\r\n    }\r\n  }\r\n`\r\n\r\ninterface ModalProps {\r\n  isOpen: boolean\r\n  onDismiss: () => void\r\n  minHeight?: number | false\r\n  maxHeight?: number\r\n  initialFocusRef?: React.RefObject<any>\r\n  children?: React.ReactNode\r\n}\r\n\r\nexport default function Modal({\r\n  isOpen,\r\n  onDismiss,\r\n  minHeight = false,\r\n  maxHeight = 50,\r\n  initialFocusRef,\r\n  children,\r\n}: ModalProps) {\r\n  const fadeTransition = useTransition(isOpen, null, {\r\n    config: { duration: 200 },\r\n    from: { opacity: 0 },\r\n    enter: { opacity: 1 },\r\n    leave: { opacity: 0 },\r\n  })\r\n\r\n  return (\r\n    <>\r\n      {fadeTransition.map(\r\n        ({ item, key, props }) =>\r\n          item && (\r\n            <StyledDialogOverlay key={key} style={props} onDismiss={onDismiss} initialFocusRef={initialFocusRef}>\r\n              <StyledDialogContent\r\n                aria-label=\"dialog content\"\r\n                minHeight={minHeight}\r\n                maxHeight={maxHeight}\r\n                mobile={isMobile}\r\n              >\r\n                {/* prevents the automatic focusing of inputs on mobile by the reach dialog */}\r\n                {/* eslint-disable */}\r\n                {!initialFocusRef && isMobile ? <div tabIndex={1} /> : null}\r\n                {/* eslint-enable */}\r\n                {children}\r\n              </StyledDialogContent>\r\n            </StyledDialogOverlay>\r\n          )\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","import React, { ReactNode } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, IconButton, CloseIcon } from '@pancakeswap-libs/uikit'\r\nimport { AutoColumn, ColumnCenter } from '../Column'\r\n\r\n\r\nexport const Wrapper = styled.div`\r\n  width: 100%;\r\n  overflow-y: auto;\r\n`\r\nexport const Section = styled(AutoColumn)`\r\n  padding: 24px;\r\n`\r\n\r\nexport const ConfirmedIcon = styled(ColumnCenter)`\r\n  padding: 40px 0;\r\n`\r\n\r\nexport const BottomSection = styled(Section)`\r\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\r\n  border-bottom-left-radius: 20px;\r\n  border-bottom-right-radius: 20px;\r\n`\r\n\r\n/**\r\n * TODO: Remove this when modal system from the UI Kit is implemented\r\n */\r\nconst StyledContentHeader = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n\r\n  & > ${Heading} {\r\n    flex: 1;\r\n  }\r\n`\r\n\r\ntype ContentHeaderProps = {\r\n  children: ReactNode\r\n  onDismiss: () => void\r\n}\r\n\r\nexport const ContentHeader = ({ children, onDismiss }: ContentHeaderProps) => (\r\n  <StyledContentHeader>\r\n    <Heading>{children}</Heading>\r\n    <IconButton onClick={onDismiss} variant=\"text\">\r\n      <CloseIcon color=\"primary\" />\r\n    </IconButton>\r\n  </StyledContentHeader>\r\n)\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\nimport { Spinner } from '../Shared'\r\nimport { AutoColumn } from '../Column'\r\nimport { Wrapper, Section, ConfirmedIcon, ContentHeader } from './helpers'\r\n\r\ntype ConfirmationPendingContentProps = { onDismiss: () => void; pendingText: string }\r\n\r\nconst CustomLightSpinner = styled(Spinner)<{ size: string }>`\r\n  height: ${({ size }) => size};\r\n  width: ${({ size }) => size};\r\n`\r\n\r\nconst ConfirmationPendingContent = ({ onDismiss, pendingText }: ConfirmationPendingContentProps) => {\r\n  return (\r\n    <Wrapper>\r\n      <Section>\r\n        <ContentHeader onDismiss={onDismiss}>Waiting for confirmation</ContentHeader>\r\n        <ConfirmedIcon>\r\n          <CustomLightSpinner src=\"/images/blue-loader.svg\" alt=\"loader\" size=\"90px\" />\r\n        </ConfirmedIcon>\r\n        <AutoColumn gap=\"12px\" justify=\"center\">\r\n          <AutoColumn gap=\"12px\" justify=\"center\">\r\n            <Text fontSize=\"14px\">\r\n              <strong>{pendingText}</strong>\r\n            </Text>\r\n          </AutoColumn>\r\n          <Text fontSize=\"14px\">Confirm this transaction in your wallet</Text>\r\n        </AutoColumn>\r\n      </Section>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default ConfirmationPendingContent\r\n","import { ChainId } from '@pancakeswap-libs/sdk'\r\nimport React, { useContext } from 'react'\r\nimport { ThemeContext } from 'styled-components'\r\nimport { Button, LinkExternal } from '@pancakeswap-libs/uikit'\r\nimport { ArrowUpCircle } from 'react-feather'\r\nimport { AutoColumn } from '../Column'\r\nimport { getBscScanLink } from '../../utils'\r\nimport { Wrapper, Section, ConfirmedIcon, ContentHeader } from './helpers'\r\n\r\ntype TransactionSubmittedContentProps = {\r\n  onDismiss: () => void\r\n  hash: string | undefined\r\n  chainId: ChainId\r\n}\r\n\r\nconst TransactionSubmittedContent = ({ onDismiss, chainId, hash }: TransactionSubmittedContentProps) => {\r\n  const theme = useContext(ThemeContext)\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Section>\r\n        <ContentHeader onDismiss={onDismiss}>Transaction submitted</ContentHeader>\r\n        <ConfirmedIcon>\r\n          <ArrowUpCircle strokeWidth={0.5} size={97} color={theme.colors.primary} />\r\n        </ConfirmedIcon>\r\n        <AutoColumn gap=\"8px\" justify=\"center\">\r\n          {chainId && hash && (\r\n            <LinkExternal href={getBscScanLink(chainId, hash, 'transaction')}>View on BscScan</LinkExternal>\r\n          )}\r\n          <Button onClick={onDismiss} mt=\"20px\">\r\n            Close\r\n          </Button>\r\n        </AutoColumn>\r\n      </Section>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default TransactionSubmittedContent\r\n","import React from 'react'\r\nimport Modal from '../Modal'\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport ConfirmationPendingContent from './ConfirmationPendingContent'\r\nimport TransactionSubmittedContent from './TransactionSubmittedContent'\r\n\r\ninterface ConfirmationModalProps {\r\n  isOpen: boolean\r\n  onDismiss: () => void\r\n  hash: string | undefined\r\n  content: () => React.ReactNode\r\n  attemptingTxn: boolean\r\n  pendingText: string\r\n}\r\n\r\nconst TransactionConfirmationModal = ({\r\n  isOpen,\r\n  onDismiss,\r\n  attemptingTxn,\r\n  hash,\r\n  pendingText,\r\n  content\r\n}: ConfirmationModalProps) => {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  if (!chainId) return null\r\n\r\n  // confirmation screen\r\n  return (\r\n    <Modal isOpen={isOpen} onDismiss={onDismiss} maxHeight={90}>\r\n      {attemptingTxn ? (\r\n        <ConfirmationPendingContent onDismiss={onDismiss} pendingText={pendingText} />\r\n      ) : hash ? (\r\n        <TransactionSubmittedContent chainId={chainId} hash={hash} onDismiss={onDismiss} />\r\n      ) : (\r\n        content()\r\n      )}\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default TransactionConfirmationModal\r\n","import React from 'react'\r\nimport { Wrapper, Section, BottomSection, ContentHeader } from './helpers'\r\n\r\ntype ConfirmationModalContentProps = {\r\n  title: string\r\n  onDismiss: () => void\r\n  topContent: () => React.ReactNode\r\n  bottomContent: () => React.ReactNode\r\n}\r\n\r\nconst ConfirmationModalContent = ({ title, bottomContent, onDismiss, topContent }: ConfirmationModalContentProps) => {\r\n  return (\r\n    <Wrapper>\r\n      <Section>\r\n        <ContentHeader onDismiss={onDismiss}>{title}</ContentHeader>\r\n        {topContent()}\r\n      </Section>\r\n      <BottomSection gap=\"12px\">{bottomContent()}</BottomSection>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default ConfirmationModalContent\r\n","import React, { useContext } from 'react'\r\nimport { ThemeContext } from 'styled-components'\r\nimport { Button, Text } from '@pancakeswap-libs/uikit'\r\nimport { AlertTriangle } from 'react-feather'\r\nimport { AutoColumn } from '../Column'\r\nimport { Wrapper, Section, BottomSection, ContentHeader } from './helpers'\r\n\r\ntype TransactionErrorContentProps = { message: string; onDismiss: () => void }\r\n\r\nconst TransactionErrorContent = ({ message, onDismiss }: TransactionErrorContentProps) => {\r\n  const theme = useContext(ThemeContext)\r\n  return (\r\n    <Wrapper>\r\n      <Section>\r\n        <ContentHeader onDismiss={onDismiss}>Error</ContentHeader>\r\n        <AutoColumn style={{ marginTop: 20, padding: '2rem 0' }} gap=\"24px\" justify=\"center\">\r\n          <AlertTriangle color={theme.colors.failure} style={{ strokeWidth: 1.5 }} size={64} />\r\n          <Text fontSize=\"16px\" color=\"failure\" style={{ textAlign: 'center', width: '85%' }}>\r\n            {message}\r\n          </Text>\r\n        </AutoColumn>\r\n      </Section>\r\n      <BottomSection gap=\"12px\">\r\n        <Button onClick={onDismiss}>Dismiss</Button>\r\n      </BottomSection>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default TransactionErrorContent\r\n","import TransactionConfirmationModal from './TransactionConfirmationModal'\r\n\r\nexport { default as ConfirmationModalContent } from './ConfirmationModalContent'\r\nexport { default as ConfirmationPendingContent } from './ConfirmationPendingContent'\r\nexport { default as TransactionErrorContent } from './TransactionErrorContent'\r\nexport { default as TransactionSubmittedContent } from './TransactionSubmittedContent'\r\n\r\nexport default TransactionConfirmationModal\r\n","import React, { createContext } from 'react'\r\n\r\ninterface TranslationState {\r\n  translations: Array<any>\r\n  setTranslations: React.Dispatch<React.SetStateAction<Array<any>>>\r\n}\r\n\r\nconst defaultTranslationState: TranslationState = {\r\n  translations: [],\r\n  setTranslations: (): void => undefined,\r\n}\r\n\r\nexport const TranslationsContext = createContext(defaultTranslationState as TranslationState)\r\n\r\nexport default TranslationsContext\r\n","import { useContext } from 'react'\r\nimport { TranslationsContext } from '../hooks/TranslationsContext'\r\n\r\nconst variableRegex = /%(.*?)%/\r\n\r\nconst replaceDynamicString = (foundTranslation: string, fallback: string) => {\r\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n  const stringToReplace = variableRegex.exec(foundTranslation)![0]\r\n  const indexToReplace = foundTranslation.split(' ').indexOf(stringToReplace)\r\n  const fallbackValueAtIndex = fallback.split(' ')[indexToReplace]\r\n  return foundTranslation.replace(stringToReplace, fallbackValueAtIndex)\r\n}\r\n\r\nexport const getTranslation = (translations: Array<any>, translationId: number, fallback: string) => {\r\n  const foundTranslation = translations.find((translation) => {\r\n    return translation.data.stringId === translationId\r\n  })\r\n  if (foundTranslation) {\r\n    const translatedString = foundTranslation.data.text\r\n    const includesVariable = translatedString.includes('%')\r\n    if (includesVariable) {\r\n      return replaceDynamicString(translatedString, fallback)\r\n    }\r\n    return translatedString\r\n  }\r\n  return fallback\r\n}\r\n\r\nexport const TranslateString = (translationId: number, fallback: string) => {\r\n  const { translations } = useContext(TranslationsContext)\r\n  if (translations[0] === 'error') {\r\n    return fallback\r\n  }\r\n  if (translations.length > 0) {\r\n    return getTranslation(translations, translationId, fallback)\r\n  }\r\n  return null\r\n}\r\n","import { useCallback, useContext } from 'react'\r\nimport { TranslationsContext } from 'hooks/TranslationsContext'\r\nimport { getTranslation } from 'utils/translateTextHelpers'\r\n\r\nconst useI18n = () => {\r\n  const { translations } = useContext(TranslationsContext)\r\n\r\n  /**\r\n   * As a temporary fix memoize the translation function so it can be used in an effect.\r\n   * It appears the TranslationsContext is always empty and is not currently used\r\n   * TODO: Figure out if the context is used and if not, remove it.\r\n   */\r\n  return useCallback(\r\n    (translationId: number, fallback: string) => {\r\n      if (translations[0] === 'error') {\r\n        return fallback\r\n      }\r\n      if (translations.length > 0) {\r\n        return getTranslation(translations, translationId, fallback)\r\n      }\r\n      return fallback\r\n    },\r\n    [translations]\r\n  )\r\n}\r\n\r\nexport default useI18n\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst StyledNav = styled.div`\r\n  margin-bottom: 40px;\r\n`\r\n\r\nfunction Nav({ activeIndex = 0 }: { activeIndex?: number }) {\r\n  const TranslateString = useI18n()\r\n  return (\r\n    <StyledNav>\r\n      <ButtonMenu activeIndex={activeIndex} scale=\"sm\" variant=\"subtle\">\r\n        <ButtonMenuItem id=\"swap-nav-link\" to=\"/swap\" as={Link}>\r\n          {TranslateString(1142, 'Swap')}\r\n        </ButtonMenuItem>\r\n        <ButtonMenuItem id=\"pool-nav-link\" to=\"/pool\" as={Link}>\r\n          {TranslateString(262, 'Liquidity')}\r\n        </ButtonMenuItem>\r\n        <ButtonMenuItem\r\n          id=\"pool-nav-link\"\r\n          as=\"a\"\r\n          href=\"https://www.binance.org/en/bridge?utm_source=PancakeSwap\"\r\n          target=\"_blank\"\r\n          rel=\"noreferrer noopener\"\r\n        >\r\n          Bridge\r\n        </ButtonMenuItem>\r\n      </ButtonMenu>\r\n    </StyledNav>\r\n  )\r\n}\r\n\r\nexport default Nav\r\n","import { Interface } from '@ethersproject/abi'\r\nimport ERC20_ABI from './erc20.json'\r\nimport ERC20_BYTES32_ABI from './erc20_bytes32.json'\r\n\r\nconst ERC20_INTERFACE = new Interface(ERC20_ABI)\r\n\r\nexport default ERC20_INTERFACE\r\nexport { ERC20_ABI, ERC20_BYTES32_ABI }\r\n","import { ChainId, Token } from '@pancakeswap-libs/sdk'\r\nimport { Tags, TokenInfo, TokenList } from '@uniswap/token-lists'\r\nimport { useMemo } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { AppState } from '../index'\r\n\r\ntype TagDetails = Tags[keyof Tags]\r\nexport interface TagInfo extends TagDetails {\r\n  id: string\r\n}\r\n\r\n/**\r\n * Token instances created from token info.\r\n */\r\nexport class WrappedTokenInfo extends Token {\r\n  public readonly tokenInfo: TokenInfo\r\n\r\n  public readonly tags: TagInfo[]\r\n\r\n  constructor(tokenInfo: TokenInfo, tags: TagInfo[]) {\r\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\r\n    this.tokenInfo = tokenInfo\r\n    this.tags = tags\r\n  }\r\n\r\n  public get logoURI(): string | undefined {\r\n    return this.tokenInfo.logoURI\r\n  }\r\n}\r\n\r\nexport type TokenAddressMap = Readonly<{ [chainId in ChainId]: Readonly<{ [tokenAddress: string]: WrappedTokenInfo }> }>\r\n\r\n/**\r\n * An empty result, useful as a default.\r\n */\r\nconst EMPTY_LIST: TokenAddressMap = {\r\n  [ChainId.MAINNET]: {},\r\n  [ChainId.BSCTESTNET]: {}\r\n}\r\n\r\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\r\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\r\n\r\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\r\n  const result = listCache?.get(list)\r\n  if (result) return result\r\n\r\n  const map = list.tokens.reduce<TokenAddressMap>(\r\n    (tokenMap, tokenInfo) => {\r\n      const tags: TagInfo[] =\r\n        tokenInfo.tags\r\n          ?.map(tagId => {\r\n            if (!list.tags?.[tagId]) return undefined\r\n            return { ...list.tags[tagId], id: tagId }\r\n          })\r\n          ?.filter((x): x is TagInfo => Boolean(x)) ?? []\r\n      const token = new WrappedTokenInfo(tokenInfo, tags)\r\n      if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.')\r\n      return {\r\n        ...tokenMap,\r\n        [token.chainId]: {\r\n          ...tokenMap[token.chainId],\r\n          [token.address]: token\r\n        }\r\n      }\r\n    },\r\n    { ...EMPTY_LIST }\r\n  )\r\n  listCache?.set(list, map)\r\n  return map\r\n}\r\n\r\nexport function useTokenList(url: string | undefined): TokenAddressMap {\r\n  const lists = useSelector<AppState, AppState['lists']['byUrl']>(state => state.lists.byUrl)\r\n  return useMemo(() => {\r\n    if (!url) return EMPTY_LIST\r\n    const current = lists[url]?.current\r\n    if (!current) return EMPTY_LIST\r\n    try {\r\n      return listToTokenMap(current)\r\n    } catch (error) {\r\n      console.error('Could not show token list due to error', error)\r\n      return EMPTY_LIST\r\n    }\r\n  }, [lists, url])\r\n}\r\n\r\nexport function useSelectedListUrl(): string | undefined {\r\n  return useSelector<AppState, AppState['lists']['selectedListUrl']>(state => state.lists.selectedListUrl)\r\n}\r\n\r\nexport function useSelectedTokenList(): TokenAddressMap {\r\n  return useTokenList(useSelectedListUrl())\r\n}\r\n\r\nexport function useSelectedListInfo(): { current: TokenList | null; pending: TokenList | null; loading: boolean } {\r\n  const selectedUrl = useSelectedListUrl()\r\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>(state => state.lists.byUrl)\r\n  const list = selectedUrl ? listsByUrl[selectedUrl] : undefined\r\n  return {\r\n    current: list?.current ?? null,\r\n    pending: list?.pendingUpdate ?? null,\r\n    loading: list?.loadingRequestId !== null\r\n  }\r\n}\r\n\r\n// returns all downloaded current lists\r\nexport function useAllLists(): TokenList[] {\r\n  const lists = useSelector<AppState, AppState['lists']['byUrl']>(state => state.lists.byUrl)\r\n\r\n  return useMemo(\r\n    () =>\r\n      Object.keys(lists)\r\n        .map(url => lists[url].current)\r\n        .filter((l): l is TokenList => Boolean(l)),\r\n    [lists]\r\n  )\r\n}\r\n","import { createAction } from '@reduxjs/toolkit'\r\n\r\nexport interface Call {\r\n  address: string\r\n  callData: string\r\n}\r\n\r\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\r\nconst LOWER_HEX_REGEX = /^0x[a-f0-9]*$/\r\nexport function toCallKey(call: Call): string {\r\n  if (!ADDRESS_REGEX.test(call.address)) {\r\n    throw new Error(`Invalid address: ${call.address}`)\r\n  }\r\n  if (!LOWER_HEX_REGEX.test(call.callData)) {\r\n    throw new Error(`Invalid hex: ${call.callData}`)\r\n  }\r\n  return `${call.address}-${call.callData}`\r\n}\r\n\r\nexport function parseCallKey(callKey: string): Call {\r\n  const pcs = callKey.split('-')\r\n  if (pcs.length !== 2) {\r\n    throw new Error(`Invalid call key: ${callKey}`)\r\n  }\r\n  return {\r\n    address: pcs[0],\r\n    callData: pcs[1]\r\n  }\r\n}\r\n\r\nexport interface ListenerOptions {\r\n  // how often this data should be fetched, by default 1\r\n  readonly blocksPerFetch?: number\r\n}\r\n\r\nexport const addMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\r\n  'multicall/addMulticallListeners'\r\n)\r\nexport const removeMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\r\n  'multicall/removeMulticallListeners'\r\n)\r\nexport const fetchingMulticallResults = createAction<{ chainId: number; calls: Call[]; fetchingBlockNumber: number }>(\r\n  'multicall/fetchingMulticallResults'\r\n)\r\nexport const errorFetchingMulticallResults = createAction<{\r\n  chainId: number\r\n  calls: Call[]\r\n  fetchingBlockNumber: number\r\n}>('multicall/errorFetchingMulticallResults')\r\nexport const updateMulticallResults = createAction<{\r\n  chainId: number\r\n  blockNumber: number\r\n  results: {\r\n    [callKey: string]: string | null\r\n  }\r\n}>('multicall/updateMulticallResults')\r\n","import { Interface, FunctionFragment } from '@ethersproject/abi'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { Contract } from '@ethersproject/contracts'\r\nimport { useEffect, useMemo } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport { useBlockNumber } from '../application/hooks'\r\nimport { AppDispatch, AppState } from '../index'\r\nimport {\r\n  addMulticallListeners,\r\n  Call,\r\n  removeMulticallListeners,\r\n  parseCallKey,\r\n  toCallKey,\r\n  ListenerOptions,\r\n} from './actions'\r\n\r\nexport interface Result extends ReadonlyArray<any> {\r\n  readonly [key: string]: any\r\n}\r\n\r\ntype MethodArg = string | number | BigNumber\r\ntype MethodArgs = Array<MethodArg | MethodArg[]>\r\n\r\ntype OptionalMethodInputs = Array<MethodArg | MethodArg[] | undefined> | undefined\r\n\r\nfunction isMethodArg(x: unknown): x is MethodArg {\r\n  return ['string', 'number'].indexOf(typeof x) !== -1\r\n}\r\n\r\nfunction isValidMethodArgs(x: unknown): x is MethodArgs | undefined {\r\n  return (\r\n    x === undefined ||\r\n    (Array.isArray(x) && x.every((xi) => isMethodArg(xi) || (Array.isArray(xi) && xi.every(isMethodArg))))\r\n  )\r\n}\r\n\r\ninterface CallResult {\r\n  readonly valid: boolean\r\n  readonly data: string | undefined\r\n  readonly blockNumber: number | undefined\r\n}\r\n\r\nconst INVALID_RESULT: CallResult = { valid: false, blockNumber: undefined, data: undefined }\r\n\r\n// use this options object\r\nexport const NEVER_RELOAD: ListenerOptions = {\r\n  blocksPerFetch: Infinity,\r\n}\r\n\r\n// the lowest level call for subscribing to contract data\r\nfunction useCallsData(calls: (Call | undefined)[], options?: ListenerOptions): CallResult[] {\r\n  const { chainId } = useActiveWeb3React()\r\n  const callResults = useSelector<AppState, AppState['multicall']['callResults']>(\r\n    (state) => state.multicall.callResults\r\n  )\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  const serializedCallKeys: string = useMemo(\r\n    () =>\r\n      JSON.stringify(\r\n        calls\r\n          ?.filter((c): c is Call => Boolean(c))\r\n          ?.map(toCallKey)\r\n          ?.sort() ?? []\r\n      ),\r\n    [calls]\r\n  )\r\n\r\n  // update listeners when there is an actual change that persists for at least 100ms\r\n  useEffect(() => {\r\n    const callKeys: string[] = JSON.parse(serializedCallKeys)\r\n    if (!chainId || callKeys.length === 0) return undefined\r\n    // eslint-disable-next-line @typescript-eslint/no-shadow\r\n    const calls = callKeys.map((key) => parseCallKey(key))\r\n    dispatch(\r\n      addMulticallListeners({\r\n        chainId,\r\n        calls,\r\n        options,\r\n      })\r\n    )\r\n\r\n    return () => {\r\n      dispatch(\r\n        removeMulticallListeners({\r\n          chainId,\r\n          calls,\r\n          options,\r\n        })\r\n      )\r\n    }\r\n  }, [chainId, dispatch, options, serializedCallKeys])\r\n\r\n  return useMemo(\r\n    () =>\r\n      // @ts-ignore\r\n      calls.map<CallResult>((call) => {\r\n        if (!chainId || !call) return INVALID_RESULT\r\n\r\n        const result = callResults[chainId]?.[toCallKey(call)]\r\n        const data = result?.data && result?.data !== '0x' ? result.data : null\r\n\r\n        return { valid: true, data, blockNumber: result?.blockNumber }\r\n      }),\r\n    [callResults, calls, chainId]\r\n  )\r\n}\r\n\r\ninterface CallState {\r\n  readonly valid: boolean\r\n  // the result, or undefined if loading or errored/no data\r\n  readonly result: Result | undefined\r\n  // true if the result has never been fetched\r\n  readonly loading: boolean\r\n  // true if the result is not for the latest block\r\n  readonly syncing: boolean\r\n  // true if the call was made and is synced, but the return data is invalid\r\n  readonly error: boolean\r\n}\r\n\r\nconst INVALID_CALL_STATE: CallState = { valid: false, result: undefined, loading: false, syncing: false, error: false }\r\nconst LOADING_CALL_STATE: CallState = { valid: true, result: undefined, loading: true, syncing: true, error: false }\r\n\r\nfunction toCallState(\r\n  callResult: CallResult | undefined,\r\n  contractInterface: Interface | undefined,\r\n  fragment: FunctionFragment | undefined,\r\n  latestBlockNumber: number | undefined\r\n): CallState {\r\n  if (!callResult) return INVALID_CALL_STATE\r\n  const { valid, data, blockNumber } = callResult\r\n  if (!valid) return INVALID_CALL_STATE\r\n  if (valid && !blockNumber) return LOADING_CALL_STATE\r\n  if (!contractInterface || !fragment || !latestBlockNumber) return LOADING_CALL_STATE\r\n  const success = data && data.length > 2\r\n  const syncing = (blockNumber ?? 0) < latestBlockNumber\r\n  let result: Result | undefined\r\n  if (success && data) {\r\n    try {\r\n      result = contractInterface.decodeFunctionResult(fragment, data)\r\n    } catch (error) {\r\n      console.error('Result data parsing failed', fragment, data)\r\n      return {\r\n        valid: true,\r\n        loading: false,\r\n        error: true,\r\n        syncing,\r\n        result,\r\n      }\r\n    }\r\n  }\r\n  return {\r\n    valid: true,\r\n    loading: false,\r\n    syncing,\r\n    result,\r\n    error: !success,\r\n  }\r\n}\r\n\r\nexport function useSingleContractMultipleData(\r\n  contract: Contract | null | undefined,\r\n  methodName: string,\r\n  callInputs: OptionalMethodInputs[],\r\n  options?: ListenerOptions\r\n): CallState[] {\r\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\r\n\r\n  const calls = useMemo(\r\n    () =>\r\n      contract && fragment && callInputs && callInputs.length > 0\r\n        ? callInputs.map<Call>((inputs) => {\r\n            return {\r\n              address: contract.address,\r\n              callData: contract.interface.encodeFunctionData(fragment, inputs),\r\n            }\r\n          })\r\n        : [],\r\n    [callInputs, contract, fragment]\r\n  )\r\n\r\n  const results = useCallsData(calls, options)\r\n\r\n  const latestBlockNumber = useBlockNumber()\r\n\r\n  return useMemo(() => {\r\n    return results.map((result) => toCallState(result, contract?.interface, fragment, latestBlockNumber))\r\n  }, [fragment, contract, results, latestBlockNumber])\r\n}\r\n\r\nexport function useMultipleContractSingleData(\r\n  addresses: (string | undefined)[],\r\n  contractInterface: Interface,\r\n  methodName: string,\r\n  callInputs?: OptionalMethodInputs,\r\n  options?: ListenerOptions\r\n): CallState[] {\r\n  const fragment = useMemo(() => contractInterface.getFunction(methodName), [contractInterface, methodName])\r\n  const callData: string | undefined = useMemo(\r\n    () =>\r\n      fragment && isValidMethodArgs(callInputs)\r\n        ? contractInterface.encodeFunctionData(fragment, callInputs)\r\n        : undefined,\r\n    [callInputs, contractInterface, fragment]\r\n  )\r\n\r\n  const calls = useMemo(\r\n    () =>\r\n      fragment && addresses && addresses.length > 0 && callData\r\n        ? addresses.map<Call | undefined>((address) => {\r\n            return address && callData\r\n              ? {\r\n                  address,\r\n                  callData,\r\n                }\r\n              : undefined\r\n          })\r\n        : [],\r\n    [addresses, callData, fragment]\r\n  )\r\n\r\n  const results = useCallsData(calls, options)\r\n\r\n  const latestBlockNumber = useBlockNumber()\r\n\r\n  return useMemo(() => {\r\n    return results.map((result) => toCallState(result, contractInterface, fragment, latestBlockNumber))\r\n  }, [fragment, results, contractInterface, latestBlockNumber])\r\n}\r\n\r\nexport function useSingleCallResult(\r\n  contract: Contract | null | undefined,\r\n  methodName: string,\r\n  inputs?: OptionalMethodInputs,\r\n  options?: ListenerOptions\r\n): CallState {\r\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\r\n\r\n  const calls = useMemo<Call[]>(() => {\r\n    return contract && fragment && isValidMethodArgs(inputs)\r\n      ? [\r\n          {\r\n            address: contract.address,\r\n            callData: contract.interface.encodeFunctionData(fragment, inputs),\r\n          },\r\n        ]\r\n      : []\r\n  }, [contract, fragment, inputs])\r\n\r\n  const result = useCallsData(calls, options)[0]\r\n  const latestBlockNumber = useBlockNumber()\r\n\r\n  return useMemo(() => {\r\n    return toCallState(result, contract?.interface, fragment, latestBlockNumber)\r\n  }, [result, contract, fragment, latestBlockNumber])\r\n}\r\n","import { createAction } from '@reduxjs/toolkit'\r\n\r\nexport interface SerializedToken {\r\n  chainId: number\r\n  address: string\r\n  decimals: number\r\n  symbol?: string\r\n  name?: string\r\n}\r\n\r\nexport interface SerializedPair {\r\n  token0: SerializedToken\r\n  token1: SerializedToken\r\n}\r\n\r\nexport const updateMatchesDarkMode = createAction<{ matchesDarkMode: boolean }>('user/updateMatchesDarkMode')\r\nexport const updateUserDarkMode = createAction<{ userDarkMode: boolean }>('user/updateUserDarkMode')\r\nexport const updateUserExpertMode = createAction<{ userExpertMode: boolean }>('user/updateUserExpertMode')\r\nexport const updateUserSlippageTolerance = createAction<{ userSlippageTolerance: number }>(\r\n  'user/updateUserSlippageTolerance'\r\n)\r\nexport const updateUserDeadline = createAction<{ userDeadline: number }>('user/updateUserDeadline')\r\nexport const addSerializedToken = createAction<{ serializedToken: SerializedToken }>('user/addSerializedToken')\r\nexport const removeSerializedToken = createAction<{ chainId: number; address: string }>('user/removeSerializedToken')\r\nexport const addSerializedPair = createAction<{ serializedPair: SerializedPair }>('user/addSerializedPair')\r\nexport const removeSerializedPair = createAction<{ chainId: number; tokenAAddress: string; tokenBAddress: string }>(\r\n  'user/removeSerializedPair'\r\n)\r\nexport const muteAudio = createAction<void>('user/muteAudio')\r\nexport const unmuteAudio = createAction<void>('user/unmuteAudio')\r\n","const CACHE_KEY = 'IS_DARK'\r\n\r\nexport function getThemeCache(): boolean | null {\r\n  let cache = null\r\n  try {\r\n    const rawCache = localStorage.getItem(CACHE_KEY)\r\n    if (rawCache) {\r\n      cache = JSON.parse(rawCache)\r\n    }\r\n  } catch (error) {\r\n    console.error(error)\r\n  }\r\n\r\n  return cache\r\n}\r\n\r\nexport function setThemeCache(isDark: boolean) {\r\n  try {\r\n    localStorage.setItem(CACHE_KEY, JSON.stringify(isDark))\r\n  } catch (error) {\r\n    console.error(error)\r\n  }\r\n}\r\n","import { ChainId, Pair, Token } from '@pancakeswap-libs/sdk'\r\nimport flatMap from 'lodash.flatmap'\r\nimport { useCallback, useMemo } from 'react'\r\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux'\r\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from '../../constants'\r\n\r\nimport { useActiveWeb3React } from '../../hooks'\r\n// eslint-disable-next-line import/no-cycle\r\nimport { useAllTokens } from '../../hooks/Tokens'\r\nimport { AppDispatch, AppState } from '../index'\r\nimport {\r\n  addSerializedPair,\r\n  addSerializedToken,\r\n  removeSerializedToken,\r\n  SerializedPair,\r\n  SerializedToken,\r\n  updateUserDarkMode,\r\n  updateUserDeadline,\r\n  updateUserExpertMode,\r\n  updateUserSlippageTolerance,\r\n  muteAudio,\r\n  unmuteAudio,\r\n} from './actions'\r\nimport { setThemeCache } from '../../utils/theme'\r\n\r\nfunction serializeToken(token: Token): SerializedToken {\r\n  return {\r\n    chainId: token.chainId,\r\n    address: token.address,\r\n    decimals: token.decimals,\r\n    symbol: token.symbol,\r\n    name: token.name,\r\n  }\r\n}\r\n\r\nfunction deserializeToken(serializedToken: SerializedToken): Token {\r\n  return new Token(\r\n    serializedToken.chainId,\r\n    serializedToken.address,\r\n    serializedToken.decimals,\r\n    serializedToken.symbol,\r\n    serializedToken.name\r\n  )\r\n}\r\n\r\nexport function useIsDarkMode(): boolean {\r\n  const { userDarkMode, matchesDarkMode } = useSelector<\r\n    AppState,\r\n    { userDarkMode: boolean | null; matchesDarkMode: boolean }\r\n  >(\r\n    // eslint-disable-next-line @typescript-eslint/no-shadow\r\n    ({ user: { matchesDarkMode, userDarkMode } }) => ({\r\n      userDarkMode,\r\n      matchesDarkMode,\r\n    }),\r\n    shallowEqual\r\n  )\r\n  return userDarkMode === null ? matchesDarkMode : userDarkMode\r\n}\r\n\r\nexport function useDarkModeManager(): [boolean, () => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const { userDarkMode } = useSelector<AppState, { userDarkMode: boolean | null }>(\r\n    // eslint-disable-next-line @typescript-eslint/no-shadow\r\n    ({ user: { userDarkMode } }) => ({\r\n      userDarkMode,\r\n    }),\r\n    shallowEqual\r\n  )\r\n  const darkMode = useIsDarkMode()\r\n\r\n  const toggleSetDarkMode = useCallback(() => {\r\n    setThemeCache(!userDarkMode)\r\n    dispatch(updateUserDarkMode({ userDarkMode: !userDarkMode }))\r\n  }, [userDarkMode, dispatch])\r\n\r\n  return [darkMode, toggleSetDarkMode]\r\n}\r\n\r\nexport function useAudioModeManager(): [boolean, () => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\r\n  const toggleSetAudioMode = useCallback(() => {\r\n    if (audioPlay) {\r\n      dispatch(muteAudio())\r\n    } else {\r\n      dispatch(unmuteAudio())\r\n    }\r\n  }, [audioPlay, dispatch])\r\n\r\n  return [audioPlay, toggleSetAudioMode]\r\n}\r\n\r\nexport function useIsExpertMode(): boolean {\r\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\r\n}\r\n\r\nexport function useExpertModeManager(): [boolean, () => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const expertMode = useIsExpertMode()\r\n\r\n  const toggleSetExpertMode = useCallback(() => {\r\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\r\n  }, [expertMode, dispatch])\r\n\r\n  return [expertMode, toggleSetExpertMode]\r\n}\r\n\r\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\r\n    return state.user.userSlippageTolerance\r\n  })\r\n\r\n  const setUserSlippageTolerance = useCallback(\r\n    (slippageTolerance: number) => {\r\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippageTolerance }))\r\n    },\r\n    [dispatch]\r\n  )\r\n\r\n  return [userSlippageTolerance, setUserSlippageTolerance]\r\n}\r\n\r\nexport function useUserDeadline(): [number, (slippage: number) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\r\n    return state.user.userDeadline\r\n  })\r\n\r\n  const setUserDeadline = useCallback(\r\n    (deadline: number) => {\r\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\r\n    },\r\n    [dispatch]\r\n  )\r\n\r\n  return [userDeadline, setUserDeadline]\r\n}\r\n\r\nexport function useAddUserToken(): (token: Token) => void {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  return useCallback(\r\n    (token: Token) => {\r\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\r\n    },\r\n    [dispatch]\r\n  )\r\n}\r\n\r\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  return useCallback(\r\n    (chainId: number, address: string) => {\r\n      dispatch(removeSerializedToken({ chainId, address }))\r\n    },\r\n    [dispatch]\r\n  )\r\n}\r\n\r\nexport function useUserAddedTokens(): Token[] {\r\n  const { chainId } = useActiveWeb3React()\r\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\r\n\r\n  return useMemo(() => {\r\n    if (!chainId) return []\r\n    return Object.values(serializedTokensMap[chainId as ChainId] ?? {}).map(deserializeToken)\r\n  }, [serializedTokensMap, chainId])\r\n}\r\n\r\nfunction serializePair(pair: Pair): SerializedPair {\r\n  return {\r\n    token0: serializeToken(pair.token0),\r\n    token1: serializeToken(pair.token1),\r\n  }\r\n}\r\n\r\nexport function usePairAdder(): (pair: Pair) => void {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  return useCallback(\r\n    (pair: Pair) => {\r\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\r\n    },\r\n    [dispatch]\r\n  )\r\n}\r\n\r\n/**\r\n * Given two tokens return the liquidity token that represents its liquidity shares\r\n * @param tokenA one of the two tokens\r\n * @param tokenB the other token\r\n */\r\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\r\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'Cake-LP', 'Pancake LPs')\r\n}\r\n\r\n/**\r\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\r\n */\r\nexport function useTrackedTokenPairs(): [Token, Token][] {\r\n  const { chainId } = useActiveWeb3React()\r\n  const tokens = useAllTokens()\r\n\r\n  // pinned pairs\r\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\r\n\r\n  // pairs for every token against every base\r\n  const generatedPairs: [Token, Token][] = useMemo(\r\n    () =>\r\n      chainId\r\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\r\n            const token = tokens[tokenAddress]\r\n            // for each token on the current chain,\r\n            return (\r\n              // loop though all bases on the current chain\r\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\r\n                // to construct pairs of the given token with each base\r\n                .map((base) => {\r\n                  if (base.address === token.address) {\r\n                    return null\r\n                  }\r\n                  return [base, token]\r\n                })\r\n                .filter((p): p is [Token, Token] => p !== null)\r\n            )\r\n          })\r\n        : [],\r\n    [tokens, chainId]\r\n  )\r\n\r\n  // pairs saved by users\r\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\r\n\r\n  const userPairs: [Token, Token][] = useMemo(() => {\r\n    if (!chainId || !savedSerializedPairs) return []\r\n    const forChain = savedSerializedPairs[chainId]\r\n    if (!forChain) return []\r\n\r\n    return Object.keys(forChain).map((pairId) => {\r\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\r\n    })\r\n  }, [savedSerializedPairs, chainId])\r\n\r\n  const combinedList = useMemo(() => userPairs.concat(generatedPairs).concat(pinnedPairs), [\r\n    generatedPairs,\r\n    pinnedPairs,\r\n    userPairs,\r\n  ])\r\n\r\n  return useMemo(() => {\r\n    // dedupes pairs of tokens in the combined list\r\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\r\n      const sorted = tokenA.sortsBefore(tokenB)\r\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\r\n      if (memo[key]) return memo\r\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\r\n      return memo\r\n    }, {})\r\n\r\n    return Object.keys(keyed).map((key) => keyed[key])\r\n  }, [combinedList])\r\n}\r\n","import { ChainId } from '@pancakeswap-libs/sdk'\r\nimport MULTICALL_ABI from './abi.json'\r\n\r\nconst MULTICALL_NETWORKS: { [chainId in ChainId]: string } = {\r\n  [ChainId.MAINNET]: '0x1Ee38d535d541c55C9dae27B12edf090C608E6Fb', // TODO\r\n  [ChainId.BSCTESTNET]: '0x301907b5835a2d723Fe3e9E8C5Bc5375d5c1236A'\r\n}\r\n\r\nexport { MULTICALL_ABI, MULTICALL_NETWORKS }\r\n","import { Contract } from '@ethersproject/contracts'\r\nimport { ChainId, WETH } from '@pancakeswap-libs/sdk'\r\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\r\nimport { useMemo } from 'react'\r\nimport ENS_ABI from '../constants/abis/ens-registrar.json'\r\nimport ENS_PUBLIC_RESOLVER_ABI from '../constants/abis/ens-public-resolver.json'\r\nimport { ERC20_BYTES32_ABI } from '../constants/abis/erc20'\r\nimport ERC20_ABI from '../constants/abis/erc20.json'\r\nimport WETH_ABI from '../constants/abis/weth.json'\r\nimport { MULTICALL_ABI, MULTICALL_NETWORKS } from '../constants/multicall'\r\nimport { getContract } from '../utils'\r\nimport { useActiveWeb3React } from './index'\r\n\r\n// returns null on errors\r\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\r\n  const { library, account } = useActiveWeb3React()\r\n\r\n  return useMemo(() => {\r\n    if (!address || !ABI || !library) return null\r\n    try {\r\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\r\n    } catch (error) {\r\n      console.error('Failed to get contract', error)\r\n      return null\r\n    }\r\n  }, [address, ABI, library, withSignerIfPossible, account])\r\n}\r\n\r\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\r\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\r\n}\r\n\r\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\r\n  const { chainId } = useActiveWeb3React()\r\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible)\r\n}\r\n\r\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\r\n  const { chainId } = useActiveWeb3React()\r\n  let address: string | undefined\r\n  if (chainId) {\r\n    switch (chainId) {\r\n      case ChainId.MAINNET:\r\n      case ChainId.BSCTESTNET:\r\n    }\r\n  }\r\n  return useContract(address, ENS_ABI, withSignerIfPossible)\r\n}\r\n\r\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\r\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\r\n}\r\n\r\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\r\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\r\n}\r\n\r\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\r\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible)\r\n}\r\n\r\nexport function useMulticallContract(): Contract | null {\r\n  const { chainId } = useActiveWeb3React()\r\n  return useContract(chainId && MULTICALL_NETWORKS[chainId], MULTICALL_ABI, false)\r\n}\r\n","import { parseBytes32String } from '@ethersproject/strings'\r\nimport { Currency, ETHER, Token, currencyEquals } from '@pancakeswap-libs/sdk'\r\nimport { useMemo } from 'react'\r\nimport { useSelectedTokenList } from '../state/lists/hooks'\r\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\r\n// eslint-disable-next-line import/no-cycle\r\nimport { useUserAddedTokens } from '../state/user/hooks'\r\nimport { isAddress } from '../utils'\r\n\r\nimport { useActiveWeb3React } from './index'\r\nimport { useBytes32TokenContract, useTokenContract } from './useContract'\r\n\r\nexport function useAllTokens(): { [address: string]: Token } {\r\n  const { chainId } = useActiveWeb3React()\r\n  const userAddedTokens = useUserAddedTokens()\r\n  const allTokens = useSelectedTokenList()\r\n\r\n  return useMemo(() => {\r\n    if (!chainId) return {}\r\n    return (\r\n      userAddedTokens\r\n        // reduce into all ALL_TOKENS filtered by the current chain\r\n        .reduce<{ [address: string]: Token }>(\r\n          (tokenMap, token) => {\r\n            tokenMap[token.address] = token\r\n            return tokenMap\r\n          },\r\n          // must make a copy because reduce modifies the map, and we do not\r\n          // want to make a copy in every iteration\r\n          { ...allTokens[chainId] }\r\n        )\r\n    )\r\n  }, [chainId, userAddedTokens, allTokens])\r\n}\r\n\r\n// Check if currency is included in custom list from user storage\r\nexport function useIsUserAddedToken(currency: Currency): boolean {\r\n  const userAddedTokens = useUserAddedTokens()\r\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token))\r\n}\r\n\r\n// parse a name or symbol from a token response\r\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\r\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\r\n  return str && str.length > 0\r\n    ? str\r\n    : bytes32 && BYTES32_REGEX.test(bytes32)\r\n    ? parseBytes32String(bytes32)\r\n    : defaultValue\r\n}\r\n\r\n// undefined if invalid or does not exist\r\n// null if loading\r\n// otherwise returns the token\r\nexport function useToken(tokenAddress?: string): Token | undefined | null {\r\n  const { chainId } = useActiveWeb3React()\r\n  const tokens = useAllTokens()\r\n\r\n  const address = isAddress(tokenAddress)\r\n\r\n  const tokenContract = useTokenContract(address || undefined, false)\r\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\r\n  const token: Token | undefined = address ? tokens[address] : undefined\r\n\r\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\r\n  const tokenNameBytes32 = useSingleCallResult(\r\n    token ? undefined : tokenContractBytes32,\r\n    'name',\r\n    undefined,\r\n    NEVER_RELOAD\r\n  )\r\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\r\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\r\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\r\n\r\n  return useMemo(() => {\r\n    if (token) return token\r\n    if (!chainId || !address) return undefined\r\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\r\n    if (decimals.result) {\r\n      return new Token(\r\n        chainId,\r\n        address,\r\n        decimals.result[0],\r\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\r\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token')\r\n      )\r\n    }\r\n    return undefined\r\n  }, [\r\n    address,\r\n    chainId,\r\n    decimals.loading,\r\n    decimals.result,\r\n    symbol.loading,\r\n    symbol.result,\r\n    symbolBytes32.result,\r\n    token,\r\n    tokenName.loading,\r\n    tokenName.result,\r\n    tokenNameBytes32.result,\r\n  ])\r\n}\r\n\r\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\r\n  const isBNB = currencyId?.toUpperCase() === 'BNB'\r\n  const token = useToken(isBNB ? undefined : currencyId)\r\n  return isBNB ? ETHER : token\r\n}\r\n","import { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount } from '@pancakeswap-libs/sdk'\r\nimport { useMemo } from 'react'\r\nimport ERC20_INTERFACE from '../../constants/abis/erc20'\r\nimport { useAllTokens } from '../../hooks/Tokens'\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport { useMulticallContract } from '../../hooks/useContract'\r\nimport { isAddress } from '../../utils'\r\nimport { useSingleContractMultipleData, useMultipleContractSingleData } from '../multicall/hooks'\r\n\r\n/**\r\n * Returns a map of the given addresses to their eventually consistent ETH balances.\r\n */\r\nexport function useETHBalances(\r\n  uncheckedAddresses?: (string | undefined)[]\r\n): { [address: string]: CurrencyAmount | undefined } {\r\n  const multicallContract = useMulticallContract()\r\n\r\n  const addresses: string[] = useMemo(\r\n    () =>\r\n      uncheckedAddresses\r\n        ? uncheckedAddresses\r\n            .map(isAddress)\r\n            .filter((a): a is string => a !== false)\r\n            .sort()\r\n        : [],\r\n    [uncheckedAddresses]\r\n  )\r\n\r\n  const results = useSingleContractMultipleData(\r\n    multicallContract,\r\n    'getEthBalance',\r\n    addresses.map(address => [address])\r\n  )\r\n\r\n  return useMemo(\r\n    () =>\r\n      addresses.reduce<{ [address: string]: CurrencyAmount }>((memo, address, i) => {\r\n        const value = results?.[i]?.result?.[0]\r\n        if (value) memo[address] = CurrencyAmount.ether(JSBI.BigInt(value.toString()))\r\n        return memo\r\n      }, {}),\r\n    [addresses, results]\r\n  )\r\n}\r\n\r\n/**\r\n * Returns a map of token addresses to their eventually consistent token balances for a single account.\r\n */\r\nexport function useTokenBalancesWithLoadingIndicator(\r\n  address?: string,\r\n  tokens?: (Token | undefined)[]\r\n): [{ [tokenAddress: string]: TokenAmount | undefined }, boolean] {\r\n  const validatedTokens: Token[] = useMemo(\r\n    () => tokens?.filter((t?: Token): t is Token => isAddress(t?.address) !== false) ?? [],\r\n    [tokens]\r\n  )\r\n\r\n  const validatedTokenAddresses = useMemo(() => validatedTokens.map(vt => vt.address), [validatedTokens])\r\n\r\n  const balances = useMultipleContractSingleData(validatedTokenAddresses, ERC20_INTERFACE, 'balanceOf', [address])\r\n\r\n  const anyLoading: boolean = useMemo(() => balances.some(callState => callState.loading), [balances])\r\n\r\n  return [\r\n    useMemo(\r\n      () =>\r\n        address && validatedTokens.length > 0\r\n          ? validatedTokens.reduce<{ [tokenAddress: string]: TokenAmount | undefined }>((memo, token, i) => {\r\n              const value = balances?.[i]?.result?.[0]\r\n              const amount = value ? JSBI.BigInt(value.toString()) : undefined\r\n              if (amount) {\r\n                memo[token.address] = new TokenAmount(token, amount)\r\n              }\r\n              return memo\r\n            }, {})\r\n          : {},\r\n      [address, validatedTokens, balances]\r\n    ),\r\n    anyLoading\r\n  ]\r\n}\r\n\r\nexport function useTokenBalances(\r\n  address?: string,\r\n  tokens?: (Token | undefined)[]\r\n): { [tokenAddress: string]: TokenAmount | undefined } {\r\n  return useTokenBalancesWithLoadingIndicator(address, tokens)[0]\r\n}\r\n\r\n// get the balance for a single token/account combo\r\nexport function useTokenBalance(account?: string, token?: Token): TokenAmount | undefined {\r\n  const tokenBalances = useTokenBalances(account, [token])\r\n  if (!token) return undefined\r\n  return tokenBalances[token.address]\r\n}\r\n\r\nexport function useCurrencyBalances(\r\n  account?: string,\r\n  currencies?: (Currency | undefined)[]\r\n): (CurrencyAmount | undefined)[] {\r\n  const tokens = useMemo(() => currencies?.filter((currency): currency is Token => currency instanceof Token) ?? [], [\r\n    currencies\r\n  ])\r\n\r\n  const tokenBalances = useTokenBalances(account, tokens)\r\n  const containsETH: boolean = useMemo(() => currencies?.some(currency => currency === ETHER) ?? false, [currencies])\r\n  const ethBalance = useETHBalances(containsETH ? [account] : [])\r\n\r\n  return useMemo(\r\n    () =>\r\n      currencies?.map(currency => {\r\n        if (!account || !currency) return undefined\r\n        if (currency instanceof Token) return tokenBalances[currency.address]\r\n        if (currency === ETHER) return ethBalance[account]\r\n        return undefined\r\n      }) ?? [],\r\n    [account, currencies, ethBalance, tokenBalances]\r\n  )\r\n}\r\n\r\nexport function useCurrencyBalance(account?: string, currency?: Currency): CurrencyAmount | undefined {\r\n  return useCurrencyBalances(account, [currency])[0]\r\n}\r\n\r\n// mimics useAllBalances\r\nexport function useAllTokenBalances(): { [tokenAddress: string]: TokenAmount | undefined } {\r\n  const { account } = useActiveWeb3React()\r\n  const allTokens = useAllTokens()\r\n  const allTokensArray = useMemo(() => Object.values(allTokens ?? {}), [allTokens])\r\n  const balances = useTokenBalances(account ?? undefined, allTokensArray)\r\n  return balances ?? {}\r\n}\r\n","import { useEffect, useState } from 'react'\r\n\r\n/**\r\n * Returns the last value of type T that passes a filter function\r\n * @param value changing value\r\n * @param filterFn function that determines whether a given value should be considered for the last value\r\n */\r\nexport default function useLast<T>(\r\n  value: T | undefined | null,\r\n  filterFn?: (value: T | null | undefined) => boolean\r\n): T | null | undefined {\r\n  const [last, setLast] = useState<T | null | undefined>(filterFn && filterFn(value) ? value : undefined)\r\n  useEffect(() => {\r\n    setLast((prev) => {\r\n      const shouldUse: boolean = filterFn ? filterFn(value) : true\r\n      if (shouldUse) return value\r\n      return prev\r\n    })\r\n  }, [filterFn, value])\r\n  return last\r\n}\r\n\r\nfunction isDefined<T>(x: T | null | undefined): x is T {\r\n  return x !== null && x !== undefined\r\n}\r\n\r\n/**\r\n * Returns the last truthy value of type T\r\n * @param value changing value\r\n */\r\nexport function useLastTruthy<T>(value: T | undefined | null): T | null | undefined {\r\n  return useLast(value, isDefined)\r\n}\r\n","import CID from 'cids'\r\nimport { getCodec, rmPrefix } from 'multicodec'\r\nimport { decode, toB58String } from 'multihashes'\r\n\r\nexport function hexToUint8Array(hex: string): Uint8Array {\r\n  hex = hex.startsWith('0x') ? hex.substr(2) : hex\r\n  if (hex.length % 2 !== 0) throw new Error('hex must have length that is multiple of 2')\r\n  const arr = new Uint8Array(hex.length / 2)\r\n  for (let i = 0; i < arr.length; i++) {\r\n    arr[i] = parseInt(hex.substr(i * 2, 2), 16)\r\n  }\r\n  return arr\r\n}\r\n\r\nconst UTF_8_DECODER = new TextDecoder()\r\n\r\n/**\r\n * Returns the URI representation of the content hash for supported codecs\r\n * @param contenthash to decode\r\n */\r\nexport default function contenthashToUri(contenthash: string): string {\r\n  const buff = hexToUint8Array(contenthash)\r\n  const codec = getCodec(buff as Buffer) // the typing is wrong for @types/multicodec\r\n  switch (codec) {\r\n    case 'ipfs-ns': {\r\n      const data = rmPrefix(buff as Buffer)\r\n      const cid = new CID(data)\r\n      return `ipfs://${toB58String(cid.multihash)}`\r\n    }\r\n    case 'ipns-ns': {\r\n      const data = rmPrefix(buff as Buffer)\r\n      const cid = new CID(data)\r\n      const multihash = decode(cid.multihash)\r\n      if (multihash.name === 'identity') {\r\n        return `ipns://${UTF_8_DECODER.decode(multihash.digest).trim()}`\r\n      } \r\n        return `ipns://${toB58String(cid.multihash)}`\r\n      \r\n    }\r\n    default:\r\n      throw new Error(`Unrecognized codec: ${codec}`)\r\n  }\r\n}\r\n","const ENS_NAME_REGEX = /^(([a-zA-Z0-9]+\\.)+)eth(\\/.*)?$/\r\n\r\nexport function parseENSAddress(ensAddress: string): { ensName: string; ensPath: string | undefined } | undefined {\r\n  const match = ensAddress.match(ENS_NAME_REGEX)\r\n  if (!match) return undefined\r\n  return { ensName: `${match[1].toLowerCase()}eth`, ensPath: match[3] }\r\n}\r\n\r\nexport default parseENSAddress\r\n","/**\r\n * Given a URI that may be ipfs, ipns, http, or https protocol, return the fetch-able http(s) URLs for the same content\r\n * @param uri to convert to fetch-able http url\r\n */\r\nexport default function uriToHttp(uri: string): string[] {\r\n  const protocol = uri.split(':')[0].toLowerCase()\r\n  switch (protocol) {\r\n    case 'https':\r\n      return [uri]\r\n    case 'http':\r\n      return [`https${  uri.substr(4)}`, uri]\r\n    case 'ipfs':\r\n      const hash = uri.match(/^ipfs:(\\/\\/)?(.*)$/i)?.[2]\r\n      return [`https://cloudflare-ipfs.com/ipfs/${hash}/`, `https://ipfs.io/ipfs/${hash}/`]\r\n    case 'ipns':\r\n      const name = uri.match(/^ipns:(\\/\\/)?(.*)$/i)?.[2]\r\n      return [`https://cloudflare-ipfs.com/ipns/${name}/`, `https://ipfs.io/ipns/${name}/`]\r\n    default:\r\n      return []\r\n  }\r\n}\r\n","/**\r\n * Returns true if the string value is zero in hex\r\n * @param hexNumberString\r\n */\r\nexport default function isZero(hexNumberString: string) {\r\n  return /^0x0*$/.test(hexNumberString)\r\n}\r\n","import { useMemo } from 'react'\r\nimport contenthashToUri from '../utils/contenthashToUri'\r\nimport { parseENSAddress } from '../utils/parseENSAddress'\r\nimport uriToHttp from '../utils/uriToHttp'\r\nimport useENSContentHash from './useENSContentHash'\r\n\r\nexport default function useHttpLocations(uri: string | undefined): string[] {\r\n  const ens = useMemo(() => (uri ? parseENSAddress(uri) : undefined), [uri])\r\n  const resolvedContentHash = useENSContentHash(ens?.ensName)\r\n  return useMemo(() => {\r\n    if (ens) {\r\n      return resolvedContentHash.contenthash ? uriToHttp(contenthashToUri(resolvedContentHash.contenthash)) : []\r\n    } \r\n      return uri ? uriToHttp(uri) : []\r\n    \r\n  }, [ens, resolvedContentHash.contenthash, uri])\r\n}\r\n","import { namehash } from 'ethers/lib/utils'\r\nimport { useMemo } from 'react'\r\nimport { useSingleCallResult } from '../state/multicall/hooks'\r\nimport isZero from '../utils/isZero'\r\nimport { useENSRegistrarContract, useENSResolverContract } from './useContract'\r\n\r\n/**\r\n * Does a lookup for an ENS name to find its contenthash.\r\n */\r\nexport default function useENSContentHash(ensName?: string | null): { loading: boolean; contenthash: string | null } {\r\n  const ensNodeArgument = useMemo(() => {\r\n    if (!ensName) return [undefined]\r\n    try {\r\n      return ensName ? [namehash(ensName)] : [undefined]\r\n    } catch (error) {\r\n      return [undefined]\r\n    }\r\n  }, [ensName])\r\n  const registrarContract = useENSRegistrarContract(false)\r\n  const resolverAddressResult = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\r\n  const resolverAddress = resolverAddressResult.result?.[0]\r\n  const resolverContract = useENSResolverContract(\r\n    resolverAddress && isZero(resolverAddress) ? undefined : resolverAddress,\r\n    false\r\n  )\r\n  const contenthash = useSingleCallResult(resolverContract, 'contenthash', ensNodeArgument)\r\n\r\n  return {\r\n    contenthash: contenthash.result?.[0] ?? null,\r\n    loading: resolverAddressResult.loading || contenthash.loading\r\n  }\r\n}\r\n","import React, { useState } from 'react'\r\nimport { HelpCircle } from 'react-feather'\r\n\r\nconst BAD_SRCS: { [tokenAddress: string]: true } = {}\r\n\r\nexport interface LogoProps {\r\n  alt?: string\r\n  style?: any\r\n  className?: string\r\n  srcs: string[]\r\n}\r\n\r\n/**\r\n * Renders an image by sequentially trying a list of URIs, and then eventually a fallback triangle alert\r\n */\r\nexport default function Logo({ srcs, alt, ...rest }: LogoProps) {\r\n  const [, refresh] = useState<number>(0)\r\n\r\n  const src: string | undefined = srcs.find((s) => !BAD_SRCS[s])\r\n\r\n  if (src) {\r\n    return (\r\n      <img\r\n        {...rest}\r\n        alt={alt}\r\n        src={src}\r\n        onError={() => {\r\n          if (src) BAD_SRCS[src] = true\r\n          refresh((i) => i + 1)\r\n        }}\r\n      />\r\n    )\r\n  }\r\n\r\n  return <HelpCircle {...rest} />\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport useHttpLocations from '../../hooks/useHttpLocations'\r\n\r\nimport Logo from '../Logo'\r\n\r\nconst StyledListLogo = styled(Logo)<{ size: string }>`\r\n  width: ${({ size }) => size};\r\n  height: ${({ size }) => size};\r\n`\r\n\r\nexport default function ListLogo({\r\n  logoURI,\r\n  style,\r\n  size = '24px',\r\n  alt\r\n}: {\r\n  logoURI: string\r\n  size?: string\r\n  style?: React.CSSProperties\r\n  alt?: string\r\n}) {\r\n  const srcs: string[] = useHttpLocations(logoURI)\r\n\r\n  return <StyledListLogo alt={alt} size={size} srcs={srcs} style={style} />\r\n}\r\n","import { useEffect, useRef } from 'react'\r\n\r\nexport default function useInterval(callback: () => void, delay: null | number, leading = true) {\r\n  const savedCallback = useRef<() => void>()\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback\r\n  }, [callback])\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      const { current } = savedCallback\r\n      if (current) {\r\n        current()\r\n      }\r\n    }\r\n\r\n    if (delay !== null) {\r\n      if (leading) tick()\r\n      const id = setInterval(tick, delay)\r\n      return () => clearInterval(id)\r\n    }\r\n    return undefined\r\n  }, [delay, leading])\r\n}\r\n","import { Placement } from '@popperjs/core'\r\nimport { transparentize } from 'polished'\r\nimport React, { useCallback, useState } from 'react'\r\nimport { usePopper } from 'react-popper'\r\nimport styled from 'styled-components'\r\nimport Portal from '@reach/portal'\r\nimport useInterval from '../../hooks/useInterval'\r\n\r\nconst PopoverContainer = styled.div<{ show: boolean }>`\r\n  z-index: 9999;\r\n\r\n  visibility: ${(props) => (props.show ? 'visible' : 'hidden')};\r\n  opacity: ${(props) => (props.show ? 1 : 0)};\r\n  transition: visibility 150ms linear, opacity 150ms linear;\r\n\r\n  background: ${({ theme }) => theme.colors.invertedContrast};\r\n  border: 1px solid ${({ theme }) => theme.colors.tertiary};\r\n  box-shadow: 0 4px 8px 0 ${transparentize(0.9, '#2F80ED')};\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  border-radius: 8px;\r\n`\r\n\r\nconst ReferenceElement = styled.div`\r\n  display: inline-block;\r\n`\r\n\r\nconst Arrow = styled.div`\r\n  width: 8px;\r\n  height: 8px;\r\n  z-index: 9998;\r\n\r\n  ::before {\r\n    position: absolute;\r\n    width: 8px;\r\n    height: 8px;\r\n    z-index: 9998;\r\n\r\n    content: '';\r\n    border: 1px solid ${({ theme }) => theme.colors.tertiary};\r\n    transform: rotate(45deg);\r\n    background: ${({ theme }) => theme.colors.invertedContrast};\r\n  }\r\n\r\n  &.arrow-top {\r\n    bottom: -5px;\r\n    ::before {\r\n      border-top: none;\r\n      border-left: none;\r\n    }\r\n  }\r\n\r\n  &.arrow-bottom {\r\n    top: -5px;\r\n    ::before {\r\n      border-bottom: none;\r\n      border-right: none;\r\n    }\r\n  }\r\n\r\n  &.arrow-left {\r\n    right: -5px;\r\n\r\n    ::before {\r\n      border-bottom: none;\r\n      border-left: none;\r\n    }\r\n  }\r\n\r\n  &.arrow-right {\r\n    left: -5px;\r\n    ::before {\r\n      border-right: none;\r\n      border-top: none;\r\n    }\r\n  }\r\n`\r\n\r\nexport interface PopoverProps {\r\n  content: React.ReactNode\r\n  show: boolean\r\n  children: React.ReactNode\r\n  placement?: Placement\r\n}\r\n\r\nexport default function Popover({ content, show, children, placement = 'auto' }: PopoverProps) {\r\n  const [referenceElement, setReferenceElement] = useState<HTMLDivElement | null>(null)\r\n  const [popperElement, setPopperElement] = useState<HTMLDivElement | null>(null)\r\n  const [arrowElement, setArrowElement] = useState<HTMLDivElement | null>(null)\r\n  const { styles, update, attributes } = usePopper(referenceElement, popperElement, {\r\n    placement,\r\n    strategy: 'fixed',\r\n    modifiers: [\r\n      { name: 'offset', options: { offset: [8, 8] } },\r\n      { name: 'arrow', options: { element: arrowElement } },\r\n    ],\r\n  })\r\n  const updateCallback = useCallback(() => {\r\n    if (update) {\r\n      update()\r\n    }\r\n  }, [update])\r\n  useInterval(updateCallback, show ? 100 : null)\r\n\r\n  return (\r\n    <>\r\n      <ReferenceElement ref={setReferenceElement as any}>{children}</ReferenceElement>\r\n      <Portal>\r\n        <PopoverContainer show={show} ref={setPopperElement as any} style={styles.popper} {...attributes.popper}>\r\n          {content}\r\n          <Arrow\r\n            className={`arrow-${attributes.popper?.['data-popper-placement'] ?? ''}`}\r\n            ref={setArrowElement as any}\r\n            style={styles.arrow}\r\n            {...attributes.arrow}\r\n          />\r\n        </PopoverContainer>\r\n      </Portal>\r\n    </>\r\n  )\r\n}\r\n","import React, { useCallback, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport Popover, { PopoverProps } from '../Popover'\r\n\r\nconst TooltipContainer = styled.div`\r\n  width: 228px;\r\n  padding: 0.6rem 1rem;\r\n  line-height: 150%;\r\n  font-weight: 400;\r\n`\r\n\r\ninterface TooltipProps extends Omit<PopoverProps, 'content'> {\r\n  text: string\r\n}\r\n\r\nexport default function Tooltip({ text, ...rest }: TooltipProps) {\r\n  return <Popover content={<TooltipContainer>{text}</TooltipContainer>} {...rest} />\r\n}\r\n\r\nexport function MouseoverTooltip({ children, ...rest }: Omit<TooltipProps, 'show'>) {\r\n  const [show, setShow] = useState(false)\r\n  const open = useCallback(() => setShow(true), [setShow])\r\n  const close = useCallback(() => setShow(false), [setShow])\r\n  return (\r\n    <Tooltip {...rest} show={show}>\r\n      <div onMouseEnter={open} onMouseLeave={close}>\r\n        {children}\r\n      </div>\r\n    </Tooltip>\r\n  )\r\n}\r\n","import React, { useCallback, useState } from 'react'\r\nimport { HelpCircle as Question } from 'react-feather'\r\nimport styled from 'styled-components'\r\nimport Tooltip from '../Tooltip'\r\n\r\nconst QuestionWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 0.2rem;\r\n  border: none;\r\n  background: none;\r\n  outline: none;\r\n  cursor: default;\r\n  border-radius: 36px;\r\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n\r\n  :hover,\r\n  :focus {\r\n    opacity: 0.7;\r\n  }\r\n`\r\n\r\nexport default function QuestionHelper({ text }: { text: string }) {\r\n  const [show, setShow] = useState<boolean>(false)\r\n\r\n  const open = useCallback(() => setShow(true), [setShow])\r\n  const close = useCallback(() => setShow(false), [setShow])\r\n\r\n  return (\r\n    <span style={{ marginLeft: 4 }}>\r\n      <Tooltip text={text} show={show}>\r\n        <QuestionWrapper onClick={open} onMouseEnter={open} onMouseLeave={close}>\r\n          <Question size={16} />\r\n        </QuestionWrapper>\r\n      </Tooltip>\r\n    </span>\r\n  )\r\n}\r\n","import styled from 'styled-components'\r\nimport Logo from '../Logo'\r\n\r\nconst CoinLogo = styled(Logo)<{ size: string }>`\r\n  width: ${({ size }) => size};\r\n  height: ${({ size }) => size};\r\n`\r\n\r\nexport default CoinLogo\r\n","import { Currency, ETHER, Token } from '@pancakeswap-libs/sdk'\r\nimport React, { useMemo } from 'react'\r\nimport styled from 'styled-components'\r\nimport useHttpLocations from '../../hooks/useHttpLocations'\r\nimport { WrappedTokenInfo } from '../../state/lists/hooks'\r\nimport Logo from '../Logo'\r\nimport CoinLogo from '../pancake/CoinLogo'\r\n\r\nconst getTokenLogoURL = (address: string) =>\r\n  `https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/smartchain/assets/${address}/logo.png`\r\n\r\nconst StyledBnbLogo = styled.img<{ size: string }>`\r\n  width: ${({ size }) => size};\r\n  height: ${({ size }) => size};\r\n  box-shadow: 0px 6px 10px rgba(0, 0, 0, 0.075);\r\n  border-radius: 24px;\r\n`\r\n\r\nconst StyledLogo = styled(Logo)<{ size: string }>`\r\n  width: ${({ size }) => size};\r\n  height: ${({ size }) => size};\r\n`\r\n\r\nexport default function CurrencyLogo({\r\n  currency,\r\n  size = '24px',\r\n  style,\r\n}: {\r\n  currency?: Currency\r\n  size?: string\r\n  style?: React.CSSProperties\r\n}) {\r\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined)\r\n\r\n  const srcs: string[] = useMemo(() => {\r\n    if (currency === ETHER) return []\r\n\r\n    if (currency instanceof Token) {\r\n      if (currency instanceof WrappedTokenInfo) {\r\n        return [...uriLocations, `/images/coins/${currency?.address ?? 'token'}.png`, getTokenLogoURL(currency.address)]\r\n      }\r\n\r\n      return [`/images/coins/${currency?.address ?? 'token'}.png`, getTokenLogoURL(currency.address)]\r\n    }\r\n    return []\r\n  }, [currency, uriLocations])\r\n\r\n  if (currency === ETHER) {\r\n    return <StyledBnbLogo src=\"/images/coins/bnb.png\" size={size} style={style} />\r\n  }\r\n\r\n  return (currency as any)?.symbol ? (\r\n    <CoinLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\r\n  ) : (\r\n    <StyledLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\nimport { ChainId, Currency, currencyEquals, ETHER, Token } from '@pancakeswap-libs/sdk'\r\nimport styled from 'styled-components'\r\n\r\nimport useI18n from 'hooks/useI18n'\r\nimport { SUGGESTED_BASES } from '../../constants'\r\nimport { AutoColumn } from '../Column'\r\nimport QuestionHelper from '../QuestionHelper'\r\nimport { AutoRow } from '../Row'\r\nimport CurrencyLogo from '../CurrencyLogo'\r\n\r\nconst BaseWrapper = styled.div<{ disable?: boolean }>`\r\n  border: 1px solid ${({ theme, disable }) => (disable ? 'transparent' : theme.colors.tertiary)};\r\n  border-radius: 10px;\r\n  display: flex;\r\n  padding: 6px;\r\n\r\n  align-items: center;\r\n  :hover {\r\n    cursor: ${({ disable }) => !disable && 'pointer'};\r\n    background-color: ${({ theme, disable }) => !disable && theme.colors.invertedContrast};\r\n  }\r\n\r\n  background-color: ${({ theme, disable }) => disable && theme.colors.tertiary};\r\n  opacity: ${({ disable }) => disable && '0.4'};\r\n`\r\n\r\nexport default function CommonBases({\r\n  chainId,\r\n  onSelect,\r\n  selectedCurrency,\r\n}: {\r\n  chainId?: ChainId\r\n  selectedCurrency?: Currency | null\r\n  onSelect: (currency: Currency) => void\r\n}) {\r\n  const TranslateString = useI18n()\r\n  return (\r\n    <AutoColumn gap=\"md\">\r\n      <AutoRow>\r\n        <Text fontSize=\"14px\">Common bases</Text>\r\n        <QuestionHelper text={TranslateString(1204, 'These tokens are commonly paired with other tokens.')} />\r\n      </AutoRow>\r\n      <AutoRow gap=\"4px\">\r\n        <BaseWrapper\r\n          onClick={() => {\r\n            if (!selectedCurrency || !currencyEquals(selectedCurrency, ETHER)) {\r\n              onSelect(ETHER)\r\n            }\r\n          }}\r\n          disable={selectedCurrency === ETHER}\r\n        >\r\n          <CurrencyLogo currency={ETHER} style={{ marginRight: 8 }} />\r\n          <Text>BNB</Text>\r\n        </BaseWrapper>\r\n        {(chainId ? SUGGESTED_BASES[chainId] : []).map((token: Token) => {\r\n          const selected = selectedCurrency instanceof Token && selectedCurrency.address === token.address\r\n          return (\r\n            <BaseWrapper onClick={() => !selected && onSelect(token)} disable={selected} key={token.address}>\r\n              <CurrencyLogo currency={token} style={{ marginRight: 8 }} />\r\n              <Text>{token.symbol}</Text>\r\n            </BaseWrapper>\r\n          )\r\n        })}\r\n      </AutoRow>\r\n    </AutoColumn>\r\n  )\r\n}\r\n","import styled from 'styled-components'\r\nimport { AutoColumn } from '../Column'\r\nimport { RowBetween, RowFixed } from '../Row'\r\n\r\nexport const FadedSpan = styled(RowFixed)`\r\n  color: ${({ theme }) => theme.colors.primary};\r\n  font-size: 14px;\r\n`\r\n\r\nexport const PaddedColumn = styled(AutoColumn)`\r\n  padding: 20px;\r\n  padding-bottom: 12px;\r\n`\r\n\r\nexport const MenuItem = styled(RowBetween)`\r\n  padding: 4px 20px;\r\n  height: 56px;\r\n  display: grid;\r\n  grid-template-columns: auto minmax(auto, 1fr) auto minmax(0, 72px);\r\n  grid-gap: 16px;\r\n  cursor: ${({ disabled }) => !disabled && 'pointer'};\r\n  pointer-events: ${({ disabled }) => disabled && 'none'};\r\n  :hover {\r\n    background-color: ${({ theme, disabled }) => !disabled && theme.colors.invertedContrast};\r\n  }\r\n  opacity: ${({ disabled, selected }) => (disabled || selected ? 0.5 : 1)};\r\n`\r\n\r\nexport const SearchInput = styled.input`\r\n  position: relative;\r\n  display: flex;\r\n  padding: 16px;\r\n  align-items: center;\r\n  width: 100%;\r\n  white-space: nowrap;\r\n  background: none;\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 20px;\r\n  color: ${({ theme }) => theme.colors.text};\r\n  border-style: solid;\r\n  border: 1px solid ${({ theme }) => theme.colors.tertiary};\r\n  -webkit-appearance: none;\r\n\r\n  font-size: 18px;\r\n\r\n  ::placeholder {\r\n    color: ${({ theme }) => theme.colors.textDisabled};\r\n  }\r\n  transition: border 100ms;\r\n  :focus {\r\n    border: 1px solid ${({ theme }) => theme.colors.primary};\r\n    outline: none;\r\n  }\r\n`\r\nexport const Separator = styled.div`\r\n  width: 100%;\r\n  height: 1px;\r\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\r\n`\r\n\r\nexport const SeparatorDark = styled.div`\r\n  width: 100%;\r\n  height: 1px;\r\n  background-color: ${({ theme }) => theme.colors.tertiary};\r\n`\r\n","import { Currency, CurrencyAmount, currencyEquals, ETHER, Token } from '@pancakeswap-libs/sdk'\r\nimport React, { CSSProperties, MutableRefObject, useCallback, useMemo } from 'react'\r\nimport { FixedSizeList } from 'react-window'\r\nimport styled from 'styled-components'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport { useSelectedTokenList, WrappedTokenInfo } from '../../state/lists/hooks'\r\nimport { useAddUserToken, useRemoveUserAddedToken } from '../../state/user/hooks'\r\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\r\nimport { LinkStyledButton } from '../Shared'\r\nimport { useIsUserAddedToken } from '../../hooks/Tokens'\r\nimport Column from '../Column'\r\nimport { RowFixed } from '../Row'\r\nimport CurrencyLogo from '../CurrencyLogo'\r\nimport { MouseoverTooltip } from '../Tooltip'\r\nimport { FadedSpan, MenuItem } from './styleds'\r\nimport Loader from '../Loader'\r\nimport { isTokenOnList } from '../../utils'\r\n\r\nfunction currencyKey(currency: Currency): string {\r\n  return currency instanceof Token ? currency.address : currency === ETHER ? 'ETHER' : ''\r\n}\r\n\r\nconst StyledBalanceText = styled(Text)`\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  max-width: 5rem;\r\n  text-overflow: ellipsis;\r\n`\r\n\r\nconst Tag = styled.div`\r\n  background-color: ${({ theme }) => theme.colors.tertiary};\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  font-size: 14px;\r\n  border-radius: 4px;\r\n  padding: 0.25rem 0.3rem 0.25rem 0.3rem;\r\n  max-width: 6rem;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  justify-self: flex-end;\r\n  margin-right: 4px;\r\n`\r\n\r\nfunction Balance({ balance }: { balance: CurrencyAmount }) {\r\n  return <StyledBalanceText title={balance.toExact()}>{balance.toSignificant(4)}</StyledBalanceText>\r\n}\r\n\r\nconst TagContainer = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n`\r\n\r\nfunction TokenTags({ currency }: { currency: Currency }) {\r\n  if (!(currency instanceof WrappedTokenInfo)) {\r\n    return <span />\r\n  }\r\n\r\n  const { tags } = currency\r\n  if (!tags || tags.length === 0) return <span />\r\n\r\n  const tag = tags[0]\r\n\r\n  return (\r\n    <TagContainer>\r\n      <MouseoverTooltip text={tag.description}>\r\n        <Tag key={tag.id}>{tag.name}</Tag>\r\n      </MouseoverTooltip>\r\n      {tags.length > 1 ? (\r\n        <MouseoverTooltip\r\n          text={tags\r\n            .slice(1)\r\n            .map(({ name, description }) => `${name}: ${description}`)\r\n            .join('; \\n')}\r\n        >\r\n          <Tag>...</Tag>\r\n        </MouseoverTooltip>\r\n      ) : null}\r\n    </TagContainer>\r\n  )\r\n}\r\n\r\nfunction CurrencyRow({\r\n  currency,\r\n  onSelect,\r\n  isSelected,\r\n  otherSelected,\r\n  style,\r\n}: {\r\n  currency: Currency\r\n  onSelect: () => void\r\n  isSelected: boolean\r\n  otherSelected: boolean\r\n  style: CSSProperties\r\n}) {\r\n  const { account, chainId } = useActiveWeb3React()\r\n  const key = currencyKey(currency)\r\n  const selectedTokenList = useSelectedTokenList()\r\n  const isOnSelectedList = isTokenOnList(selectedTokenList, currency)\r\n  const customAdded = useIsUserAddedToken(currency)\r\n  const balance = useCurrencyBalance(account ?? undefined, currency)\r\n\r\n  const removeToken = useRemoveUserAddedToken()\r\n  const addToken = useAddUserToken()\r\n\r\n  // only show add or remove buttons if not on selected list\r\n  return (\r\n    <MenuItem\r\n      style={style}\r\n      className={`token-item-${key}`}\r\n      onClick={() => (isSelected ? null : onSelect())}\r\n      disabled={isSelected}\r\n      selected={otherSelected}\r\n    >\r\n      <CurrencyLogo currency={currency} size=\"24px\" />\r\n      <Column>\r\n        <Text title={currency.name}>{currency.symbol}</Text>\r\n        <FadedSpan>\r\n          {!isOnSelectedList && customAdded && !(currency instanceof WrappedTokenInfo) ? (\r\n            <Text>\r\n              Added by user\r\n              <LinkStyledButton\r\n                onClick={(event) => {\r\n                  event.stopPropagation()\r\n                  if (chainId && currency instanceof Token) removeToken(chainId, currency.address)\r\n                }}\r\n              >\r\n                (Remove)\r\n              </LinkStyledButton>\r\n            </Text>\r\n          ) : null}\r\n          {!isOnSelectedList && !customAdded && !(currency instanceof WrappedTokenInfo) ? (\r\n            <Text>\r\n              Found by address\r\n              <LinkStyledButton\r\n                onClick={(event) => {\r\n                  event.stopPropagation()\r\n                  if (currency instanceof Token) addToken(currency)\r\n                }}\r\n              >\r\n                (Add)\r\n              </LinkStyledButton>\r\n            </Text>\r\n          ) : null}\r\n        </FadedSpan>\r\n      </Column>\r\n      <TokenTags currency={currency} />\r\n      <RowFixed style={{ justifySelf: 'flex-end' }}>\r\n        {balance ? <Balance balance={balance} /> : account ? <Loader /> : null}\r\n      </RowFixed>\r\n    </MenuItem>\r\n  )\r\n}\r\n\r\nexport default function CurrencyList({\r\n  height,\r\n  currencies,\r\n  selectedCurrency,\r\n  onCurrencySelect,\r\n  otherCurrency,\r\n  fixedListRef,\r\n  showETH,\r\n}: {\r\n  height: number\r\n  currencies: Currency[]\r\n  selectedCurrency?: Currency | null\r\n  onCurrencySelect: (currency: Currency) => void\r\n  otherCurrency?: Currency | null\r\n  fixedListRef?: MutableRefObject<FixedSizeList | undefined>\r\n  showETH: boolean\r\n}) {\r\n  const itemData = useMemo(() => (showETH ? [Currency.ETHER, ...currencies] : [...currencies]), [currencies, showETH])\r\n\r\n  const Row = useCallback(\r\n    ({ data, index, style }) => {\r\n      const currency: Currency = data[index]\r\n      const isSelected = Boolean(selectedCurrency && currencyEquals(selectedCurrency, currency))\r\n      const otherSelected = Boolean(otherCurrency && currencyEquals(otherCurrency, currency))\r\n      const handleSelect = () => onCurrencySelect(currency)\r\n      return (\r\n        <CurrencyRow\r\n          style={style}\r\n          currency={currency}\r\n          isSelected={isSelected}\r\n          onSelect={handleSelect}\r\n          otherSelected={otherSelected}\r\n        />\r\n      )\r\n    },\r\n    [onCurrencySelect, otherCurrency, selectedCurrency]\r\n  )\r\n\r\n  const itemKey = useCallback((index: number, data: any) => currencyKey(data[index]), [])\r\n\r\n  return (\r\n    <FixedSizeList\r\n      height={height}\r\n      ref={fixedListRef as any}\r\n      width=\"100%\"\r\n      itemData={itemData}\r\n      itemCount={itemData.length}\r\n      itemSize={56}\r\n      itemKey={itemKey}\r\n    >\r\n      {Row}\r\n    </FixedSizeList>\r\n  )\r\n}\r\n","import { Token } from '@pancakeswap-libs/sdk'\r\nimport { isAddress } from '../../utils'\r\n\r\nexport function filterTokens(tokens: Token[], search: string): Token[] {\r\n  if (search.length === 0) return tokens\r\n\r\n  const searchingAddress = isAddress(search)\r\n\r\n  if (searchingAddress) {\r\n    return tokens.filter((token) => token.address === searchingAddress)\r\n  }\r\n\r\n  const lowerSearchParts = search\r\n    .toLowerCase()\r\n    .split(/\\s+/)\r\n    .filter((s) => s.length > 0)\r\n\r\n  if (lowerSearchParts.length === 0) {\r\n    return tokens\r\n  }\r\n\r\n  const matchesSearch = (s: string): boolean => {\r\n    const sParts = s\r\n      .toLowerCase()\r\n      .split(/\\s+/)\r\n      .filter((str) => str.length > 0)\r\n\r\n    return lowerSearchParts.every((p) => p.length === 0 || sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p)))\r\n  }\r\n\r\n  return tokens.filter((token) => {\r\n    const { symbol, name } = token\r\n\r\n    return (symbol && matchesSearch(symbol)) || (name && matchesSearch(name))\r\n  })\r\n}\r\n\r\nexport default filterTokens\r\n","import React from 'react'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\nimport styled from 'styled-components'\r\nimport { RowFixed } from '../Row'\r\n\r\nexport const FilterWrapper = styled(RowFixed)`\r\n  padding: 8px;\r\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\r\n  color: ${({ theme }) => theme.colors.text};\r\n  border-radius: 8px;\r\n  user-select: none;\r\n  & > * {\r\n    user-select: none;\r\n  }\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nexport default function SortButton({\r\n  toggleSortOrder,\r\n  ascending\r\n}: {\r\n  toggleSortOrder: () => void\r\n  ascending: boolean\r\n}) {\r\n  return (\r\n    <FilterWrapper onClick={toggleSortOrder}>\r\n      <Text fontSize=\"14px\">{ascending ? '↑' : '↓'}</Text>\r\n    </FilterWrapper>\r\n  )\r\n}\r\n","import { Token, TokenAmount } from '@pancakeswap-libs/sdk'\r\nimport { useMemo } from 'react'\r\nimport { useAllTokenBalances } from '../../state/wallet/hooks'\r\n\r\n// compare two token amounts with highest one coming first\r\nfunction balanceComparator(balanceA?: TokenAmount, balanceB?: TokenAmount) {\r\n  if (balanceA && balanceB) {\r\n    return balanceA.greaterThan(balanceB) ? -1 : balanceA.equalTo(balanceB) ? 0 : 1\r\n  }\r\n  if (balanceA && balanceA.greaterThan('0')) {\r\n    return -1\r\n  }\r\n  if (balanceB && balanceB.greaterThan('0')) {\r\n    return 1\r\n  }\r\n  return 0\r\n}\r\n\r\nfunction getTokenComparator(balances: {\r\n  [tokenAddress: string]: TokenAmount | undefined\r\n}): (tokenA: Token, tokenB: Token) => number {\r\n  return function sortTokens(tokenA: Token, tokenB: Token): number {\r\n    // -1 = a is first\r\n    // 1 = b is first\r\n\r\n    // sort by balances\r\n    const balanceA = balances[tokenA.address]\r\n    const balanceB = balances[tokenB.address]\r\n\r\n    const balanceComp = balanceComparator(balanceA, balanceB)\r\n    if (balanceComp !== 0) return balanceComp\r\n\r\n    if (tokenA.symbol && tokenB.symbol) {\r\n      // sort by symbol\r\n      return tokenA.symbol.toLowerCase() < tokenB.symbol.toLowerCase() ? -1 : 1\r\n    }\r\n    return tokenA.symbol ? -1 : tokenB.symbol ? -1 : 0\r\n  }\r\n}\r\n\r\nexport function useTokenComparator(inverted: boolean): (tokenA: Token, tokenB: Token) => number {\r\n  const balances = useAllTokenBalances()\r\n  const comparator = useMemo(() => getTokenComparator(balances ?? {}), [balances])\r\n  return useMemo(() => {\r\n    if (inverted) {\r\n      return (tokenA: Token, tokenB: Token) => comparator(tokenA, tokenB) * -1\r\n    }\r\n    return comparator\r\n  }, [inverted, comparator])\r\n}\r\n\r\nexport default useTokenComparator\r\n","import { Currency, ETHER, Token } from '@pancakeswap-libs/sdk'\r\nimport React, { KeyboardEvent, RefObject, useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react'\r\nimport { Text, CloseIcon } from '@pancakeswap-libs/uikit'\r\nimport { useSelector } from 'react-redux'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { FixedSizeList } from 'react-window'\r\nimport { ThemeContext } from 'styled-components'\r\nimport AutoSizer from 'react-virtualized-auto-sizer'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport { AppState } from '../../state'\r\nimport { useAllTokens, useToken } from '../../hooks/Tokens'\r\nimport { useSelectedListInfo } from '../../state/lists/hooks'\r\nimport { LinkStyledButton } from '../Shared'\r\nimport { isAddress } from '../../utils'\r\nimport Card from '../Card'\r\nimport Column from '../Column'\r\nimport ListLogo from '../ListLogo'\r\nimport QuestionHelper from '../QuestionHelper'\r\nimport Row, { RowBetween } from '../Row'\r\nimport CommonBases from './CommonBases'\r\nimport CurrencyList from './CurrencyList'\r\nimport { filterTokens } from './filtering'\r\nimport SortButton from './SortButton'\r\nimport { useTokenComparator } from './sorting'\r\nimport { PaddedColumn, SearchInput, Separator } from './styleds'\r\n\r\ninterface CurrencySearchProps {\r\n  isOpen: boolean\r\n  onDismiss: () => void\r\n  selectedCurrency?: Currency | null\r\n  onCurrencySelect: (currency: Currency) => void\r\n  otherSelectedCurrency?: Currency | null\r\n  showCommonBases?: boolean\r\n  onChangeList: () => void\r\n}\r\n\r\nexport function CurrencySearch({\r\n  selectedCurrency,\r\n  onCurrencySelect,\r\n  otherSelectedCurrency,\r\n  showCommonBases,\r\n  onDismiss,\r\n  isOpen,\r\n  onChangeList,\r\n}: CurrencySearchProps) {\r\n  const { t } = useTranslation()\r\n  const { chainId } = useActiveWeb3React()\r\n  const theme = useContext(ThemeContext)\r\n\r\n  const fixedList = useRef<FixedSizeList>()\r\n  const [searchQuery, setSearchQuery] = useState<string>('')\r\n  const [invertSearchOrder, setInvertSearchOrder] = useState<boolean>(false)\r\n  const allTokens = useAllTokens()\r\n\r\n  // if they input an address, use it\r\n  const isAddressSearch = isAddress(searchQuery)\r\n  const searchToken = useToken(searchQuery)\r\n\r\n  const showETH: boolean = useMemo(() => {\r\n    const s = searchQuery.toLowerCase().trim()\r\n    return s === '' || s === 'b' || s === 'bn' || s === 'bnb'\r\n  }, [searchQuery])\r\n\r\n  const tokenComparator = useTokenComparator(invertSearchOrder)\r\n\r\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\r\n\r\n  const filteredTokens: Token[] = useMemo(() => {\r\n    if (isAddressSearch) return searchToken ? [searchToken] : []\r\n    return filterTokens(Object.values(allTokens), searchQuery)\r\n  }, [isAddressSearch, searchToken, allTokens, searchQuery])\r\n\r\n  const filteredSortedTokens: Token[] = useMemo(() => {\r\n    if (searchToken) return [searchToken]\r\n    const sorted = filteredTokens.sort(tokenComparator)\r\n    const symbolMatch = searchQuery\r\n      .toLowerCase()\r\n      .split(/\\s+/)\r\n      .filter((s) => s.length > 0)\r\n    if (symbolMatch.length > 1) return sorted\r\n\r\n    return [\r\n      ...(searchToken ? [searchToken] : []),\r\n      // sort any exact symbol matches first\r\n      ...sorted.filter((token) => token.symbol?.toLowerCase() === symbolMatch[0]),\r\n      ...sorted.filter((token) => token.symbol?.toLowerCase() !== symbolMatch[0]),\r\n    ]\r\n  }, [filteredTokens, searchQuery, searchToken, tokenComparator])\r\n\r\n  const handleCurrencySelect = useCallback(\r\n    (currency: Currency) => {\r\n      onCurrencySelect(currency)\r\n      onDismiss()\r\n      if (audioPlay) {\r\n        const audio = document.getElementById('bgMusic') as HTMLAudioElement\r\n        if (audio) {\r\n          audio.play()\r\n        }\r\n      }\r\n    },\r\n    [onDismiss, onCurrencySelect, audioPlay]\r\n  )\r\n\r\n  // clear the input on open\r\n  useEffect(() => {\r\n    if (isOpen) setSearchQuery('')\r\n  }, [isOpen])\r\n\r\n  // manage focus on modal show\r\n  const inputRef = useRef<HTMLInputElement>()\r\n  const handleInput = useCallback((event) => {\r\n    const input = event.target.value\r\n    const checksummedInput = isAddress(input)\r\n    setSearchQuery(checksummedInput || input)\r\n    fixedList.current?.scrollTo(0)\r\n  }, [])\r\n\r\n  const handleEnter = useCallback(\r\n    (e: KeyboardEvent<HTMLInputElement>) => {\r\n      if (e.key === 'Enter') {\r\n        const s = searchQuery.toLowerCase().trim()\r\n        if (s === 'bnb') {\r\n          handleCurrencySelect(ETHER)\r\n        } else if (filteredSortedTokens.length > 0) {\r\n          if (\r\n            filteredSortedTokens[0].symbol?.toLowerCase() === searchQuery.trim().toLowerCase() ||\r\n            filteredSortedTokens.length === 1\r\n          ) {\r\n            handleCurrencySelect(filteredSortedTokens[0])\r\n          }\r\n        }\r\n      }\r\n    },\r\n    [filteredSortedTokens, handleCurrencySelect, searchQuery]\r\n  )\r\n\r\n  const selectedListInfo = useSelectedListInfo()\r\n  const TranslateString = useI18n()\r\n  return (\r\n    <Column style={{ width: '100%', flex: '1 1' }}>\r\n      <PaddedColumn gap=\"14px\">\r\n        <RowBetween>\r\n          <Text>\r\n            {TranslateString(82, 'Select a token')}\r\n            <QuestionHelper\r\n              text={TranslateString(\r\n                128,\r\n                'Find a token by searching for its name or symbol or by pasting its address below.'\r\n              )}\r\n            />\r\n          </Text>\r\n          <CloseIcon onClick={onDismiss} />\r\n        </RowBetween>\r\n        <SearchInput\r\n          type=\"text\"\r\n          id=\"token-search-input\"\r\n          placeholder={t('tokenSearchPlaceholder')}\r\n          value={searchQuery}\r\n          ref={inputRef as RefObject<HTMLInputElement>}\r\n          onChange={handleInput}\r\n          onKeyDown={handleEnter}\r\n        />\r\n        {showCommonBases && (\r\n          <CommonBases chainId={chainId} onSelect={handleCurrencySelect} selectedCurrency={selectedCurrency} />\r\n        )}\r\n        <RowBetween>\r\n          <Text fontSize=\"14px\">{TranslateString(126, 'Token name')}</Text>\r\n          <SortButton ascending={invertSearchOrder} toggleSortOrder={() => setInvertSearchOrder((iso) => !iso)} />\r\n        </RowBetween>\r\n      </PaddedColumn>\r\n\r\n      <Separator />\r\n\r\n      <div style={{ flex: '1' }}>\r\n        <AutoSizer disableWidth>\r\n          {({ height }) => (\r\n            <CurrencyList\r\n              height={height}\r\n              showETH={showETH}\r\n              currencies={filteredSortedTokens}\r\n              onCurrencySelect={handleCurrencySelect}\r\n              otherCurrency={otherSelectedCurrency}\r\n              selectedCurrency={selectedCurrency}\r\n              fixedListRef={fixedList}\r\n            />\r\n          )}\r\n        </AutoSizer>\r\n      </div>\r\n\r\n      {null && (\r\n        <>\r\n          <Separator />\r\n          <Card>\r\n            <RowBetween>\r\n              {selectedListInfo.current ? (\r\n                <Row>\r\n                  {selectedListInfo.current.logoURI ? (\r\n                    <ListLogo\r\n                      style={{ marginRight: 12 }}\r\n                      logoURI={selectedListInfo.current.logoURI}\r\n                      alt={`${selectedListInfo.current.name} list logo`}\r\n                    />\r\n                  ) : null}\r\n                  <Text id=\"currency-search-selected-list-name\">{selectedListInfo.current.name}</Text>\r\n                </Row>\r\n              ) : null}\r\n              <LinkStyledButton\r\n                style={{ fontWeight: 500, color: theme.colors.textSubtle, fontSize: 16 }}\r\n                onClick={onChangeList}\r\n                id=\"currency-search-change-list-button\"\r\n              >\r\n                {selectedListInfo.current ? TranslateString(180, 'Change') : TranslateString(1152, 'Select a list')}\r\n              </LinkStyledButton>\r\n            </RowBetween>\r\n          </Card>\r\n        </>\r\n      )}\r\n    </Column>\r\n  )\r\n}\r\n\r\nexport default CurrencySearch\r\n","export const DEFAULT_TOKEN_LIST_URL = 'pancakeswap'\r\n\r\nexport const DEFAULT_LIST_OF_LISTS: string[] = [DEFAULT_TOKEN_LIST_URL]\r\n","import { TokenList } from '@uniswap/token-lists'\r\nimport schema from '@uniswap/token-lists/src/tokenlist.schema.json'\r\nimport Ajv from 'ajv'\r\nimport contenthashToUri from './contenthashToUri'\r\nimport { parseENSAddress } from './parseENSAddress'\r\nimport uriToHttp from './uriToHttp'\r\n\r\n// bakeryswap defaultTokenJson\r\nimport { DEFAULT_TOKEN_LIST_URL } from '../constants/lists'\r\nimport defaultTokenJson from '../constants/token/pancakeswap.json'\r\n\r\nconst tokenListValidator = new Ajv({ allErrors: true }).compile(schema)\r\n\r\n/**\r\n * Contains the logic for resolving a list URL to a validated token list\r\n * @param listUrl list url\r\n * @param resolveENSContentHash resolves an ens name to a contenthash\r\n */\r\nexport default async function getTokenList(\r\n  listUrl: string,\r\n  resolveENSContentHash: (ensName: string) => Promise<string>\r\n): Promise<TokenList> {\r\n  if (listUrl === DEFAULT_TOKEN_LIST_URL) {\r\n    return defaultTokenJson\r\n  }\r\n  const parsedENS = parseENSAddress(listUrl)\r\n\r\n  let urls: string[]\r\n  if (parsedENS) {\r\n    let contentHashUri\r\n    try {\r\n      contentHashUri = await resolveENSContentHash(parsedENS.ensName)\r\n    } catch (error) {\r\n      console.error(`Failed to resolve ENS name: ${parsedENS.ensName}`, error)\r\n      throw new Error(`Failed to resolve ENS name: ${parsedENS.ensName}`)\r\n    }\r\n    let translatedUri\r\n    try {\r\n      translatedUri = contenthashToUri(contentHashUri)\r\n    } catch (error) {\r\n      console.error('Failed to translate contenthash to URI', contentHashUri)\r\n      throw new Error(`Failed to translate contenthash to URI: ${contentHashUri}`)\r\n    }\r\n    urls = uriToHttp(`${translatedUri}${parsedENS.ensPath ?? ''}`)\r\n  } else {\r\n    urls = uriToHttp(listUrl)\r\n  }\r\n  for (let i = 0; i < urls.length; i++) {\r\n    const url = urls[i]\r\n    const isLast = i === urls.length - 1\r\n    let response\r\n    try {\r\n      response = await fetch(url)\r\n    } catch (error) {\r\n      console.error('Failed to fetch list', listUrl, error)\r\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\r\n      // eslint-disable-next-line no-continue\r\n      continue\r\n    }\r\n\r\n    if (!response.ok) {\r\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\r\n      // eslint-disable-next-line no-continue\r\n      continue\r\n    }\r\n\r\n    const json = await response.json()\r\n    if (!tokenListValidator(json)) {\r\n      const validationErrors: string =\r\n        tokenListValidator.errors?.reduce<string>((memo, error) => {\r\n          const add = `${error.dataPath} ${error.message ?? ''}`\r\n          return memo.length > 0 ? `${memo}; ${add}` : `${add}`\r\n        }, '') ?? 'unknown error'\r\n      throw new Error(`Token list failed validation: ${validationErrors}`)\r\n    }\r\n    return json\r\n  }\r\n  throw new Error('Unrecognized list URL protocol.')\r\n}\r\n","import { Contract } from '@ethersproject/contracts'\r\nimport { Provider } from '@ethersproject/abstract-provider'\r\nimport { namehash } from 'ethers/lib/utils'\r\n\r\nconst REGISTRAR_ABI = [\r\n  {\r\n    constant: true,\r\n    inputs: [\r\n      {\r\n        name: 'node',\r\n        type: 'bytes32'\r\n      }\r\n    ],\r\n    name: 'resolver',\r\n    outputs: [\r\n      {\r\n        name: 'resolverAddress',\r\n        type: 'address'\r\n      }\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  }\r\n]\r\nconst REGISTRAR_ADDRESS = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\r\n\r\nconst RESOLVER_ABI = [\r\n  {\r\n    constant: true,\r\n    inputs: [\r\n      {\r\n        internalType: 'bytes32',\r\n        name: 'node',\r\n        type: 'bytes32'\r\n      }\r\n    ],\r\n    name: 'contenthash',\r\n    outputs: [\r\n      {\r\n        internalType: 'bytes',\r\n        name: '',\r\n        type: 'bytes'\r\n      }\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  }\r\n]\r\n\r\n// cache the resolver contracts since most of them are the public resolver\r\nfunction resolverContract(resolverAddress: string, provider: Provider): Contract {\r\n  return new Contract(resolverAddress, RESOLVER_ABI, provider)\r\n}\r\n\r\n/**\r\n * Fetches and decodes the result of an ENS contenthash lookup on mainnet to a URI\r\n * @param ensName to resolve\r\n * @param provider provider to use to fetch the data\r\n */\r\nexport default async function resolveENSContentHash(ensName: string, provider: Provider): Promise<string> {\r\n  const ensRegistrarContract = new Contract(REGISTRAR_ADDRESS, REGISTRAR_ABI, provider)\r\n  const hash = namehash(ensName)\r\n  const resolverAddress = await ensRegistrarContract.resolver(hash)\r\n  return resolverContract(resolverAddress, provider).contenthash(hash)\r\n}\r\n","import { nanoid } from '@reduxjs/toolkit'\r\nimport { ChainId } from '@pancakeswap-libs/sdk'\r\nimport { TokenList } from '@uniswap/token-lists'\r\nimport { useCallback } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { getNetworkLibrary, NETWORK_CHAIN_ID } from '../connectors'\r\nimport { AppDispatch } from '../state'\r\nimport { fetchTokenList } from '../state/lists/actions'\r\nimport getTokenList from '../utils/getTokenList'\r\nimport resolveENSContentHash from '../utils/resolveENSContentHash'\r\nimport { useActiveWeb3React } from './index'\r\n\r\nexport function useFetchListCallback(): (listUrl: string) => Promise<TokenList> {\r\n  const { chainId, library } = useActiveWeb3React()\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  const ensResolver = useCallback(\r\n    (ensName: string) => {\r\n      if (!library || chainId !== ChainId.MAINNET) {\r\n        if (NETWORK_CHAIN_ID === ChainId.MAINNET) {\r\n          const networkLibrary = getNetworkLibrary()\r\n          if (networkLibrary) {\r\n            return resolveENSContentHash(ensName, networkLibrary)\r\n          }\r\n        }\r\n        throw new Error('Could not construct mainnet ENS resolver')\r\n      }\r\n      return resolveENSContentHash(ensName, library)\r\n    },\r\n    [chainId, library]\r\n  )\r\n\r\n  return useCallback(\r\n    async (listUrl: string) => {\r\n      const requestId = nanoid()\r\n      dispatch(fetchTokenList.pending({ requestId, url: listUrl }))\r\n      return getTokenList(listUrl, ensResolver)\r\n        .then((tokenList) => {\r\n          dispatch(fetchTokenList.fulfilled({ url: listUrl, tokenList, requestId }))\r\n          return tokenList\r\n        })\r\n        .catch((error) => {\r\n          console.error(`Failed to get list at url ${listUrl}`, error)\r\n          dispatch(fetchTokenList.rejected({ url: listUrl, requestId, errorMessage: error.message }))\r\n          throw error\r\n        })\r\n    },\r\n    [dispatch, ensResolver]\r\n  )\r\n}\r\n\r\nexport default useFetchListCallback\r\n","import { RefObject, useEffect, useRef } from 'react'\r\n\r\nexport function useOnClickOutside<T extends HTMLElement>(\r\n  node: RefObject<T | undefined>,\r\n  handler: undefined | (() => void)\r\n) {\r\n  const handlerRef = useRef<undefined | (() => void)>(handler)\r\n  useEffect(() => {\r\n    handlerRef.current = handler\r\n  }, [handler])\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (e: MouseEvent) => {\r\n      if (node.current?.contains(e.target as Node) ?? false) {\r\n        return\r\n      }\r\n      if (handlerRef.current) handlerRef.current()\r\n    }\r\n\r\n    document.addEventListener('mousedown', handleClickOutside)\r\n\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside)\r\n    }\r\n  }, [node])\r\n}\r\n\r\nexport default useOnClickOutside\r\n","import React, { memo, useCallback, useMemo, useRef, useState } from 'react'\r\nimport { ArrowLeft } from 'react-feather'\r\nimport { usePopper } from 'react-popper'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Button, Text, ChevronDownIcon, CloseIcon } from '@pancakeswap-libs/uikit'\r\nimport styled from 'styled-components'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useFetchListCallback } from '../../hooks/useFetchListCallback'\r\nimport { useOnClickOutside } from '../../hooks/useOnClickOutside'\r\nimport useToggle from '../../hooks/useToggle'\r\nimport { AppDispatch, AppState } from '../../state'\r\nimport { acceptListUpdate, removeList, selectList } from '../../state/lists/actions'\r\nimport { useSelectedListUrl } from '../../state/lists/hooks'\r\nimport { ExternalLink, LinkStyledButton } from '../Shared'\r\nimport listVersionLabel from '../../utils/listVersionLabel'\r\nimport { parseENSAddress } from '../../utils/parseENSAddress'\r\nimport uriToHttp from '../../utils/uriToHttp'\r\nimport Column from '../Column'\r\nimport ListLogo from '../ListLogo'\r\nimport QuestionHelper from '../QuestionHelper'\r\nimport Row, { RowBetween } from '../Row'\r\nimport { PaddedColumn, SearchInput, Separator, SeparatorDark } from './styleds'\r\n\r\nconst UnpaddedLinkStyledButton = styled(LinkStyledButton)`\r\n  padding: 0;\r\n  font-size: 1rem;\r\n  opacity: ${({ disabled }) => (disabled ? '0.4' : '1')};\r\n`\r\n\r\nconst PopoverContainer = styled.div<{ show: boolean }>`\r\n  z-index: 100;\r\n  visibility: ${(props) => (props.show ? 'visible' : 'hidden')};\r\n  opacity: ${(props) => (props.show ? 1 : 0)};\r\n  transition: visibility 150ms linear, opacity 150ms linear;\r\n  background: ${({ theme }) => theme.colors.invertedContrast};\r\n  border: 1px solid ${({ theme }) => theme.colors.tertiary};\r\n  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.01), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04),\r\n    0px 24px 32px rgba(0, 0, 0, 0.01);\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  border-radius: 0.5rem;\r\n  padding: 1rem;\r\n  display: grid;\r\n  grid-template-rows: 1fr;\r\n  grid-gap: 8px;\r\n  font-size: 1rem;\r\n  text-align: left;\r\n`\r\n\r\nconst StyledMenu = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: relative;\r\n  border: none;\r\n`\r\n\r\nconst StyledListUrlText = styled.div`\r\n  max-width: 160px;\r\n  opacity: 0.6;\r\n  margin-right: 0.5rem;\r\n  font-size: 14px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n`\r\n\r\nfunction ListOrigin({ listUrl }: { listUrl: string }) {\r\n  const ensName = useMemo(() => parseENSAddress(listUrl)?.ensName, [listUrl])\r\n  const host = useMemo(() => {\r\n    if (ensName) return undefined\r\n    const lowerListUrl = listUrl.toLowerCase()\r\n    if (lowerListUrl.startsWith('ipfs://') || lowerListUrl.startsWith('ipns://')) {\r\n      return listUrl\r\n    }\r\n    try {\r\n      const url = new URL(listUrl)\r\n      return url.host\r\n    } catch (error) {\r\n      return undefined\r\n    }\r\n  }, [listUrl, ensName])\r\n  return <>{ensName ?? host}</>\r\n}\r\n\r\nfunction listUrlRowHTMLId(listUrl: string) {\r\n  return `list-row-${listUrl.replace(/\\./g, '-')}`\r\n}\r\n\r\nconst ListRow = memo(function ListRow({ listUrl, onBack }: { listUrl: string; onBack: () => void }) {\r\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\r\n  const selectedListUrl = useSelectedListUrl()\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const { current: list, pendingUpdate: pending } = listsByUrl[listUrl]\r\n\r\n  const isSelected = listUrl === selectedListUrl\r\n\r\n  const [open, toggle] = useToggle(false)\r\n  const node = useRef<HTMLDivElement>()\r\n  const [referenceElement, setReferenceElement] = useState<HTMLDivElement | null>()\r\n  const [popperElement, setPopperElement] = useState<HTMLDivElement>()\r\n\r\n  const { styles, attributes } = usePopper(referenceElement, popperElement, {\r\n    placement: 'auto',\r\n    strategy: 'fixed',\r\n    modifiers: [{ name: 'offset', options: { offset: [8, 8] } }],\r\n  })\r\n\r\n  useOnClickOutside(node, open ? toggle : undefined)\r\n\r\n  const selectThisList = useCallback(() => {\r\n    if (isSelected) return\r\n\r\n    dispatch(selectList(listUrl))\r\n    onBack()\r\n  }, [dispatch, isSelected, listUrl, onBack])\r\n\r\n  const handleAcceptListUpdate = useCallback(() => {\r\n    if (!pending) return\r\n    dispatch(acceptListUpdate(listUrl))\r\n  }, [dispatch, listUrl, pending])\r\n\r\n  const handleRemoveList = useCallback(() => {\r\n    if (window.prompt(`Please confirm you would like to remove this list by typing REMOVE`) === `REMOVE`) {\r\n      dispatch(removeList(listUrl))\r\n    }\r\n  }, [dispatch, listUrl])\r\n  const TranslateString = useI18n()\r\n  if (!list) return null\r\n\r\n  return (\r\n    <Row key={listUrl} align=\"center\" padding=\"16px\" id={listUrlRowHTMLId(listUrl)}>\r\n      {list.logoURI ? (\r\n        <ListLogo style={{ marginRight: '1rem' }} logoURI={list.logoURI} alt={`${list.name} list logo`} />\r\n      ) : (\r\n        <div style={{ width: '24px', height: '24px', marginRight: '1rem' }} />\r\n      )}\r\n      <Column style={{ flex: '1' }}>\r\n        <Row>\r\n          <Text bold={isSelected} fontSize=\"16px\" style={{ overflow: 'hidden', textOverflow: 'ellipsis' }}>\r\n            {list.name}\r\n          </Text>\r\n        </Row>\r\n        <Row\r\n          style={{\r\n            marginTop: '4px',\r\n          }}\r\n        >\r\n          <StyledListUrlText title={listUrl}>\r\n            <ListOrigin listUrl={listUrl} />\r\n          </StyledListUrlText>\r\n        </Row>\r\n      </Column>\r\n      <StyledMenu ref={node as any}>\r\n        <div style={{ display: 'inline-block' }} ref={setReferenceElement}>\r\n          <Button\r\n            style={{\r\n              width: '32px',\r\n              marginRight: '8px',\r\n            }}\r\n            onClick={toggle}\r\n            variant=\"secondary\"\r\n          >\r\n            <ChevronDownIcon />\r\n          </Button>\r\n        </div>\r\n\r\n        {open && (\r\n          <PopoverContainer show ref={setPopperElement as any} style={styles.popper} {...attributes.popper}>\r\n            <div>{list && listVersionLabel(list.version)}</div>\r\n            <SeparatorDark />\r\n            <ExternalLink href={`https://tokenlists.org/token-list?url=${listUrl}`}>\r\n              {TranslateString(1206, 'View list')}\r\n            </ExternalLink>\r\n            <UnpaddedLinkStyledButton onClick={handleRemoveList} disabled={Object.keys(listsByUrl).length === 1}>\r\n              Remove list\r\n            </UnpaddedLinkStyledButton>\r\n            {pending && (\r\n              <UnpaddedLinkStyledButton onClick={handleAcceptListUpdate}>Update list</UnpaddedLinkStyledButton>\r\n            )}\r\n          </PopoverContainer>\r\n        )}\r\n      </StyledMenu>\r\n      {isSelected ? (\r\n        <Button disabled style={{ width: '5rem', minWidth: '5rem' }}>\r\n          Selected\r\n        </Button>\r\n      ) : (\r\n        <>\r\n          <Button\r\n            className=\"select-button\"\r\n            style={{\r\n              width: '5rem',\r\n              minWidth: '4.5rem',\r\n            }}\r\n            onClick={selectThisList}\r\n          >\r\n            Select\r\n          </Button>\r\n        </>\r\n      )}\r\n    </Row>\r\n  )\r\n})\r\n\r\nconst ListContainer = styled.div`\r\n  flex: 1;\r\n  overflow: auto;\r\n`\r\n\r\nexport function ListSelect({ onDismiss, onBack }: { onDismiss: () => void; onBack: () => void }) {\r\n  const [listUrlInput, setListUrlInput] = useState<string>('')\r\n\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const lists = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\r\n  const adding = Boolean(lists[listUrlInput]?.loadingRequestId)\r\n  const [addError, setAddError] = useState<string | null>(null)\r\n\r\n  const handleInput = useCallback((e) => {\r\n    setListUrlInput(e.target.value)\r\n    setAddError(null)\r\n  }, [])\r\n  const fetchList = useFetchListCallback()\r\n\r\n  const handleAddList = useCallback(() => {\r\n    if (adding) return\r\n    setAddError(null)\r\n    fetchList(listUrlInput)\r\n      .then(() => {\r\n        setListUrlInput('')\r\n      })\r\n      .catch((error) => {\r\n        setAddError(error.message)\r\n        dispatch(removeList(listUrlInput))\r\n      })\r\n  }, [adding, dispatch, fetchList, listUrlInput])\r\n\r\n  const validUrl: boolean = useMemo(() => {\r\n    return uriToHttp(listUrlInput).length > 0 || Boolean(parseENSAddress(listUrlInput))\r\n  }, [listUrlInput])\r\n\r\n  const handleEnterKey = useCallback(\r\n    (e) => {\r\n      if (validUrl && e.key === 'Enter') {\r\n        handleAddList()\r\n      }\r\n    },\r\n    [handleAddList, validUrl]\r\n  )\r\n\r\n  const sortedLists = useMemo(() => {\r\n    const listUrls = Object.keys(lists)\r\n    return listUrls\r\n      .filter((listUrl) => {\r\n        return Boolean(lists[listUrl].current)\r\n      })\r\n      .sort((u1, u2) => {\r\n        const { current: l1 } = lists[u1]\r\n        const { current: l2 } = lists[u2]\r\n        if (l1 && l2) {\r\n          return l1.name.toLowerCase() < l2.name.toLowerCase()\r\n            ? -1\r\n            : l1.name.toLowerCase() === l2.name.toLowerCase()\r\n            ? 0\r\n            : 1\r\n        }\r\n        if (l1) return -1\r\n        if (l2) return 1\r\n        return 0\r\n      })\r\n  }, [lists])\r\n  const TranslateString = useI18n()\r\n  return (\r\n    <Column style={{ width: '100%', flex: '1 1' }}>\r\n      <PaddedColumn>\r\n        <RowBetween>\r\n          <div>\r\n            <ArrowLeft style={{ cursor: 'pointer' }} onClick={onBack} />\r\n          </div>\r\n          <Text fontSize=\"20px\">{TranslateString(1208, 'Manage Lists')}</Text>\r\n          <CloseIcon onClick={onDismiss} />\r\n        </RowBetween>\r\n      </PaddedColumn>\r\n\r\n      <Separator />\r\n\r\n      <PaddedColumn gap=\"14px\">\r\n        <Text bold>\r\n          Add a list{' '}\r\n          <QuestionHelper\r\n            text={TranslateString(\r\n              999,\r\n              'Token lists are an open specification for lists of BEP20 tokens. You can use any token list by entering its URL below. Beware that third party token lists can contain fake or malicious BEP20 tokens.'\r\n            )}\r\n          />\r\n        </Text>\r\n        <Row>\r\n          <SearchInput\r\n            type=\"text\"\r\n            id=\"list-add-input\"\r\n            placeholder=\"https:// or ipfs:// or ENS name\"\r\n            value={listUrlInput}\r\n            onChange={handleInput}\r\n            onKeyDown={handleEnterKey}\r\n            style={{ height: '2.75rem', borderRadius: 12, padding: '12px' }}\r\n          />\r\n          <Button onClick={handleAddList} style={{ maxWidth: '4em', marginLeft: '1em' }} disabled={!validUrl}>\r\n            Add\r\n          </Button>\r\n        </Row>\r\n        {addError ? (\r\n          <Text color=\"failure\" title={addError} style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\r\n            {addError}\r\n          </Text>\r\n        ) : null}\r\n      </PaddedColumn>\r\n\r\n      <Separator />\r\n\r\n      <ListContainer>\r\n        {sortedLists.map((listUrl) => (\r\n          <ListRow key={listUrl} listUrl={listUrl} onBack={onBack} />\r\n        ))}\r\n      </ListContainer>\r\n      <Separator />\r\n\r\n      <div style={{ padding: '16px', textAlign: 'center' }}>\r\n        <ExternalLink href=\"https://tokenlists.org\">Browse lists</ExternalLink>\r\n      </div>\r\n    </Column>\r\n  )\r\n}\r\n\r\nexport default ListSelect\r\n","import { useCallback, useState } from 'react'\r\n\r\nexport default function useToggle(initialState = false): [boolean, () => void] {\r\n  const [state, setState] = useState(initialState)\r\n  const toggle = useCallback(() => setState((prev) => !prev), [])\r\n  return [state, toggle]\r\n}\r\n","import { Currency } from '@pancakeswap-libs/sdk'\r\nimport React, { useCallback, useEffect, useState } from 'react'\r\nimport useLast from '../../hooks/useLast'\r\nimport { useSelectedListUrl } from '../../state/lists/hooks'\r\nimport Modal from '../Modal'\r\nimport { CurrencySearch } from './CurrencySearch'\r\nimport { ListSelect } from './ListSelect'\r\n\r\ninterface CurrencySearchModalProps {\r\n  isOpen: boolean\r\n  onDismiss: () => void\r\n  selectedCurrency?: Currency | null\r\n  onCurrencySelect: (currency: Currency) => void\r\n  otherSelectedCurrency?: Currency | null\r\n  // eslint-disable-next-line react/no-unused-prop-types\r\n  showCommonBases?: boolean\r\n}\r\n\r\nexport default function CurrencySearchModal({\r\n  isOpen,\r\n  onDismiss,\r\n  onCurrencySelect,\r\n  selectedCurrency,\r\n  otherSelectedCurrency,\r\n}: CurrencySearchModalProps) {\r\n  const [listView, setListView] = useState<boolean>(false)\r\n  const lastOpen = useLast(isOpen)\r\n\r\n  useEffect(() => {\r\n    if (isOpen && !lastOpen) {\r\n      setListView(false)\r\n    }\r\n  }, [isOpen, lastOpen])\r\n\r\n  const handleCurrencySelect = useCallback(\r\n    (currency: Currency) => {\r\n      onCurrencySelect(currency)\r\n      onDismiss()\r\n    },\r\n    [onDismiss, onCurrencySelect]\r\n  )\r\n\r\n  const handleClickChangeList = useCallback(() => {\r\n    setListView(true)\r\n  }, [])\r\n  const handleClickBack = useCallback(() => {\r\n    setListView(false)\r\n  }, [])\r\n\r\n  const selectedListUrl = useSelectedListUrl()\r\n  const noListSelected = !selectedListUrl\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onDismiss={onDismiss} maxHeight={90} minHeight={listView ? 40 : noListSelected ? 0 : 80}>\r\n      {listView ? (\r\n        <ListSelect onDismiss={onDismiss} onBack={handleClickBack} />\r\n      ) : noListSelected ? (\r\n        <CurrencySearch\r\n          isOpen={isOpen}\r\n          onDismiss={onDismiss}\r\n          onCurrencySelect={handleCurrencySelect}\r\n          onChangeList={handleClickChangeList}\r\n          selectedCurrency={selectedCurrency}\r\n          otherSelectedCurrency={otherSelectedCurrency}\r\n          showCommonBases={false}\r\n        />\r\n      ) : (\r\n        <CurrencySearch\r\n          isOpen={isOpen}\r\n          onDismiss={onDismiss}\r\n          onCurrencySelect={handleCurrencySelect}\r\n          onChangeList={handleClickChangeList}\r\n          selectedCurrency={selectedCurrency}\r\n          otherSelectedCurrency={otherSelectedCurrency}\r\n          showCommonBases={false}\r\n        />\r\n      )}\r\n    </Modal>\r\n  )\r\n}\r\n","import { Currency } from '@pancakeswap-libs/sdk'\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport CurrencyLogo from '../CurrencyLogo'\r\n\r\nconst Wrapper = styled.div<{ margin: boolean; sizeraw: number }>`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin-right: ${({ sizeraw, margin }) => margin && `${(sizeraw / 3 + 8).toString()  }px`};\r\n`\r\n\r\ninterface DoubleCurrencyLogoProps {\r\n  margin?: boolean\r\n  size?: number\r\n  currency0?: Currency\r\n  currency1?: Currency\r\n}\r\n\r\nconst HigherLogo = styled(CurrencyLogo)`\r\n  z-index: 2;\r\n`\r\nconst CoveredLogo = styled(CurrencyLogo)<{ sizeraw: number }>`\r\n  position: absolute;\r\n  left: ${({ sizeraw }) => `${(sizeraw / 2).toString()  }px`};\r\n`\r\n\r\nexport default function DoubleCurrencyLogo({\r\n  currency0,\r\n  currency1,\r\n  size = 16,\r\n  margin = false\r\n}: DoubleCurrencyLogoProps) {\r\n  return (\r\n    <Wrapper sizeraw={size} margin={margin}>\r\n      {currency0 && <HigherLogo currency={currency0} size={`${size.toString()  }px`} />}\r\n      {currency1 && <CoveredLogo currency={currency1} size={`${size.toString()  }px`} sizeraw={size} />}\r\n    </Wrapper>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { escapeRegExp } from '../../utils'\r\n\r\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\r\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.text)};\r\n  width: 0;\r\n  position: relative;\r\n  font-weight: 500;\r\n  outline: none;\r\n  border: none;\r\n  flex: 1 1 auto;\r\n  background-color: transparent;\r\n  font-size: 16px;\r\n  text-align: ${({ align }) => align && align};\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  padding: 0px;\r\n  -webkit-appearance: textfield;\r\n\r\n  ::-webkit-search-decoration {\r\n    -webkit-appearance: none;\r\n  }\r\n\r\n  [type='number'] {\r\n    -moz-appearance: textfield;\r\n  }\r\n\r\n  ::-webkit-outer-spin-button,\r\n  ::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n  }\r\n\r\n  ::placeholder {\r\n    color: ${({ theme }) => theme.colors.textSubtle};\r\n  }\r\n`\r\n\r\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\r\n\r\nexport const Input = React.memo(function InnerInput({\r\n  value,\r\n  onUserInput,\r\n  placeholder,\r\n  ...rest\r\n}: {\r\n  value: string | number\r\n  onUserInput: (input: string) => void\r\n  error?: boolean\r\n  fontSize?: string\r\n  align?: 'right' | 'left'\r\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\r\n  const enforcer = (nextUserInput: string) => {\r\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\r\n      onUserInput(nextUserInput)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <StyledInput\r\n      {...rest}\r\n      value={value}\r\n      onChange={(event) => {\r\n        // replace commas with periods, because uniswap exclusively uses period as the decimal separator\r\n        enforcer(event.target.value.replace(/,/g, '.'))\r\n      }}\r\n      // universal input options\r\n      inputMode=\"decimal\"\r\n      title=\"Token Amount\"\r\n      autoComplete=\"off\"\r\n      autoCorrect=\"off\"\r\n      // text-specific options\r\n      type=\"text\"\r\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\r\n      placeholder={placeholder || '0.0'}\r\n      minLength={1}\r\n      maxLength={79}\r\n      spellCheck=\"false\"\r\n    />\r\n  )\r\n})\r\n\r\nexport default Input\r\n","import React, { useState, useCallback } from 'react'\r\nimport { Currency, Pair } from '@pancakeswap-libs/sdk'\r\nimport { Button, ChevronDownIcon, Text } from '@pancakeswap-libs/uikit'\r\nimport styled from 'styled-components'\r\nimport { darken } from 'polished'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\r\nimport CurrencySearchModal from '../SearchModal/CurrencySearchModal'\r\nimport CurrencyLogo from '../CurrencyLogo'\r\nimport DoubleCurrencyLogo from '../DoubleLogo'\r\nimport { RowBetween } from '../Row'\r\nimport { Input as NumericalInput } from '../NumericalInput'\r\nimport { useActiveWeb3React } from '../../hooks'\r\n\r\nconst InputRow = styled.div<{ selected: boolean }>`\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  align-items: center;\r\n  padding: ${({ selected }) => (selected ? '0.75rem 0.5rem 0.75rem 1rem' : '0.75rem 0.75rem 0.75rem 1rem')};\r\n`\r\nconst CurrencySelect = styled.button<{ selected: boolean }>`\r\n  align-items: center;\r\n  height: 34px;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  background-color: transparent;\r\n  color: ${({ selected, theme }) => (selected ? theme.colors.text : '#FFFFFF')};\r\n  border-radius: 12px;\r\n  outline: none;\r\n  cursor: pointer;\r\n  user-select: none;\r\n  border: none;\r\n  padding: 0 0.5rem;\r\n  :focus,\r\n  :hover {\r\n    background-color: ${({ theme }) => darken(0.05, theme.colors.input)};\r\n  }\r\n`\r\nconst LabelRow = styled.div`\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.colors.text};\r\n  font-size: 0.75rem;\r\n  line-height: 1rem;\r\n  padding: 0.75rem 1rem 0 1rem;\r\n  span:hover {\r\n    cursor: pointer;\r\n    color: ${({ theme }) => darken(0.2, theme.colors.textSubtle)};\r\n  }\r\n`\r\nconst Aligner = styled.span`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`\r\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\r\n  display: flex;\r\n  flex-flow: column nowrap;\r\n  position: relative;\r\n  border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\r\n  background-color: ${({ theme }) => theme.colors.background};\r\n  z-index: 1;\r\n`\r\nconst Container = styled.div<{ hideInput: boolean }>`\r\n  border-radius: 16px;\r\n  background-color: ${({ theme }) => theme.colors.input};\r\n  box-shadow: ${({ theme }) => theme.shadows.inset};\r\n`\r\ninterface CurrencyInputPanelProps {\r\n  value: string\r\n  onUserInput: (value: string) => void\r\n  onMax?: () => void\r\n  showMaxButton: boolean\r\n  label?: string\r\n  onCurrencySelect?: (currency: Currency) => void\r\n  currency?: Currency | null\r\n  disableCurrencySelect?: boolean\r\n  hideBalance?: boolean\r\n  pair?: Pair | null\r\n  hideInput?: boolean\r\n  otherCurrency?: Currency | null\r\n  id: string\r\n  showCommonBases?: boolean\r\n}\r\nexport default function CurrencyInputPanel({\r\n  value,\r\n  onUserInput,\r\n  onMax,\r\n  showMaxButton,\r\n  label,\r\n  onCurrencySelect,\r\n  currency,\r\n  disableCurrencySelect = false,\r\n  hideBalance = false,\r\n  pair = null, // used for double token logo\r\n  hideInput = false,\r\n  otherCurrency,\r\n  id,\r\n  showCommonBases,\r\n}: CurrencyInputPanelProps) {\r\n  const [modalOpen, setModalOpen] = useState(false)\r\n  const { account } = useActiveWeb3React()\r\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\r\n  const TranslateString = useI18n()\r\n  const translatedLabel = label || TranslateString(132, 'Input')\r\n  const handleDismissSearch = useCallback(() => {\r\n    setModalOpen(false)\r\n  }, [setModalOpen])\r\n  return (\r\n    <InputPanel id={id}>\r\n      <Container hideInput={hideInput}>\r\n        {!hideInput && (\r\n          <LabelRow>\r\n            <RowBetween>\r\n              <Text fontSize=\"14px\">{translatedLabel}</Text>\r\n              {account && (\r\n                <Text onClick={onMax} fontSize=\"14px\" style={{ display: 'inline', cursor: 'pointer' }}>\r\n                  {!hideBalance && !!currency && selectedCurrencyBalance\r\n                    ? `Balance: ${selectedCurrencyBalance?.toSignificant(6)}`\r\n                    : ' -'}\r\n                </Text>\r\n              )}\r\n            </RowBetween>\r\n          </LabelRow>\r\n        )}\r\n        <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} selected={disableCurrencySelect}>\r\n          {!hideInput && (\r\n            <>\r\n              <NumericalInput\r\n                className=\"token-amount-input\"\r\n                value={value}\r\n                onUserInput={(val) => {\r\n                  onUserInput(val)\r\n                }}\r\n              />\r\n              {account && currency && showMaxButton && label !== 'To' && (\r\n                <Button onClick={onMax} scale=\"sm\" variant=\"text\">\r\n                  MAX\r\n                </Button>\r\n              )}\r\n            </>\r\n          )}\r\n          <CurrencySelect\r\n            selected={!!currency}\r\n            className=\"open-currency-select-button\"\r\n            onClick={() => {\r\n              if (!disableCurrencySelect) {\r\n                setModalOpen(true)\r\n              }\r\n            }}\r\n          >\r\n            <Aligner>\r\n              {pair ? (\r\n                <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={16} margin />\r\n              ) : currency ? (\r\n                <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} />\r\n              ) : null}\r\n              {pair ? (\r\n                <Text id=\"pair\">\r\n                  {pair?.token0.symbol}:{pair?.token1.symbol}\r\n                </Text>\r\n              ) : (\r\n                <Text id=\"pair\">\r\n                  {(currency && currency.symbol && currency.symbol.length > 20\r\n                    ? `${currency.symbol.slice(0, 4)}...${currency.symbol.slice(\r\n                        currency.symbol.length - 5,\r\n                        currency.symbol.length\r\n                      )}`\r\n                    : currency?.symbol) || TranslateString(1196, 'Select a currency')}\r\n                </Text>\r\n              )}\r\n              {!disableCurrencySelect && <ChevronDownIcon />}\r\n            </Aligner>\r\n          </CurrencySelect>\r\n        </InputRow>\r\n      </Container>\r\n      {!disableCurrencySelect && onCurrencySelect && (\r\n        <CurrencySearchModal\r\n          isOpen={modalOpen}\r\n          onDismiss={handleDismissSearch}\r\n          onCurrencySelect={onCurrencySelect}\r\n          selectedCurrency={currency}\r\n          otherSelectedCurrency={otherCurrency}\r\n          showCommonBases={showCommonBases}\r\n        />\r\n      )}\r\n    </InputPanel>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Link as HistoryLink } from 'react-router-dom'\r\nimport { ArrowLeft } from 'react-feather'\r\nimport { RowBetween } from 'components/Row'\r\nimport QuestionHelper from 'components/QuestionHelper'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst Tabs = styled.div`\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  align-items: center;\r\n  border-radius: 3rem;\r\n  justify-content: space-evenly;\r\n`\r\n\r\nconst ActiveText = styled.div`\r\n  font-weight: 500;\r\n  font-size: 20px;\r\n`\r\n\r\nconst StyledArrowLeft = styled(ArrowLeft)`\r\n  color: ${({ theme }) => theme.colors.text};\r\n`\r\n\r\nexport function FindPoolTabs() {\r\n  const TranslateString = useI18n()\r\n  return (\r\n    <Tabs>\r\n      <RowBetween style={{ padding: '1rem' }}>\r\n        <HistoryLink to=\"/pool\">\r\n          <StyledArrowLeft />\r\n        </HistoryLink>\r\n        <ActiveText>Import Pool</ActiveText>\r\n        <QuestionHelper\r\n          text={TranslateString(256, 'Use this tool to find pairs that do not automatically appear in the interface.')}\r\n        />\r\n      </RowBetween>\r\n    </Tabs>\r\n  )\r\n}\r\n\r\nexport function AddRemoveTabs({ adding }: { adding: boolean }) {\r\n  const TranslateString = useI18n()\r\n  return (\r\n    <Tabs>\r\n      <RowBetween style={{ padding: '1rem' }}>\r\n        <HistoryLink to=\"/pool\">\r\n          <StyledArrowLeft />\r\n        </HistoryLink>\r\n        <ActiveText>{adding ? TranslateString(258, 'Add') : TranslateString(260, 'Remove')} Liquidity</ActiveText>\r\n        <QuestionHelper\r\n          text={\r\n            adding\r\n              ? TranslateString(\r\n                  264,\r\n                  'When you add liquidity, you are given pool tokens representing your position. These tokens automatically earn fees proportional to your share of the pool, and can be redeemed at any time.'\r\n                )\r\n              : TranslateString(\r\n                  266,\r\n                  'Removing pool tokens converts your position back into underlying tokens at the current rate, proportional to your share of the pool. Accrued fees are included in the amounts you receive.'\r\n                )\r\n          }\r\n        />\r\n      </RowBetween>\r\n    </Tabs>\r\n  )\r\n}\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { Token, TokenAmount } from '@pancakeswap-libs/sdk'\r\nimport { useTokenContract } from '../hooks/useContract'\r\nimport { useSingleCallResult } from '../state/multicall/hooks'\r\n\r\n// returns undefined if input token is undefined, or fails to get token contract,\r\n// or contract total supply cannot be fetched\r\nexport function useTotalSupply(token?: Token): TokenAmount | undefined {\r\n  const contract = useTokenContract(token?.address, false)\r\n\r\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\r\n\r\n  return token && totalSupply ? new TokenAmount(token, totalSupply.toString()) : undefined\r\n}\r\n\r\nexport default useTotalSupply\r\n","import { Currency, ETHER, Token } from '@pancakeswap-libs/sdk'\r\n\r\nexport function currencyId(currency: Currency): string {\r\n  if (currency === ETHER) return 'BNB'\r\n  if (currency instanceof Token) return currency.address\r\n  throw new Error('invalid currency')\r\n}\r\n\r\nexport default currencyId\r\n","import { ChainId, Currency, CurrencyAmount, ETHER, Token, TokenAmount, WETH } from '@pancakeswap-libs/sdk'\r\n\r\nexport function wrappedCurrency(currency: Currency | undefined, chainId: ChainId | undefined): Token | undefined {\r\n  // eslint-disable-next-line no-nested-ternary\r\n  return chainId && currency === ETHER ? WETH[chainId] : currency instanceof Token ? currency : undefined\r\n}\r\n\r\nexport function wrappedCurrencyAmount(\r\n  currencyAmount: CurrencyAmount | undefined,\r\n  chainId: ChainId | undefined\r\n): TokenAmount | undefined {\r\n  const token = currencyAmount && chainId ? wrappedCurrency(currencyAmount.currency, chainId) : undefined\r\n  return token && currencyAmount ? new TokenAmount(token, currencyAmount.raw) : undefined\r\n}\r\n\r\nexport function unwrappedToken(token: Token): Currency {\r\n  if (token.equals(WETH[token.chainId])) return ETHER\r\n  return token\r\n}\r\n","import { transparentize } from 'polished'\r\nimport React from 'react'\r\nimport { AlertTriangle } from 'react-feather'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\nimport styled, { css } from 'styled-components'\r\nimport { AutoColumn } from '../Column'\r\n\r\nexport const Wrapper = styled.div`\r\n  position: relative;\r\n`\r\n\r\nexport const ArrowWrapper = styled.div<{ clickable: boolean }>`\r\n  padding: 2px;\r\n\r\n  ${({ clickable }) =>\r\n    clickable\r\n      ? css`\r\n          :hover {\r\n            cursor: pointer;\r\n            opacity: 0.8;\r\n          }\r\n        `\r\n      : null}\r\n`\r\n\r\nexport const SectionBreak = styled.div`\r\n  height: 1px;\r\n  width: 100%;\r\n  background-color: ${({ theme }) => theme.colors.tertiary};\r\n`\r\n\r\nexport const BottomGrouping = styled.div`\r\n  margin-top: 1rem;\r\n`\r\n\r\nexport const ErrorText = styled(Text)<{ severity?: 0 | 1 | 2 | 3 | 4 }>`\r\n  color: ${({ theme, severity }) =>\r\n    severity === 3 || severity === 4\r\n      ? theme.colors.failure\r\n      : severity === 2\r\n      ? theme.colors.binance\r\n      : severity === 1\r\n      ? theme.colors.text\r\n      : theme.colors.success};\r\n`\r\n\r\nexport const StyledBalanceMaxMini = styled.button`\r\n  height: 22px;\r\n  width: 22px;\r\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\r\n  border: none;\r\n  border-radius: 50%;\r\n  padding: 0.2rem;\r\n  font-size: 0.875rem;\r\n  font-weight: 400;\r\n  margin-left: 0.4rem;\r\n  cursor: pointer;\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  float: right;\r\n\r\n  :hover {\r\n    background-color: ${({ theme }) => theme.colors.tertiary};\r\n  }\r\n  :focus {\r\n    background-color: ${({ theme }) => theme.colors.tertiary};\r\n    outline: none;\r\n  }\r\n`\r\n\r\n// styles\r\nexport const Dots = styled.span`\r\n  &::after {\r\n    display: inline-block;\r\n    animation: ellipsis 1.25s infinite;\r\n    content: '.';\r\n    width: 1em;\r\n    text-align: left;\r\n  }\r\n  @keyframes ellipsis {\r\n    0% {\r\n      content: '.';\r\n    }\r\n    33% {\r\n      content: '..';\r\n    }\r\n    66% {\r\n      content: '...';\r\n    }\r\n  }\r\n`\r\n\r\nconst SwapCallbackErrorInner = styled.div`\r\n  background-color: ${({ theme }) => transparentize(0.9, theme.colors.failure)};\r\n  border-radius: 1rem;\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 0.825rem;\r\n  width: 100%;\r\n  padding: 3rem 1.25rem 1rem 1rem;\r\n  margin-top: -2rem;\r\n  color: ${({ theme }) => theme.colors.failure};\r\n  z-index: -1;\r\n  p {\r\n    padding: 0;\r\n    margin: 0;\r\n    font-weight: 500;\r\n  }\r\n`\r\n\r\nconst SwapCallbackErrorInnerAlertTriangle = styled.div`\r\n  background-color: ${({ theme }) => transparentize(0.9, theme.colors.failure)};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-right: 12px;\r\n  border-radius: 12px;\r\n  min-width: 48px;\r\n  height: 48px;\r\n`\r\n\r\nexport function SwapCallbackError({ error }: { error: string }) {\r\n  return (\r\n    <SwapCallbackErrorInner>\r\n      <SwapCallbackErrorInnerAlertTriangle>\r\n        <AlertTriangle size={24} />\r\n      </SwapCallbackErrorInnerAlertTriangle>\r\n      <p>{error}</p>\r\n    </SwapCallbackErrorInner>\r\n  )\r\n}\r\n\r\nexport const SwapShowAcceptChanges = styled(AutoColumn)`\r\n  background-color: ${({ theme }) => transparentize(0.9, theme.colors.primary)};\r\n  color: ${({ theme }) => theme.colors.primary};\r\n  padding: 0.5rem;\r\n  border-radius: 12px;\r\n  margin-top: 8px;\r\n`\r\n","import React, { useState } from 'react'\r\nimport { JSBI, Pair, Percent } from '@pancakeswap-libs/sdk'\r\nimport { Button, Card as UIKitCard, CardBody, Text } from '@pancakeswap-libs/uikit'\r\nimport { darken } from 'polished'\r\nimport { ChevronDown, ChevronUp } from 'react-feather'\r\nimport { Link } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { useTotalSupply } from '../../data/TotalSupply'\r\n\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport { useTokenBalance } from '../../state/wallet/hooks'\r\nimport { currencyId } from '../../utils/currencyId'\r\nimport { unwrappedToken } from '../../utils/wrappedCurrency'\r\nimport Card from '../Card'\r\nimport { AutoColumn } from '../Column'\r\nimport CurrencyLogo from '../CurrencyLogo'\r\nimport DoubleCurrencyLogo from '../DoubleLogo'\r\nimport { RowBetween, RowFixed } from '../Row'\r\nimport { Dots } from '../swap/styleds'\r\n\r\nexport const FixedHeightRow = styled(RowBetween)`\r\n  height: 24px;\r\n`\r\n\r\nexport const HoverCard = styled(Card)`\r\n  border: 1px solid ${({ theme }) => theme.colors.invertedContrast};\r\n  :hover {\r\n    border: 1px solid ${({ theme }) => darken(0.06, theme.colors.invertedContrast)};\r\n  }\r\n`\r\n\r\ninterface PositionCardProps {\r\n  pair: Pair\r\n  // eslint-disable-next-line react/no-unused-prop-types\r\n  showUnwrapped?: boolean\r\n  // eslint-disable-next-line react/no-unused-prop-types\r\n  removeOnly?: boolean\r\n}\r\n\r\nexport function MinimalPositionCard({ pair, showUnwrapped = false }: PositionCardProps) {\r\n  const { account } = useActiveWeb3React()\r\n\r\n  const currency0 = showUnwrapped ? pair.token0 : unwrappedToken(pair.token0)\r\n  const currency1 = showUnwrapped ? pair.token1 : unwrappedToken(pair.token1)\r\n\r\n  const [showMore, setShowMore] = useState(false)\r\n\r\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\r\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\r\n\r\n  const [token0Deposited, token1Deposited] =\r\n    !!pair &&\r\n    !!totalPoolTokens &&\r\n    !!userPoolBalance &&\r\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\r\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\r\n      ? [\r\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\r\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\r\n        ]\r\n      : [undefined, undefined]\r\n\r\n  return (\r\n    <>\r\n      {userPoolBalance && (\r\n        <UIKitCard>\r\n          <CardBody>\r\n            <AutoColumn gap=\"12px\">\r\n              <FixedHeightRow>\r\n                <RowFixed>\r\n                  <Text style={{ textTransform: 'uppercase', fontWeight: 600 }} fontSize=\"14px\" color=\"textSubtle\">\r\n                    LP Tokens in your Wallet\r\n                  </Text>\r\n                </RowFixed>\r\n              </FixedHeightRow>\r\n              <FixedHeightRow onClick={() => setShowMore(!showMore)}>\r\n                <RowFixed>\r\n                  <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin size={20} />\r\n                  <Text fontSize=\"14px\">\r\n                    {currency0.symbol}/{currency1.symbol}\r\n                  </Text>\r\n                </RowFixed>\r\n                <RowFixed>\r\n                  <Text fontSize=\"14px\">{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}</Text>\r\n                </RowFixed>\r\n              </FixedHeightRow>\r\n              <AutoColumn gap=\"4px\">\r\n                <FixedHeightRow>\r\n                  <Text fontSize=\"14px\">{currency0.symbol}:</Text>\r\n                  {token0Deposited ? (\r\n                    <RowFixed>\r\n                      <Text ml=\"6px\" fontSize=\"14px\">\r\n                        {token0Deposited?.toSignificant(6)}\r\n                      </Text>\r\n                    </RowFixed>\r\n                  ) : (\r\n                    '-'\r\n                  )}\r\n                </FixedHeightRow>\r\n                <FixedHeightRow>\r\n                  <Text fontSize=\"14px\">{currency1.symbol}:</Text>\r\n                  {token1Deposited ? (\r\n                    <RowFixed>\r\n                      <Text ml=\"6px\" fontSize=\"14px\">\r\n                        {token1Deposited?.toSignificant(6)}\r\n                      </Text>\r\n                    </RowFixed>\r\n                  ) : (\r\n                    '-'\r\n                  )}\r\n                </FixedHeightRow>\r\n              </AutoColumn>\r\n            </AutoColumn>\r\n          </CardBody>\r\n        </UIKitCard>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default function FullPositionCard({ pair, removeOnly }: PositionCardProps) {\r\n  const { account } = useActiveWeb3React()\r\n\r\n  const currency0 = unwrappedToken(pair.token0)\r\n  const currency1 = unwrappedToken(pair.token1)\r\n\r\n  const [showMore, setShowMore] = useState(false)\r\n\r\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\r\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\r\n\r\n  const poolTokenPercentage =\r\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\r\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\r\n      : undefined\r\n\r\n  const [token0Deposited, token1Deposited] =\r\n    !!pair &&\r\n    !!totalPoolTokens &&\r\n    !!userPoolBalance &&\r\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\r\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\r\n      ? [\r\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\r\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\r\n        ]\r\n      : [undefined, undefined]\r\n\r\n  return (\r\n    <HoverCard>\r\n      <AutoColumn gap=\"12px\">\r\n        <FixedHeightRow onClick={() => setShowMore(!showMore)} style={{ cursor: 'pointer' }}>\r\n          <RowFixed>\r\n            <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin size={20} />\r\n            <Text>{!currency0 || !currency1 ? <Dots>Loading</Dots> : `${currency0.symbol}/${currency1.symbol}`}</Text>\r\n          </RowFixed>\r\n          <RowFixed>\r\n            {showMore ? (\r\n              <ChevronUp size=\"20\" style={{ marginLeft: '10px' }} />\r\n            ) : (\r\n              <ChevronDown size=\"20\" style={{ marginLeft: '10px' }} />\r\n            )}\r\n          </RowFixed>\r\n        </FixedHeightRow>\r\n        {showMore && (\r\n          <AutoColumn gap=\"8px\">\r\n            <FixedHeightRow>\r\n              <RowFixed>\r\n                <Text>Pooled {currency0.symbol}:</Text>\r\n              </RowFixed>\r\n              {token0Deposited ? (\r\n                <RowFixed>\r\n                  <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\r\n                  <CurrencyLogo size=\"20px\" style={{ marginLeft: '8px' }} currency={currency0} />\r\n                </RowFixed>\r\n              ) : (\r\n                '-'\r\n              )}\r\n            </FixedHeightRow>\r\n\r\n            <FixedHeightRow>\r\n              <RowFixed>\r\n                <Text>Pooled {currency1.symbol}:</Text>\r\n              </RowFixed>\r\n              {token1Deposited ? (\r\n                <RowFixed>\r\n                  <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\r\n                  <CurrencyLogo size=\"20px\" style={{ marginLeft: '8px' }} currency={currency1} />\r\n                </RowFixed>\r\n              ) : (\r\n                '-'\r\n              )}\r\n            </FixedHeightRow>\r\n            <FixedHeightRow>\r\n              <Text>Your pool tokens:</Text>\r\n              <Text>{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}</Text>\r\n            </FixedHeightRow>\r\n            <FixedHeightRow>\r\n              <Text>Your pool share:</Text>\r\n              <Text>{poolTokenPercentage ? `${poolTokenPercentage.toFixed(2)}%` : '-'}</Text>\r\n            </FixedHeightRow>\r\n\r\n            <RowBetween marginTop=\"10px\">\r\n              {removeOnly && (\r\n                <Button\r\n                  as={Link}\r\n                  to={`/add/${currencyId(currency0)}/${currencyId(currency1)}`}\r\n                  style={{ width: '48%' }}\r\n                >\r\n                  Add\r\n                </Button>\r\n              )}\r\n              <Button\r\n                as={Link}\r\n                style={{ width: '48%' }}\r\n                to={`/remove/${currencyId(currency0)}/${currencyId(currency1)}`}\r\n              >\r\n                Remove\r\n              </Button>\r\n            </RowBetween>\r\n          </AutoColumn>\r\n        )}\r\n      </AutoColumn>\r\n    </HoverCard>\r\n  )\r\n}\r\n","import { TokenAmount, Pair, Currency } from '@pancakeswap-libs/sdk'\r\nimport { useMemo } from 'react'\r\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\r\nimport { Interface } from '@ethersproject/abi'\r\nimport { useActiveWeb3React } from '../hooks'\r\n\r\nimport { useMultipleContractSingleData } from '../state/multicall/hooks'\r\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\r\n\r\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI)\r\n\r\nexport enum PairState {\r\n  LOADING,\r\n  NOT_EXISTS,\r\n  EXISTS,\r\n  INVALID\r\n}\r\n\r\nexport function usePairs(currencies: [Currency | undefined, Currency | undefined][]): [PairState, Pair | null][] {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const tokens = useMemo(\r\n    () =>\r\n      currencies.map(([currencyA, currencyB]) => [\r\n        wrappedCurrency(currencyA, chainId),\r\n        wrappedCurrency(currencyB, chainId)\r\n      ]),\r\n    [chainId, currencies]\r\n  )\r\n\r\n  const pairAddresses = useMemo(\r\n    () =>\r\n      tokens.map(([tokenA, tokenB]) => {\r\n        return tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined\r\n      }),\r\n    [tokens]\r\n  )\r\n\r\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\r\n\r\n  return useMemo(() => {\r\n    return results.map((result, i) => {\r\n      const { result: reserves, loading } = result\r\n      const tokenA = tokens[i][0]\r\n      const tokenB = tokens[i][1]\r\n\r\n      if (loading) return [PairState.LOADING, null]\r\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\r\n      if (!reserves) return [PairState.NOT_EXISTS, null]\r\n      const { reserve0, reserve1 } = reserves\r\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\r\n      return [\r\n        PairState.EXISTS,\r\n        new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString()))\r\n      ]\r\n    })\r\n  }, [results, tokens])\r\n}\r\n\r\nexport function usePair(tokenA?: Currency, tokenB?: Currency): [PairState, Pair | null] {\r\n  return usePairs([[tokenA, tokenB]])[0]\r\n}\r\n","import { Token, TokenAmount } from '@pancakeswap-libs/sdk'\r\nimport { useMemo } from 'react'\r\n\r\nimport { useTokenContract } from '../hooks/useContract'\r\nimport { useSingleCallResult } from '../state/multicall/hooks'\r\n\r\nexport function useTokenAllowance(token?: Token, owner?: string, spender?: string): TokenAmount | undefined {\r\n  const contract = useTokenContract(token?.address, false)\r\n\r\n  const inputs = useMemo(() => [owner, spender], [owner, spender])\r\n  const allowance = useSingleCallResult(contract, 'allowance', inputs).result\r\n\r\n  return useMemo(() => (token && allowance ? new TokenAmount(token, allowance.toString()) : undefined), [\r\n    token,\r\n    allowance,\r\n  ])\r\n}\r\n\r\nexport default useTokenAllowance\r\n","import { createAction } from '@reduxjs/toolkit'\r\n\r\nexport enum Field {\r\n  INPUT = 'INPUT',\r\n  OUTPUT = 'OUTPUT'\r\n}\r\n\r\nexport const selectCurrency = createAction<{ field: Field; currencyId: string }>('swap/selectCurrency')\r\nexport const switchCurrencies = createAction<void>('swap/switchCurrencies')\r\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('swap/typeInput')\r\nexport const replaceSwapState = createAction<{\r\n  field: Field\r\n  typedValue: string\r\n  inputCurrencyId?: string\r\n  outputCurrencyId?: string\r\n  recipient: string | null\r\n}>('swap/replaceSwapState')\r\nexport const setRecipient = createAction<{ recipient: string | null }>('swap/setRecipient')\r\n","import { createAction } from '@reduxjs/toolkit'\r\nimport { ChainId } from '@pancakeswap-libs/sdk'\r\n\r\nexport interface SerializableTransactionReceipt {\r\n  to: string\r\n  from: string\r\n  contractAddress: string\r\n  transactionIndex: number\r\n  blockHash: string\r\n  transactionHash: string\r\n  blockNumber: number\r\n  status?: number\r\n}\r\n\r\nexport const addTransaction = createAction<{\r\n  chainId: ChainId\r\n  hash: string\r\n  from: string\r\n  approval?: { tokenAddress: string; spender: string }\r\n  summary?: string\r\n}>('transactions/addTransaction')\r\nexport const clearAllTransactions = createAction<{ chainId: ChainId }>('transactions/clearAllTransactions')\r\nexport const finalizeTransaction = createAction<{\r\n  chainId: ChainId\r\n  hash: string\r\n  receipt: SerializableTransactionReceipt\r\n}>('transactions/finalizeTransaction')\r\nexport const checkedTransaction = createAction<{\r\n  chainId: ChainId\r\n  hash: string\r\n  blockNumber: number\r\n}>('transactions/checkedTransaction')\r\n","import { TransactionResponse } from '@ethersproject/providers'\r\nimport { useCallback, useMemo } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport { AppDispatch, AppState } from '../index'\r\nimport { addTransaction } from './actions'\r\nimport { TransactionDetails } from './reducer'\r\n\r\n// helper that can take a ethers library transaction response and add it to the list of transactions\r\nexport function useTransactionAdder(): (\r\n  response: TransactionResponse,\r\n  customData?: { summary?: string; approval?: { tokenAddress: string; spender: string } }\r\n) => void {\r\n  const { chainId, account } = useActiveWeb3React()\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  return useCallback(\r\n    (\r\n      response: TransactionResponse,\r\n      { summary, approval }: { summary?: string; approval?: { tokenAddress: string; spender: string } } = {}\r\n    ) => {\r\n      if (!account) return\r\n      if (!chainId) return\r\n\r\n      const { hash } = response\r\n      if (!hash) {\r\n        throw Error('No transaction hash found.')\r\n      }\r\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary }))\r\n    },\r\n    [dispatch, chainId, account]\r\n  )\r\n}\r\n\r\n// returns all the transactions for the current chain\r\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\r\n\r\n  return chainId ? state[chainId] ?? {} : {}\r\n}\r\n\r\nexport function useIsTransactionPending(transactionHash?: string): boolean {\r\n  const transactions = useAllTransactions()\r\n\r\n  if (!transactionHash || !transactions[transactionHash]) return false\r\n\r\n  return !transactions[transactionHash].receipt\r\n}\r\n\r\n/**\r\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\r\n * @param tx to check for recency\r\n */\r\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\r\n  return new Date().getTime() - tx.addedTime < 86_400_000\r\n}\r\n\r\n// returns whether a token has a pending approval transaction\r\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\r\n  const allTransactions = useAllTransactions()\r\n  return useMemo(\r\n    () =>\r\n      typeof tokenAddress === 'string' &&\r\n      typeof spender === 'string' &&\r\n      Object.keys(allTransactions).some((hash) => {\r\n        const tx = allTransactions[hash]\r\n        if (!tx) return false\r\n        if (tx.receipt) {\r\n          return false\r\n        }\r\n        const { approval } = tx\r\n        if (!approval) return false\r\n        return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx)\r\n      }),\r\n    [allTransactions, spender, tokenAddress]\r\n  )\r\n}\r\n","import { CurrencyAmount, Fraction, JSBI, Percent, TokenAmount, Trade } from '@pancakeswap-libs/sdk'\r\nimport {\r\n  BLOCKED_PRICE_IMPACT_NON_EXPERT,\r\n  ALLOWED_PRICE_IMPACT_HIGH,\r\n  ALLOWED_PRICE_IMPACT_LOW,\r\n  ALLOWED_PRICE_IMPACT_MEDIUM,\r\n} from '../constants'\r\n\r\nimport { Field } from '../state/swap/actions'\r\nimport { basisPointsToPercent } from './index'\r\n\r\nconst BASE_FEE = new Percent(JSBI.BigInt(20), JSBI.BigInt(10000))\r\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000))\r\nconst INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(BASE_FEE)\r\n\r\n// computes price breakdown for the trade\r\nexport function computeTradePriceBreakdown(\r\n  trade?: Trade\r\n): { priceImpactWithoutFee?: Percent; realizedLPFee?: CurrencyAmount } {\r\n  // for each hop in our trade, take away the x*y=k price impact from 0.2% fees\r\n  // e.g. for 3 tokens/2 hops: 1 - ((1 - .02) * (1-.02))\r\n  const realizedLPFee = !trade\r\n    ? undefined\r\n    : ONE_HUNDRED_PERCENT.subtract(\r\n        trade.route.pairs.reduce<Fraction>(\r\n          (currentFee: Fraction): Fraction => currentFee.multiply(INPUT_FRACTION_AFTER_FEE),\r\n          ONE_HUNDRED_PERCENT\r\n        )\r\n      )\r\n\r\n  // remove lp fees from price impact\r\n  const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined\r\n\r\n  // the x*y=k impact\r\n  const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\r\n    ? new Percent(priceImpactWithoutFeeFraction?.numerator, priceImpactWithoutFeeFraction?.denominator)\r\n    : undefined\r\n\r\n  // the amount of the input that accrues to LPs\r\n  const realizedLPFeeAmount =\r\n    realizedLPFee &&\r\n    trade &&\r\n    (trade.inputAmount instanceof TokenAmount\r\n      ? new TokenAmount(trade.inputAmount.token, realizedLPFee.multiply(trade.inputAmount.raw).quotient)\r\n      : CurrencyAmount.ether(realizedLPFee.multiply(trade.inputAmount.raw).quotient))\r\n\r\n  return { priceImpactWithoutFee: priceImpactWithoutFeePercent, realizedLPFee: realizedLPFeeAmount }\r\n}\r\n\r\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\r\nexport function computeSlippageAdjustedAmounts(\r\n  trade: Trade | undefined,\r\n  allowedSlippage: number\r\n): { [field in Field]?: CurrencyAmount } {\r\n  const pct = basisPointsToPercent(allowedSlippage)\r\n  return {\r\n    [Field.INPUT]: trade?.maximumAmountIn(pct),\r\n    [Field.OUTPUT]: trade?.minimumAmountOut(pct),\r\n  }\r\n}\r\n\r\nexport function warningSeverity(priceImpact: Percent | undefined): 0 | 1 | 2 | 3 | 4 {\r\n  if (!priceImpact?.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)) return 4\r\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) return 3\r\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)) return 2\r\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_LOW)) return 1\r\n  return 0\r\n}\r\n\r\nexport function formatExecutionPrice(trade?: Trade, inverted?: boolean): string {\r\n  if (!trade) {\r\n    return ''\r\n  }\r\n  return inverted\r\n    ? `${trade.executionPrice.invert().toSignificant(6)} ${trade.inputAmount.currency.symbol} / ${\r\n        trade.outputAmount.currency.symbol\r\n      }`\r\n    : `${trade.executionPrice.toSignificant(6)} ${trade.outputAmount.currency.symbol} / ${\r\n        trade.inputAmount.currency.symbol\r\n      }`\r\n}\r\n","import { MaxUint256 } from '@ethersproject/constants'\r\nimport { TransactionResponse } from '@ethersproject/providers'\r\nimport { Trade, TokenAmount, CurrencyAmount, ETHER } from '@pancakeswap-libs/sdk'\r\nimport { useCallback, useMemo } from 'react'\r\nimport { ROUTER_ADDRESS } from '../constants'\r\nimport { useTokenAllowance } from '../data/Allowances'\r\nimport { Field } from '../state/swap/actions'\r\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks'\r\nimport { computeSlippageAdjustedAmounts } from '../utils/prices'\r\nimport { calculateGasMargin } from '../utils'\r\nimport { useTokenContract } from './useContract'\r\nimport { useActiveWeb3React } from './index'\r\n\r\nexport enum ApprovalState {\r\n  UNKNOWN,\r\n  NOT_APPROVED,\r\n  PENDING,\r\n  APPROVED,\r\n}\r\n\r\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\r\nexport function useApproveCallback(\r\n  amountToApprove?: CurrencyAmount,\r\n  spender?: string\r\n): [ApprovalState, () => Promise<void>] {\r\n  const { account } = useActiveWeb3React()\r\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined\r\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\r\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\r\n\r\n  // check the current approval status\r\n  const approvalState: ApprovalState = useMemo(() => {\r\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\r\n    if (amountToApprove.currency === ETHER) return ApprovalState.APPROVED\r\n    // we might not have enough data to know whether or not we need to approve\r\n    if (!currentAllowance) return ApprovalState.UNKNOWN\r\n\r\n    // amountToApprove will be defined if currentAllowance is\r\n    return currentAllowance.lessThan(amountToApprove)\r\n      ? pendingApproval\r\n        ? ApprovalState.PENDING\r\n        : ApprovalState.NOT_APPROVED\r\n      : ApprovalState.APPROVED\r\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\r\n\r\n  const tokenContract = useTokenContract(token?.address)\r\n  const addTransaction = useTransactionAdder()\r\n\r\n  const approve = useCallback(async (): Promise<void> => {\r\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\r\n      console.error('approve was called unnecessarily')\r\n      return\r\n    }\r\n    if (!token) {\r\n      console.error('no token')\r\n      return\r\n    }\r\n\r\n    if (!tokenContract) {\r\n      console.error('tokenContract is null')\r\n      return\r\n    }\r\n\r\n    if (!amountToApprove) {\r\n      console.error('missing amount to approve')\r\n      return\r\n    }\r\n\r\n    if (!spender) {\r\n      console.error('no spender')\r\n      return\r\n    }\r\n\r\n    let useExact = false\r\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\r\n      // general fallback for tokens who restrict approval amounts\r\n      useExact = true\r\n      return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString())\r\n    })\r\n\r\n    // eslint-disable-next-line consistent-return\r\n    return tokenContract\r\n      .approve(spender, useExact ? amountToApprove.raw.toString() : MaxUint256, {\r\n        gasLimit: calculateGasMargin(estimatedGas),\r\n      })\r\n      .then((response: TransactionResponse) => {\r\n        addTransaction(response, {\r\n          summary: `Approve ${amountToApprove.currency.symbol}`,\r\n          approval: { tokenAddress: token.address, spender },\r\n        })\r\n      })\r\n      .catch((error: Error) => {\r\n        console.error('Failed to approve token', error)\r\n        throw error\r\n      })\r\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction])\r\n\r\n  return [approvalState, approve]\r\n}\r\n\r\n// wraps useApproveCallback in the context of a swap\r\nexport function useApproveCallbackFromTrade(trade?: Trade, allowedSlippage = 0) {\r\n  const amountToApprove = useMemo(\r\n    () => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined),\r\n    [trade, allowedSlippage]\r\n  )\r\n  return useApproveCallback(amountToApprove, ROUTER_ADDRESS)\r\n}\r\n","import { createAction } from '@reduxjs/toolkit'\r\n\r\nexport enum Field {\r\n  CURRENCY_A = 'CURRENCY_A',\r\n  CURRENCY_B = 'CURRENCY_B'\r\n}\r\n\r\nexport const typeInput = createAction<{ field: Field; typedValue: string; noLiquidity: boolean }>('mint/typeInputMint')\r\nexport const resetMintState = createAction<void>('mint/resetMintState')\r\n","import { useEffect, useState } from 'react'\r\n\r\n// modified from https://usehooks.com/useDebounce/\r\nexport default function useDebounce<T>(value: T, delay: number): T {\r\n  const [debouncedValue, setDebouncedValue] = useState<T>(value)\r\n\r\n  useEffect(() => {\r\n    // Update debounced value after delay\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value)\r\n    }, delay)\r\n\r\n    // Cancel the timeout if value changes (also on delay change or unmount)\r\n    // This is how we prevent debounced value from updating if value is changed ...\r\n    // .. within the delay period. Timeout gets cleared and restarted.\r\n    return () => {\r\n      clearTimeout(handler)\r\n    }\r\n  }, [value, delay])\r\n\r\n  return debouncedValue\r\n}\r\n","import { isAddress } from '../utils'\r\nimport useENSAddress from './useENSAddress'\r\nimport useENSName from './useENSName'\r\n\r\n/**\r\n * Given a name or address, does a lookup to resolve to an address and name\r\n * @param nameOrAddress ENS name or address\r\n */\r\nexport default function useENS(\r\n  nameOrAddress?: string | null\r\n): { loading: boolean; address: string | null; name: string | null } {\r\n  const validated = isAddress(nameOrAddress)\r\n  const reverseLookup = useENSName(validated || undefined)\r\n  const lookup = useENSAddress(nameOrAddress)\r\n\r\n  return {\r\n    loading: reverseLookup.loading || lookup.loading,\r\n    address: validated || lookup.address,\r\n    name: reverseLookup.ENSName ? reverseLookup.ENSName : !validated && lookup.address ? nameOrAddress || null : null\r\n  }\r\n}\r\n","import { namehash } from 'ethers/lib/utils'\r\nimport { useMemo } from 'react'\r\nimport { useSingleCallResult } from '../state/multicall/hooks'\r\nimport { isAddress } from '../utils'\r\nimport isZero from '../utils/isZero'\r\nimport { useENSRegistrarContract, useENSResolverContract } from './useContract'\r\nimport useDebounce from './useDebounce'\r\n\r\n/**\r\n * Does a reverse lookup for an address to find its ENS name.\r\n * Note this is not the same as looking up an ENS name to find an address.\r\n */\r\nexport default function useENSName(address?: string): { ENSName: string | null; loading: boolean } {\r\n  const debouncedAddress = useDebounce(address, 200)\r\n  const ensNodeArgument = useMemo(() => {\r\n    if (!debouncedAddress || !isAddress(debouncedAddress)) return [undefined]\r\n    try {\r\n      return debouncedAddress ? [namehash(`${debouncedAddress.toLowerCase().substr(2)}.addr.reverse`)] : [undefined]\r\n    } catch (error) {\r\n      return [undefined]\r\n    }\r\n  }, [debouncedAddress])\r\n  const registrarContract = useENSRegistrarContract(false)\r\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\r\n  const resolverAddressResult = resolverAddress.result?.[0]\r\n  const resolverContract = useENSResolverContract(\r\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\r\n    false\r\n  )\r\n  const name = useSingleCallResult(resolverContract, 'name', ensNodeArgument)\r\n\r\n  const changed = debouncedAddress !== address\r\n  return {\r\n    ENSName: changed ? null : name.result?.[0] ?? null,\r\n    loading: changed || resolverAddress.loading || name.loading\r\n  }\r\n}\r\n","import { namehash } from 'ethers/lib/utils'\r\nimport { useMemo } from 'react'\r\nimport { useSingleCallResult } from '../state/multicall/hooks'\r\nimport isZero from '../utils/isZero'\r\nimport { useENSRegistrarContract, useENSResolverContract } from './useContract'\r\nimport useDebounce from './useDebounce'\r\n\r\n/**\r\n * Does a lookup for an ENS name to find its address.\r\n */\r\nexport default function useENSAddress(ensName?: string | null): { loading: boolean; address: string | null } {\r\n  const debouncedName = useDebounce(ensName, 200)\r\n  const ensNodeArgument = useMemo(() => {\r\n    if (!debouncedName) return [undefined]\r\n    try {\r\n      return debouncedName ? [namehash(debouncedName)] : [undefined]\r\n    } catch (error) {\r\n      return [undefined]\r\n    }\r\n  }, [debouncedName])\r\n  const registrarContract = useENSRegistrarContract(false)\r\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\r\n  const resolverAddressResult = resolverAddress.result?.[0]\r\n  const resolverContract = useENSResolverContract(\r\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\r\n    false\r\n  )\r\n  const addr = useSingleCallResult(resolverContract, 'addr', ensNodeArgument)\r\n\r\n  const changed = debouncedName !== ensName\r\n  return {\r\n    address: changed ? null : addr.result?.[0] ?? null,\r\n    loading: changed || resolverAddress.loading || addr.loading\r\n  }\r\n}\r\n","import { Currency, CurrencyAmount, Pair, Token, Trade } from '@pancakeswap-libs/sdk'\r\nimport flatMap from 'lodash.flatmap'\r\nimport { useMemo } from 'react'\r\n\r\nimport { BASES_TO_CHECK_TRADES_AGAINST, CUSTOM_BASES } from '../constants'\r\nimport { PairState, usePairs } from '../data/Reserves'\r\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\r\n\r\nimport { useActiveWeb3React } from './index'\r\n\r\nfunction useAllCommonPairs(currencyA?: Currency, currencyB?: Currency): Pair[] {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  // Base tokens for building intermediary trading routes\r\n  const bases: Token[] = useMemo(() => (chainId ? BASES_TO_CHECK_TRADES_AGAINST[chainId] : []), [chainId])\r\n\r\n  // All pairs from base tokens\r\n  const basePairs: [Token, Token][] = useMemo(\r\n    () =>\r\n      flatMap(bases, (base): [Token, Token][] => bases.map((otherBase) => [base, otherBase])).filter(\r\n        ([t0, t1]) => t0.address !== t1.address\r\n      ),\r\n    [bases]\r\n  )\r\n\r\n  const [tokenA, tokenB] = chainId\r\n    ? [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\r\n    : [undefined, undefined]\r\n\r\n  const allPairCombinations: [Token, Token][] = useMemo(\r\n    () =>\r\n      tokenA && tokenB\r\n        ? [\r\n            // the direct pair\r\n            [tokenA, tokenB],\r\n            // token A against all bases\r\n            ...bases.map((base): [Token, Token] => [tokenA, base]),\r\n            // token B against all bases\r\n            ...bases.map((base): [Token, Token] => [tokenB, base]),\r\n            // each base against all bases\r\n            ...basePairs,\r\n          ]\r\n            .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\r\n            .filter(([t0, t1]) => t0.address !== t1.address)\r\n            // This filter will remove all the pairs that are not supported by the CUSTOM_BASES settings\r\n            // This option is currently not used on Pancake swap\r\n            .filter(([t0, t1]) => {\r\n              if (!chainId) return true\r\n              const customBases = CUSTOM_BASES[chainId]\r\n              if (!customBases) return true\r\n\r\n              const customBasesA: Token[] | undefined = customBases[t0.address]\r\n              const customBasesB: Token[] | undefined = customBases[t1.address]\r\n\r\n              if (!customBasesA && !customBasesB) return true\r\n              if (customBasesA && !customBasesA.find((base) => t1.equals(base))) return false\r\n              if (customBasesB && !customBasesB.find((base) => t0.equals(base))) return false\r\n\r\n              return true\r\n            })\r\n        : [],\r\n    [tokenA, tokenB, bases, basePairs, chainId]\r\n  )\r\n\r\n  const allPairs = usePairs(allPairCombinations)\r\n\r\n  // only pass along valid pairs, non-duplicated pairs\r\n  return useMemo(\r\n    () =>\r\n      Object.values(\r\n        allPairs\r\n          // filter out invalid pairs\r\n          .filter((result): result is [PairState.EXISTS, Pair] => Boolean(result[0] === PairState.EXISTS && result[1]))\r\n          // filter out duplicated pairs\r\n          .reduce<{ [pairAddress: string]: Pair }>((memo, [, curr]) => {\r\n            memo[curr.liquidityToken.address] = memo[curr.liquidityToken.address] ?? curr\r\n            return memo\r\n          }, {})\r\n      ),\r\n    [allPairs]\r\n  )\r\n}\r\n\r\n/**\r\n * Returns the best trade for the exact amount of tokens in to the given token out\r\n */\r\nexport function useTradeExactIn(currencyAmountIn?: CurrencyAmount, currencyOut?: Currency): Trade | null {\r\n  const allowedPairs = useAllCommonPairs(currencyAmountIn?.currency, currencyOut)\r\n\r\n  return useMemo(() => {\r\n    if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\r\n      return (\r\n        Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: 3, maxNumResults: 1 })[0] ?? null\r\n      )\r\n    }\r\n    return null\r\n  }, [allowedPairs, currencyAmountIn, currencyOut])\r\n}\r\n\r\n/**\r\n * Returns the best trade for the token in to the exact amount of token out\r\n */\r\nexport function useTradeExactOut(currencyIn?: Currency, currencyAmountOut?: CurrencyAmount): Trade | null {\r\n  const allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut?.currency)\r\n\r\n  return useMemo(() => {\r\n    if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\r\n      return (\r\n        Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: 3, maxNumResults: 1 })[0] ??\r\n        null\r\n      )\r\n    }\r\n    return null\r\n  }, [allowedPairs, currencyIn, currencyAmountOut])\r\n}\r\n","import { parseUnits } from '@ethersproject/units'\r\nimport { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount, Trade } from '@pancakeswap-libs/sdk'\r\nimport { ParsedQs } from 'qs'\r\nimport { useCallback, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport useENS from '../../hooks/useENS'\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport { useCurrency } from '../../hooks/Tokens'\r\nimport { useTradeExactIn, useTradeExactOut } from '../../hooks/Trades'\r\nimport useParsedQueryString from '../../hooks/useParsedQueryString'\r\nimport { isAddress } from '../../utils'\r\nimport { AppDispatch, AppState } from '../index'\r\nimport { useCurrencyBalances } from '../wallet/hooks'\r\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\r\nimport { SwapState } from './reducer'\r\n\r\nimport { useUserSlippageTolerance } from '../user/hooks'\r\nimport { computeSlippageAdjustedAmounts } from '../../utils/prices'\r\n\r\nexport function useSwapState(): AppState['swap'] {\r\n  return useSelector<AppState, AppState['swap']>((state) => state.swap)\r\n}\r\n\r\nexport function useSwapActionHandlers(): {\r\n  onCurrencySelection: (field: Field, currency: Currency) => void\r\n  onSwitchTokens: () => void\r\n  onUserInput: (field: Field, typedValue: string) => void\r\n  onChangeRecipient: (recipient: string | null) => void\r\n} {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const onCurrencySelection = useCallback(\r\n    (field: Field, currency: Currency) => {\r\n      dispatch(\r\n        selectCurrency({\r\n          field,\r\n          currencyId: currency instanceof Token ? currency.address : currency === ETHER ? 'BNB' : '',\r\n        })\r\n      )\r\n    },\r\n    [dispatch]\r\n  )\r\n\r\n  const onSwitchTokens = useCallback(() => {\r\n    dispatch(switchCurrencies())\r\n  }, [dispatch])\r\n\r\n  const onUserInput = useCallback(\r\n    (field: Field, typedValue: string) => {\r\n      dispatch(typeInput({ field, typedValue }))\r\n    },\r\n    [dispatch]\r\n  )\r\n\r\n  const onChangeRecipient = useCallback(\r\n    (recipient: string | null) => {\r\n      dispatch(setRecipient({ recipient }))\r\n    },\r\n    [dispatch]\r\n  )\r\n\r\n  return {\r\n    onSwitchTokens,\r\n    onCurrencySelection,\r\n    onUserInput,\r\n    onChangeRecipient,\r\n  }\r\n}\r\n\r\n// try to parse a user entered amount for a given token\r\nexport function tryParseAmount(value?: string, currency?: Currency): CurrencyAmount | undefined {\r\n  if (!value || !currency) {\r\n    return undefined\r\n  }\r\n  try {\r\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\r\n    if (typedValueParsed !== '0') {\r\n      return currency instanceof Token\r\n        ? new TokenAmount(currency, JSBI.BigInt(typedValueParsed))\r\n        : CurrencyAmount.ether(JSBI.BigInt(typedValueParsed))\r\n    }\r\n  } catch (error) {\r\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\r\n    console.info(`Failed to parse input amount: \"${value}\"`, error)\r\n  }\r\n  // necessary for all paths to return a value\r\n  return undefined\r\n}\r\n\r\nconst BAD_RECIPIENT_ADDRESSES: string[] = [\r\n  '0xBCfCcbde45cE874adCB698cC183deBcF17952812', // v2 factory\r\n  '0xf164fC0Ec4E93095b804a4795bBe1e041497b92a', // v2 router 01\r\n  '0x05fF2B0DB69458A0750badebc4f9e13aDd608C7F', // v2 router 02\r\n]\r\n\r\n/**\r\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\r\n * @param trade to check for the given address\r\n * @param checksummedAddress address to check in the pairs and tokens\r\n */\r\nfunction involvesAddress(trade: Trade, checksummedAddress: string): boolean {\r\n  return (\r\n    trade.route.path.some((token) => token.address === checksummedAddress) ||\r\n    trade.route.pairs.some((pair) => pair.liquidityToken.address === checksummedAddress)\r\n  )\r\n}\r\n\r\n// from the current swap inputs, compute the best trade and return it.\r\nexport function useDerivedSwapInfo(): {\r\n  currencies: { [field in Field]?: Currency }\r\n  currencyBalances: { [field in Field]?: CurrencyAmount }\r\n  parsedAmount: CurrencyAmount | undefined\r\n  v2Trade: Trade | undefined\r\n  inputError?: string\r\n} {\r\n  const { account } = useActiveWeb3React()\r\n\r\n  const {\r\n    independentField,\r\n    typedValue,\r\n    [Field.INPUT]: { currencyId: inputCurrencyId },\r\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\r\n    recipient,\r\n  } = useSwapState()\r\n\r\n  const inputCurrency = useCurrency(inputCurrencyId)\r\n  const outputCurrency = useCurrency(outputCurrencyId)\r\n  const recipientLookup = useENS(recipient ?? undefined)\r\n  const to: string | null = (recipient === null ? account : recipientLookup.address) ?? null\r\n\r\n  const relevantTokenBalances = useCurrencyBalances(account ?? undefined, [\r\n    inputCurrency ?? undefined,\r\n    outputCurrency ?? undefined,\r\n  ])\r\n\r\n  const isExactIn: boolean = independentField === Field.INPUT\r\n  const parsedAmount = tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined)\r\n\r\n  const bestTradeExactIn = useTradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency ?? undefined)\r\n  const bestTradeExactOut = useTradeExactOut(inputCurrency ?? undefined, !isExactIn ? parsedAmount : undefined)\r\n\r\n  const v2Trade = isExactIn ? bestTradeExactIn : bestTradeExactOut\r\n\r\n  const currencyBalances = {\r\n    [Field.INPUT]: relevantTokenBalances[0],\r\n    [Field.OUTPUT]: relevantTokenBalances[1],\r\n  }\r\n\r\n  const currencies: { [field in Field]?: Currency } = {\r\n    [Field.INPUT]: inputCurrency ?? undefined,\r\n    [Field.OUTPUT]: outputCurrency ?? undefined,\r\n  }\r\n\r\n  let inputError: string | undefined\r\n  if (!account) {\r\n    inputError = 'Connect Wallet'\r\n  }\r\n\r\n  if (!parsedAmount) {\r\n    inputError = inputError ?? 'Enter an amount'\r\n  }\r\n\r\n  if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\r\n    inputError = inputError ?? 'Select a token'\r\n  }\r\n\r\n  const formattedTo = isAddress(to)\r\n  if (!to || !formattedTo) {\r\n    inputError = inputError ?? 'Enter a recipient'\r\n  } else if (\r\n    BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo) !== -1 ||\r\n    (bestTradeExactIn && involvesAddress(bestTradeExactIn, formattedTo)) ||\r\n    (bestTradeExactOut && involvesAddress(bestTradeExactOut, formattedTo))\r\n  ) {\r\n    inputError = inputError ?? 'Invalid recipient'\r\n  }\r\n\r\n  const [allowedSlippage] = useUserSlippageTolerance()\r\n\r\n  const slippageAdjustedAmounts = v2Trade && allowedSlippage && computeSlippageAdjustedAmounts(v2Trade, allowedSlippage)\r\n\r\n  // compare input balance to max input based on version\r\n  const [balanceIn, amountIn] = [\r\n    currencyBalances[Field.INPUT],\r\n    slippageAdjustedAmounts ? slippageAdjustedAmounts[Field.INPUT] : null,\r\n  ]\r\n\r\n  if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\r\n    inputError = `Insufficient ${amountIn.currency.symbol} balance`\r\n  }\r\n\r\n  return {\r\n    currencies,\r\n    currencyBalances,\r\n    parsedAmount,\r\n    v2Trade: v2Trade ?? undefined,\r\n    inputError,\r\n  }\r\n}\r\n\r\nfunction parseCurrencyFromURLParameter(urlParam: any): string {\r\n  if (typeof urlParam === 'string') {\r\n    const valid = isAddress(urlParam)\r\n    if (valid) return valid\r\n    if (urlParam.toUpperCase() === 'BNB') return 'BNB'\r\n    if (valid === false) return 'BNB'\r\n  }\r\n  return 'BNB' ?? ''\r\n}\r\n\r\nfunction parseTokenAmountURLParameter(urlParam: any): string {\r\n  // eslint-disable-next-line no-restricted-globals\r\n  return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : ''\r\n}\r\n\r\nfunction parseIndependentFieldURLParameter(urlParam: any): Field {\r\n  return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT\r\n}\r\n\r\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/\r\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\r\nfunction validatedRecipient(recipient: any): string | null {\r\n  if (typeof recipient !== 'string') return null\r\n  const address = isAddress(recipient)\r\n  if (address) return address\r\n  if (ENS_NAME_REGEX.test(recipient)) return recipient\r\n  if (ADDRESS_REGEX.test(recipient)) return recipient\r\n  return null\r\n}\r\n\r\nexport function queryParametersToSwapState(parsedQs: ParsedQs): SwapState {\r\n  let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency)\r\n  let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency)\r\n  if (inputCurrency === outputCurrency) {\r\n    if (typeof parsedQs.outputCurrency === 'string') {\r\n      inputCurrency = ''\r\n    } else {\r\n      outputCurrency = ''\r\n    }\r\n  }\r\n\r\n  const recipient = validatedRecipient(parsedQs.recipient)\r\n\r\n  return {\r\n    [Field.INPUT]: {\r\n      currencyId: inputCurrency,\r\n    },\r\n    [Field.OUTPUT]: {\r\n      currencyId: outputCurrency,\r\n    },\r\n    typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\r\n    independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\r\n    recipient,\r\n  }\r\n}\r\n\r\n// updates the swap state to use the defaults for a given network\r\nexport function useDefaultsFromURLSearch():\r\n  | { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined }\r\n  | undefined {\r\n  const { chainId } = useActiveWeb3React()\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const parsedQs = useParsedQueryString()\r\n  const [result, setResult] = useState<\r\n    { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined } | undefined\r\n  >()\r\n\r\n  useEffect(() => {\r\n    if (!chainId) return\r\n    const parsed = queryParametersToSwapState(parsedQs)\r\n\r\n    dispatch(\r\n      replaceSwapState({\r\n        typedValue: parsed.typedValue,\r\n        field: parsed.independentField,\r\n        inputCurrencyId: parsed[Field.INPUT].currencyId,\r\n        outputCurrencyId: parsed[Field.OUTPUT].currencyId,\r\n        recipient: parsed.recipient,\r\n      })\r\n    )\r\n\r\n    setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId })\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [dispatch, chainId])\r\n\r\n  return result\r\n}\r\n","import { parse, ParsedQs } from 'qs'\r\nimport { useMemo } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nexport default function useParsedQueryString(): ParsedQs {\r\n  const { search } = useLocation()\r\n  return useMemo(\r\n    () => (search && search.length > 1 ? parse(search, { parseArrays: false, ignoreQueryPrefix: true }) : {}),\r\n    [search]\r\n  )\r\n}\r\n","import { Currency, CurrencyAmount, ETHER, JSBI, Pair, Percent, Price, TokenAmount } from '@pancakeswap-libs/sdk'\r\nimport { useCallback, useMemo } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { PairState, usePair } from '../../data/Reserves'\r\nimport { useTotalSupply } from '../../data/TotalSupply'\r\n\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport { TranslateString } from '../../utils/translateTextHelpers'\r\nimport { wrappedCurrency, wrappedCurrencyAmount } from '../../utils/wrappedCurrency'\r\nimport { AppDispatch, AppState } from '../index'\r\nimport { tryParseAmount } from '../swap/hooks'\r\nimport { useCurrencyBalances } from '../wallet/hooks'\r\nimport { Field, typeInput } from './actions'\r\n\r\nconst ZERO = JSBI.BigInt(0)\r\n\r\nexport function useMintState(): AppState['mint'] {\r\n  return useSelector<AppState, AppState['mint']>((state) => state.mint)\r\n}\r\n\r\nexport function useDerivedMintInfo(\r\n  currencyA: Currency | undefined,\r\n  currencyB: Currency | undefined\r\n): {\r\n  dependentField: Field\r\n  currencies: { [field in Field]?: Currency }\r\n  pair?: Pair | null\r\n  pairState: PairState\r\n  currencyBalances: { [field in Field]?: CurrencyAmount }\r\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\r\n  price?: Price\r\n  noLiquidity?: boolean\r\n  liquidityMinted?: TokenAmount\r\n  poolTokenPercentage?: Percent\r\n  error?: string\r\n} {\r\n  const { account, chainId } = useActiveWeb3React()\r\n\r\n  const { independentField, typedValue, otherTypedValue } = useMintState()\r\n\r\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\r\n\r\n  // tokens\r\n  const currencies: { [field in Field]?: Currency } = useMemo(\r\n    () => ({\r\n      [Field.CURRENCY_A]: currencyA ?? undefined,\r\n      [Field.CURRENCY_B]: currencyB ?? undefined,\r\n    }),\r\n    [currencyA, currencyB]\r\n  )\r\n\r\n  // pair\r\n  const [pairState, pair] = usePair(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B])\r\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\r\n\r\n  const noLiquidity: boolean =\r\n    pairState === PairState.NOT_EXISTS || Boolean(totalSupply && JSBI.equal(totalSupply.raw, ZERO))\r\n\r\n  // balances\r\n  const balances = useCurrencyBalances(account ?? undefined, [\r\n    currencies[Field.CURRENCY_A],\r\n    currencies[Field.CURRENCY_B],\r\n  ])\r\n  const currencyBalances: { [field in Field]?: CurrencyAmount } = {\r\n    [Field.CURRENCY_A]: balances[0],\r\n    [Field.CURRENCY_B]: balances[1],\r\n  }\r\n\r\n  // amounts\r\n  const independentAmount: CurrencyAmount | undefined = tryParseAmount(typedValue, currencies[independentField])\r\n  const dependentAmount: CurrencyAmount | undefined = useMemo(() => {\r\n    if (noLiquidity) {\r\n      if (otherTypedValue && currencies[dependentField]) {\r\n        return tryParseAmount(otherTypedValue, currencies[dependentField])\r\n      }\r\n      return undefined\r\n    }\r\n    if (independentAmount) {\r\n      // we wrap the currencies just to get the price in terms of the other token\r\n      const wrappedIndependentAmount = wrappedCurrencyAmount(independentAmount, chainId)\r\n      const [tokenA, tokenB] = [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\r\n      if (tokenA && tokenB && wrappedIndependentAmount && pair) {\r\n        const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA\r\n        const dependentTokenAmount =\r\n          dependentField === Field.CURRENCY_B\r\n            ? pair.priceOf(tokenA).quote(wrappedIndependentAmount)\r\n            : pair.priceOf(tokenB).quote(wrappedIndependentAmount)\r\n        return dependentCurrency === ETHER ? CurrencyAmount.ether(dependentTokenAmount.raw) : dependentTokenAmount\r\n      }\r\n      return undefined\r\n    }\r\n    return undefined\r\n  }, [noLiquidity, otherTypedValue, currencies, dependentField, independentAmount, currencyA, chainId, currencyB, pair])\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const parsedAmounts: { [field in Field]: CurrencyAmount | undefined } = {\r\n    [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\r\n    [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount,\r\n  }\r\n\r\n  const price = useMemo(() => {\r\n    if (noLiquidity) {\r\n      const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\r\n      if (currencyAAmount && currencyBAmount) {\r\n        return new Price(currencyAAmount.currency, currencyBAmount.currency, currencyAAmount.raw, currencyBAmount.raw)\r\n      }\r\n      return undefined\r\n    }\r\n    const wrappedCurrencyA = wrappedCurrency(currencyA, chainId)\r\n    return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : undefined\r\n  }, [chainId, currencyA, noLiquidity, pair, parsedAmounts])\r\n\r\n  // liquidity minted\r\n  const liquidityMinted = useMemo(() => {\r\n    const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\r\n    const [tokenAmountA, tokenAmountB] = [\r\n      wrappedCurrencyAmount(currencyAAmount, chainId),\r\n      wrappedCurrencyAmount(currencyBAmount, chainId),\r\n    ]\r\n    if (pair && totalSupply && tokenAmountA && tokenAmountB) {\r\n      return pair.getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB)\r\n    }\r\n    return undefined\r\n  }, [parsedAmounts, chainId, pair, totalSupply])\r\n\r\n  const poolTokenPercentage = useMemo(() => {\r\n    if (liquidityMinted && totalSupply) {\r\n      return new Percent(liquidityMinted.raw, totalSupply.add(liquidityMinted).raw)\r\n    }\r\n    return undefined\r\n  }, [liquidityMinted, totalSupply])\r\n\r\n  let error: string | undefined\r\n  if (!account) {\r\n    error = 'Connect Wallet'\r\n  }\r\n\r\n  if (pairState === PairState.INVALID) {\r\n    error = error ?? TranslateString(136, 'Invalid pair')\r\n  }\r\n\r\n  if (!parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\r\n    error = error ?? TranslateString(84, 'Enter an amount')\r\n  }\r\n\r\n  const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\r\n\r\n  if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\r\n    error = `Insufficient ${currencies[Field.CURRENCY_A]?.symbol} balance`\r\n  }\r\n\r\n  if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\r\n    error = `Insufficient ${currencies[Field.CURRENCY_B]?.symbol} balance`\r\n  }\r\n\r\n  return {\r\n    dependentField,\r\n    currencies,\r\n    pair,\r\n    pairState,\r\n    currencyBalances,\r\n    parsedAmounts,\r\n    price,\r\n    noLiquidity,\r\n    liquidityMinted,\r\n    poolTokenPercentage,\r\n    error,\r\n  }\r\n}\r\n\r\nexport function useMintActionHandlers(\r\n  noLiquidity: boolean | undefined\r\n): {\r\n  onFieldAInput: (typedValue: string) => void\r\n  onFieldBInput: (typedValue: string) => void\r\n} {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  const onFieldAInput = useCallback(\r\n    (typedValue: string) => {\r\n      dispatch(typeInput({ field: Field.CURRENCY_A, typedValue, noLiquidity: noLiquidity === true }))\r\n    },\r\n    [dispatch, noLiquidity]\r\n  )\r\n  const onFieldBInput = useCallback(\r\n    (typedValue: string) => {\r\n      dispatch(typeInput({ field: Field.CURRENCY_B, typedValue, noLiquidity: noLiquidity === true }))\r\n    },\r\n    [dispatch, noLiquidity]\r\n  )\r\n\r\n  return {\r\n    onFieldAInput,\r\n    onFieldBInput,\r\n  }\r\n}\r\n","import { CurrencyAmount, ETHER, JSBI } from '@pancakeswap-libs/sdk'\r\nimport { MIN_ETH } from '../constants'\r\n\r\n/**\r\n * Given some token amount, return the max that can be spent of it\r\n * @param currencyAmount to return max of\r\n */\r\nexport function maxAmountSpend(currencyAmount?: CurrencyAmount): CurrencyAmount | undefined {\r\n  if (!currencyAmount) return undefined\r\n  if (currencyAmount.currency === ETHER) {\r\n    if (JSBI.greaterThan(currencyAmount.raw, MIN_ETH)) {\r\n      return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw, MIN_ETH))\r\n    }\r\n    return CurrencyAmount.ether(JSBI.BigInt(0))\r\n  }\r\n  return currencyAmount\r\n}\r\n\r\nexport default maxAmountSpend\r\n","import styled from 'styled-components'\r\n\r\nconst Pane = styled.div`\r\n  border: 2px solid ${({ theme }) => theme.colors.borderColor};\r\n  border-radius: 16px;\r\n  padding: 16px;\r\n`\r\n\r\nexport default Pane\r\n","import styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex: 1;\r\n\r\n  width: 100%;\r\n  padding: 32px 16px;\r\n\r\n  /*background-image: url('/images/group-pancake.svg');\r\n  background-repeat: no-repeat;\r\n  background-position: bottom 24px center;\r\n  background-size: 90%;*/\r\n\r\n  ${({ theme }) => theme.mediaQueries.xs} {\r\n    background-size: auto;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    /*background-image: url('/images/arch-${({ theme }) => (theme.isDark ? 'dark' : 'light')}.svg'),\r\n      url('/images/left-pancake.svg'), url('/images/right-pancake.svg');\r\n    background-repeat: no-repeat;\r\n    background-position: center 420px, 10% 230px, 90% 230px;\r\n    background-size: contain, 266px, 266px;*/\r\n    min-height: 90vh;\r\n  }\r\n`\r\n\r\nexport default Container\r\n","/* eslint-disable no-param-reassign */\r\nimport { Toast } from '@pancakeswap-libs/uikit'\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\n\r\nconst initialState: ToastsState = {\r\n  data: [],\r\n}\r\n\r\nexport interface ToastsState {\r\n  data: Toast[]\r\n}\r\n\r\nexport const toastsSlice = createSlice({\r\n  name: 'toasts',\r\n  initialState,\r\n  reducers: {\r\n    push: (state: ToastsState, action: PayloadAction<Toast>) => {\r\n      const { payload } = action\r\n      const toastIndex = state.data.findIndex((toast) => toast.id === action.payload.id)\r\n\r\n      // If id already matches remove it before adding it to the top of the stack\r\n      if (toastIndex >= 0) {\r\n        state.data.splice(toastIndex, 1)\r\n      }\r\n\r\n      state.data.unshift(payload)\r\n    },\r\n    remove: (state: ToastsState, action: PayloadAction<string>) => {\r\n      const toastIndex = state.data.findIndex((toast) => toast.id === action.payload)\r\n\r\n      if (toastIndex >= 0) {\r\n        state.data.splice(toastIndex, 1)\r\n      }\r\n    },\r\n    clear: (state: ToastsState) => {\r\n      state.data = []\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { clear, remove, push } = toastsSlice.actions\r\n\r\nexport default toastsSlice.reducer\r\n","import { useMemo } from 'react'\r\nimport { kebabCase } from 'lodash'\r\nimport { Toast, toastTypes } from '@pancakeswap-libs/uikit'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport {\r\n  push as pushToast,\r\n  remove as removeToast,\r\n  clear as clearToast\r\n} from 'state/actions'\r\n\r\n// Toasts\r\nconst useToast = () => {\r\n  const dispatch = useDispatch()\r\n  const helpers = useMemo(() => {\r\n    const push = (toast: Toast) => dispatch(pushToast(toast))\r\n\r\n    return {\r\n      toastError: (title: string, description?: string) => {\r\n        return push({ id: kebabCase(title), type: toastTypes.DANGER, title, description })\r\n      },\r\n      toastInfo: (title: string, description?: string) => {\r\n        return push({ id: kebabCase(title), type: toastTypes.INFO, title, description })\r\n      },\r\n      toastSuccess: (title: string, description?: string) => {\r\n        return push({ id: kebabCase(title), type: toastTypes.SUCCESS, title, description })\r\n      },\r\n      toastWarning: (title: string, description?: string) => {\r\n        return push({ id: kebabCase(title), type: toastTypes.WARNING, title, description })\r\n      },\r\n      push,\r\n      remove: (id: string) => dispatch(removeToast(id)),\r\n      clear: () => dispatch(clearToast()),\r\n    }\r\n  }, [dispatch])\r\n\r\n  return helpers\r\n}\r\n\r\nexport default useToast","import { useCallback } from 'react'\r\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\r\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\r\nimport {\r\n  NoEthereumProviderError,\r\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\r\n} from '@web3-react/injected-connector'\r\nimport {\r\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\r\n  WalletConnectConnector,\r\n} from '@web3-react/walletconnect-connector'\r\nimport { connectorLocalStorageKey, ConnectorNames } from '@pancakeswap-libs/uikit'\r\nimport useToast from 'hooks/useToast'\r\nimport { connectorsByName } from 'connectors'\r\n\r\nconst useAuth = () => {\r\n  const { activate, deactivate } = useWeb3React()\r\n  const { toastError } = useToast()\r\n\r\n  const login = useCallback((connectorID: ConnectorNames) => {\r\n    const connector = connectorsByName[connectorID]\r\n    if (connector) {\r\n      activate(connector, async (error: Error) => {\r\n        window.localStorage.removeItem(connectorLocalStorageKey)\r\n        if (error instanceof UnsupportedChainIdError) {\r\n          toastError('Unsupported Chain Id', 'Unsupported Chain Id Error. Check your chain Id.')\r\n        } else if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\r\n          toastError('Provider Error', 'No provider was found')\r\n        } else if (\r\n          error instanceof UserRejectedRequestErrorInjected ||\r\n          error instanceof UserRejectedRequestErrorWalletConnect\r\n        ) {\r\n          if (connector instanceof WalletConnectConnector) {\r\n            const walletConnector = connector as WalletConnectConnector\r\n            walletConnector.walletConnectProvider = null\r\n          }\r\n          toastError('Authorization Error', 'Please authorize to access your account')\r\n        } else {\r\n          toastError(error.name, error.message)\r\n        }\r\n      })\r\n    } else {\r\n      toastError(\"Can't find connector\", 'The connector config is wrong')\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  return { login, logout: deactivate }\r\n}\r\n\r\nexport default useAuth\r\n","import React from 'react'\r\nimport { Button, ButtonProps, useWalletModal} from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useAuth from 'hooks/useAuth'\r\n\r\nconst UnlockButton: React.FC<ButtonProps> = (props) => {\r\n  const TranslateString = useI18n()\r\n  const { login, logout } = useAuth()\r\n  const { onPresentConnectModal } = useWalletModal(login, logout)\r\n\r\n  return (\r\n    <Button onClick={onPresentConnectModal} {...props}>\r\n      {TranslateString(292, 'Unlock Wallet')}\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default UnlockButton\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card } from '@pancakeswap-libs/uikit'\r\n\r\nexport const BodyWrapper = styled(Card)`\r\n  position: relative;\r\n  max-width: 436px;\r\n  width: 100%;\r\n  z-index: 5;\r\n`\r\n\r\n/**\r\n * The styled container element that wraps the content of most pages and the tabs.\r\n */\r\nexport default function AppBody({ children }: { children: React.ReactNode }) {\r\n  return <BodyWrapper>{children}</BodyWrapper>\r\n}\r\n","import { Text } from '@pancakeswap-libs/uikit'\r\nimport styled from 'styled-components'\r\n\r\nexport const Wrapper = styled.div`\r\n  position: relative;\r\n`\r\n\r\nexport const ClickableText = styled(Text)`\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n  color: ${({ theme }) => theme.colors.primary};\r\n`\r\n\r\nexport const Dots = styled.span`\r\n  &::after {\r\n    display: inline-block;\r\n    animation: ellipsis 1.25s infinite;\r\n    content: '.';\r\n    width: 1em;\r\n    text-align: left;\r\n  }\r\n  @keyframes ellipsis {\r\n    0% {\r\n      content: '.';\r\n    }\r\n    33% {\r\n      content: '..';\r\n    }\r\n    66% {\r\n      content: '...';\r\n    }\r\n  }\r\n`\r\n","import { Currency, CurrencyAmount, Fraction, Percent } from '@pancakeswap-libs/sdk'\r\nimport React from 'react'\r\nimport { Button, Text } from '@pancakeswap-libs/uikit'\r\nimport { TranslateString } from 'utils/translateTextHelpers'\r\nimport { RowBetween, RowFixed } from '../../components/Row'\r\nimport CurrencyLogo from '../../components/CurrencyLogo'\r\nimport { Field } from '../../state/mint/actions'\r\n\r\nexport function ConfirmAddModalBottom({\r\n  noLiquidity,\r\n  price,\r\n  currencies,\r\n  parsedAmounts,\r\n  poolTokenPercentage,\r\n  onAdd,\r\n}: {\r\n  noLiquidity?: boolean\r\n  price?: Fraction\r\n  currencies: { [field in Field]?: Currency }\r\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\r\n  poolTokenPercentage?: Percent\r\n  onAdd: () => void\r\n}) {\r\n  return (\r\n    <>\r\n      <RowBetween>\r\n        <Text>{currencies[Field.CURRENCY_A]?.symbol} Deposited</Text>\r\n        <RowFixed>\r\n          <CurrencyLogo currency={currencies[Field.CURRENCY_A]} style={{ marginRight: '8px' }} />\r\n          <Text>{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</Text>\r\n        </RowFixed>\r\n      </RowBetween>\r\n      <RowBetween>\r\n        <Text>{currencies[Field.CURRENCY_B]?.symbol} Deposited</Text>\r\n        <RowFixed>\r\n          <CurrencyLogo currency={currencies[Field.CURRENCY_B]} style={{ marginRight: '8px' }} />\r\n          <Text>{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</Text>\r\n        </RowFixed>\r\n      </RowBetween>\r\n      <RowBetween>\r\n        <Text>Rates</Text>\r\n        <Text>\r\n          {`1 ${currencies[Field.CURRENCY_A]?.symbol} = ${price?.toSignificant(4)} ${\r\n            currencies[Field.CURRENCY_B]?.symbol\r\n          }`}\r\n        </Text>\r\n      </RowBetween>\r\n      <RowBetween style={{ justifyContent: 'flex-end' }}>\r\n        <Text>\r\n          {`1 ${currencies[Field.CURRENCY_B]?.symbol} = ${price?.invert().toSignificant(4)} ${\r\n            currencies[Field.CURRENCY_A]?.symbol\r\n          }`}\r\n        </Text>\r\n      </RowBetween>\r\n      <RowBetween>\r\n        <Text>Share of Pool:</Text>\r\n        <Text>{noLiquidity ? '100' : poolTokenPercentage?.toSignificant(4)}%</Text>\r\n      </RowBetween>\r\n      <Button mt=\"20px\" onClick={onAdd}>\r\n        {noLiquidity ? TranslateString(250, 'Create Pool & Supply') : TranslateString(252, 'Confirm Supply')}\r\n      </Button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ConfirmAddModalBottom\r\n","import React from 'react'\r\nimport { Currency, Percent, Price } from '@pancakeswap-libs/sdk'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\nimport { AutoColumn } from '../../components/Column'\r\nimport { AutoRow } from '../../components/Row'\r\nimport { ONE_BIPS } from '../../constants'\r\nimport { Field } from '../../state/mint/actions'\r\n\r\nexport function PoolPriceBar({\r\n  currencies,\r\n  noLiquidity,\r\n  poolTokenPercentage,\r\n  price,\r\n}: {\r\n  currencies: { [field in Field]?: Currency }\r\n  noLiquidity?: boolean\r\n  poolTokenPercentage?: Percent\r\n  price?: Price\r\n}) {\r\n  return (\r\n    <AutoColumn gap=\"md\">\r\n      <AutoRow justify=\"space-around\" gap=\"4px\">\r\n        <AutoColumn justify=\"center\">\r\n          <Text>{price?.toSignificant(6) ?? '-'}</Text>\r\n          <Text fontSize=\"14px\" color=\"textSubtle\" pt={1}>\r\n            {currencies[Field.CURRENCY_B]?.symbol} per {currencies[Field.CURRENCY_A]?.symbol}\r\n          </Text>\r\n        </AutoColumn>\r\n        <AutoColumn justify=\"center\">\r\n          <Text>{price?.invert()?.toSignificant(6) ?? '-'}</Text>\r\n          <Text fontSize=\"14px\" color=\"textSubtle\" pt={1}>\r\n            {currencies[Field.CURRENCY_A]?.symbol} per {currencies[Field.CURRENCY_B]?.symbol}\r\n          </Text>\r\n        </AutoColumn>\r\n        <AutoColumn justify=\"center\">\r\n          <Text>\r\n            {noLiquidity && price\r\n              ? '100'\r\n              : (poolTokenPercentage?.lessThan(ONE_BIPS) ? '<0.01' : poolTokenPercentage?.toFixed(2)) ?? '0'}\r\n            %\r\n          </Text>\r\n          <Text fontSize=\"14px\" color=\"textSubtle\" pt={1}>\r\n            Share of Pool\r\n          </Text>\r\n        </AutoColumn>\r\n      </AutoRow>\r\n    </AutoColumn>\r\n  )\r\n}\r\n\r\nexport default PoolPriceBar\r\n","import React, { useCallback, useState } from 'react'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { TransactionResponse } from '@ethersproject/providers'\r\nimport { Currency, currencyEquals, ETHER, TokenAmount, WETH } from '@pancakeswap-libs/sdk'\r\nimport { Button, CardBody, AddIcon, Text as UIKitText } from '@pancakeswap-libs/uikit'\r\nimport { RouteComponentProps } from 'react-router-dom'\r\nimport { LightCard } from 'components/Card'\r\nimport { AutoColumn, ColumnCenter } from 'components/Column'\r\nimport TransactionConfirmationModal, { ConfirmationModalContent } from 'components/TransactionConfirmationModal'\r\nimport CardNav from 'components/CardNav'\r\nimport CurrencyInputPanel from 'components/CurrencyInputPanel'\r\nimport DoubleCurrencyLogo from 'components/DoubleLogo'\r\nimport { AddRemoveTabs } from 'components/NavigationTabs'\r\nimport { MinimalPositionCard } from 'components/PositionCard'\r\nimport Row, { RowBetween, RowFlat } from 'components/Row'\r\n\r\nimport { PairState } from 'data/Reserves'\r\nimport { useActiveWeb3React } from 'hooks'\r\nimport { useCurrency } from 'hooks/Tokens'\r\nimport { ApprovalState, useApproveCallback } from 'hooks/useApproveCallback'\r\nimport { Field } from 'state/mint/actions'\r\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from 'state/mint/hooks'\r\n\r\nimport { useTransactionAdder } from 'state/transactions/hooks'\r\nimport { useIsExpertMode, useUserDeadline, useUserSlippageTolerance } from 'state/user/hooks'\r\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from 'utils'\r\nimport { maxAmountSpend } from 'utils/maxAmountSpend'\r\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\r\nimport { currencyId } from 'utils/currencyId'\r\nimport Pane from 'components/Pane'\r\nimport Container from 'components/Container'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport useI18n from 'hooks/useI18n'\r\nimport AppBody from '../AppBody'\r\nimport { Dots, Wrapper } from '../Pool/styleds'\r\nimport { ConfirmAddModalBottom } from './ConfirmAddModalBottom'\r\nimport { PoolPriceBar } from './PoolPriceBar'\r\nimport { ROUTER_ADDRESS } from '../../constants'\r\n\r\nexport default function AddLiquidity({\r\n  match: {\r\n    params: { currencyIdA, currencyIdB },\r\n  },\r\n  history,\r\n}: RouteComponentProps<{ currencyIdA?: string; currencyIdB?: string }>) {\r\n  const { account, chainId, library } = useActiveWeb3React()\r\n  const currencyA = useCurrency(currencyIdA)\r\n  const currencyB = useCurrency(currencyIdB)\r\n  const TranslateString = useI18n()\r\n\r\n  const oneCurrencyIsWBNB = Boolean(\r\n    chainId &&\r\n      ((currencyA && currencyEquals(currencyA, WETH[chainId])) ||\r\n        (currencyB && currencyEquals(currencyB, WETH[chainId])))\r\n  )\r\n  const expertMode = useIsExpertMode()\r\n\r\n  // mint state\r\n  const { independentField, typedValue, otherTypedValue } = useMintState()\r\n  const {\r\n    dependentField,\r\n    currencies,\r\n    pair,\r\n    pairState,\r\n    currencyBalances,\r\n    parsedAmounts,\r\n    price,\r\n    noLiquidity,\r\n    liquidityMinted,\r\n    poolTokenPercentage,\r\n    error,\r\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\r\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\r\n\r\n  const isValid = !error\r\n\r\n  // modal and loading\r\n  const [showConfirm, setShowConfirm] = useState<boolean>(false)\r\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\r\n\r\n  // txn values\r\n  const [deadline] = useUserDeadline() // custom from users settings\r\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\r\n  const [txHash, setTxHash] = useState<string>('')\r\n\r\n  // get formatted amounts\r\n  const formattedAmounts = {\r\n    [independentField]: typedValue,\r\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\r\n  }\r\n\r\n  // get the max amounts user can add\r\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\r\n    (accumulator, field) => {\r\n      return {\r\n        ...accumulator,\r\n        [field]: maxAmountSpend(currencyBalances[field]),\r\n      }\r\n    },\r\n    {}\r\n  )\r\n\r\n  const atMaxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\r\n    (accumulator, field) => {\r\n      return {\r\n        ...accumulator,\r\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\r\n      }\r\n    },\r\n    {}\r\n  )\r\n\r\n  // check whether the user has approved the router on the tokens\r\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], ROUTER_ADDRESS)\r\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], ROUTER_ADDRESS)\r\n\r\n  const addTransaction = useTransactionAdder()\r\n\r\n  async function onAdd() {\r\n    if (!chainId || !library || !account) return\r\n    const router = getRouterContract(chainId, library, account)\r\n\r\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\r\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB) {\r\n      return\r\n    }\r\n\r\n    const amountsMin = {\r\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\r\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0],\r\n    }\r\n\r\n    const deadlineFromNow = Math.ceil(Date.now() / 1000) + deadline\r\n\r\n    let estimate\r\n    let method: (...args: any) => Promise<TransactionResponse>\r\n    let args: Array<string | string[] | number>\r\n    let value: BigNumber | null\r\n    if (currencyA === ETHER || currencyB === ETHER) {\r\n      const tokenBIsBNB = currencyB === ETHER\r\n      estimate = router.estimateGas.addLiquidityETH\r\n      method = router.addLiquidityETH\r\n      args = [\r\n        wrappedCurrency(tokenBIsBNB ? currencyA : currencyB, chainId)?.address ?? '', // token\r\n        (tokenBIsBNB ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\r\n        amountsMin[tokenBIsBNB ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\r\n        amountsMin[tokenBIsBNB ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\r\n        account,\r\n        deadlineFromNow,\r\n      ]\r\n      value = BigNumber.from((tokenBIsBNB ? parsedAmountB : parsedAmountA).raw.toString())\r\n    } else {\r\n      estimate = router.estimateGas.addLiquidity\r\n      method = router.addLiquidity\r\n      args = [\r\n        wrappedCurrency(currencyA, chainId)?.address ?? '',\r\n        wrappedCurrency(currencyB, chainId)?.address ?? '',\r\n        parsedAmountA.raw.toString(),\r\n        parsedAmountB.raw.toString(),\r\n        amountsMin[Field.CURRENCY_A].toString(),\r\n        amountsMin[Field.CURRENCY_B].toString(),\r\n        account,\r\n        deadlineFromNow,\r\n      ]\r\n      value = null\r\n    }\r\n\r\n    setAttemptingTxn(true)\r\n    // const aa = await estimate(...args, value ? { value } : {})\r\n    await estimate(...args, value ? { value } : {})\r\n      .then((estimatedGasLimit) =>\r\n        method(...args, {\r\n          ...(value ? { value } : {}),\r\n          gasLimit: calculateGasMargin(estimatedGasLimit),\r\n        }).then((response) => {\r\n          setAttemptingTxn(false)\r\n\r\n          addTransaction(response, {\r\n            summary: `Add ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\r\n              currencies[Field.CURRENCY_A]?.symbol\r\n            } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencies[Field.CURRENCY_B]?.symbol}`,\r\n          })\r\n\r\n          setTxHash(response.hash)\r\n        })\r\n      )\r\n      .catch((e) => {\r\n        setAttemptingTxn(false)\r\n        // we only care if the error is something _other_ than the user rejected the tx\r\n        if (e?.code !== 4001) {\r\n          console.error(e)\r\n        }\r\n      })\r\n  }\r\n\r\n  const modalHeader = () => {\r\n    return noLiquidity ? (\r\n      <AutoColumn gap=\"20px\">\r\n        <LightCard mt=\"20px\" borderRadius=\"20px\">\r\n          <RowFlat>\r\n            <UIKitText fontSize=\"48px\" mr=\"8px\">\r\n              {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol}`}\r\n            </UIKitText>\r\n            <DoubleCurrencyLogo\r\n              currency0={currencies[Field.CURRENCY_A]}\r\n              currency1={currencies[Field.CURRENCY_B]}\r\n              size={30}\r\n            />\r\n          </RowFlat>\r\n        </LightCard>\r\n      </AutoColumn>\r\n    ) : (\r\n      <AutoColumn gap=\"20px\">\r\n        <RowFlat style={{ marginTop: '20px' }}>\r\n          <UIKitText fontSize=\"48px\" mr=\"8px\">\r\n            {liquidityMinted?.toSignificant(6)}\r\n          </UIKitText>\r\n          <DoubleCurrencyLogo\r\n            currency0={currencies[Field.CURRENCY_A]}\r\n            currency1={currencies[Field.CURRENCY_B]}\r\n            size={30}\r\n          />\r\n        </RowFlat>\r\n        <Row>\r\n          <UIKitText fontSize=\"24px\">\r\n            {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol} Pool Tokens`}\r\n          </UIKitText>\r\n        </Row>\r\n        <UIKitText small textAlign=\"left\" padding=\"8px 0 0 0 \" style={{ fontStyle: 'italic' }}>\r\n          {`Output is estimated. If the price changes by more than ${\r\n            allowedSlippage / 100\r\n          }% your transaction will revert.`}\r\n        </UIKitText>\r\n      </AutoColumn>\r\n    )\r\n  }\r\n\r\n  const modalBottom = () => {\r\n    return (\r\n      <ConfirmAddModalBottom\r\n        price={price}\r\n        currencies={currencies}\r\n        parsedAmounts={parsedAmounts}\r\n        noLiquidity={noLiquidity}\r\n        onAdd={onAdd}\r\n        poolTokenPercentage={poolTokenPercentage}\r\n      />\r\n    )\r\n  }\r\n\r\n  const pendingText = `Supplying ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)} ${\r\n    currencies[Field.CURRENCY_A]?.symbol\r\n  } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)} ${currencies[Field.CURRENCY_B]?.symbol}`\r\n\r\n  const handleCurrencyASelect = useCallback(\r\n    (currA: Currency) => {\r\n      const newCurrencyIdA = currencyId(currA)\r\n      if (newCurrencyIdA === currencyIdB) {\r\n        history.push(`/add/${currencyIdB}/${currencyIdA}`)\r\n      } else {\r\n        history.push(`/add/${newCurrencyIdA}/${currencyIdB}`)\r\n      }\r\n    },\r\n    [currencyIdB, history, currencyIdA]\r\n  )\r\n  const handleCurrencyBSelect = useCallback(\r\n    (currB: Currency) => {\r\n      const newCurrencyIdB = currencyId(currB)\r\n      if (currencyIdA === newCurrencyIdB) {\r\n        if (currencyIdB) {\r\n          history.push(`/add/${currencyIdB}/${newCurrencyIdB}`)\r\n        } else {\r\n          history.push(`/add/${newCurrencyIdB}`)\r\n        }\r\n      } else {\r\n        history.push(`/add/${currencyIdA || 'BNB'}/${newCurrencyIdB}`)\r\n      }\r\n    },\r\n    [currencyIdA, history, currencyIdB]\r\n  )\r\n\r\n  const handleDismissConfirmation = useCallback(() => {\r\n    setShowConfirm(false)\r\n    // if there was a tx hash, we want to clear the input\r\n    if (txHash) {\r\n      onFieldAInput('')\r\n    }\r\n    setTxHash('')\r\n  }, [onFieldAInput, txHash])\r\n\r\n  return (\r\n    <Container>\r\n      <CardNav activeIndex={1} />\r\n      <AppBody>\r\n        <AddRemoveTabs adding />\r\n        <Wrapper>\r\n          <TransactionConfirmationModal\r\n            isOpen={showConfirm}\r\n            onDismiss={handleDismissConfirmation}\r\n            attemptingTxn={attemptingTxn}\r\n            hash={txHash}\r\n            content={() => (\r\n              <ConfirmationModalContent\r\n                title={\r\n                  noLiquidity\r\n                    ? TranslateString(1154, 'You are creating a pool')\r\n                    : TranslateString(1156, 'You will receive')\r\n                }\r\n                onDismiss={handleDismissConfirmation}\r\n                topContent={modalHeader}\r\n                bottomContent={modalBottom}\r\n              />\r\n            )}\r\n            pendingText={pendingText}\r\n          />\r\n          <CardBody>\r\n            <AutoColumn gap=\"20px\">\r\n              {noLiquidity && (\r\n                <ColumnCenter>\r\n                  <Pane>\r\n                    <AutoColumn gap=\"12px\">\r\n                      <UIKitText>{TranslateString(1158, 'You are the first liquidity provider.')}</UIKitText>\r\n                      <UIKitText>\r\n                        {TranslateString(1160, 'The ratio of tokens you add will set the price of this pool.')}\r\n                      </UIKitText>\r\n                      <UIKitText>\r\n                        {TranslateString(1162, 'Once you are happy with the rate click supply to review.')}\r\n                      </UIKitText>\r\n                    </AutoColumn>\r\n                  </Pane>\r\n                </ColumnCenter>\r\n              )}\r\n              <CurrencyInputPanel\r\n                value={formattedAmounts[Field.CURRENCY_A]}\r\n                onUserInput={onFieldAInput}\r\n                onMax={() => {\r\n                  onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\r\n                }}\r\n                onCurrencySelect={handleCurrencyASelect}\r\n                showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\r\n                currency={currencies[Field.CURRENCY_A]}\r\n                id=\"add-liquidity-input-tokena\"\r\n                showCommonBases={false}\r\n              />\r\n              <ColumnCenter>\r\n                <AddIcon color=\"textSubtle\" />\r\n              </ColumnCenter>\r\n              <CurrencyInputPanel\r\n                value={formattedAmounts[Field.CURRENCY_B]}\r\n                onUserInput={onFieldBInput}\r\n                onCurrencySelect={handleCurrencyBSelect}\r\n                onMax={() => {\r\n                  onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\r\n                }}\r\n                showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\r\n                currency={currencies[Field.CURRENCY_B]}\r\n                id=\"add-liquidity-input-tokenb\"\r\n                showCommonBases={false}\r\n              />\r\n              {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\r\n                <div>\r\n                  <UIKitText\r\n                    style={{ textTransform: 'uppercase', fontWeight: 600 }}\r\n                    color=\"textSubtle\"\r\n                    fontSize=\"12px\"\r\n                    mb=\"2px\"\r\n                  >\r\n                    {noLiquidity\r\n                      ? TranslateString(1164, 'Initial prices and pool share')\r\n                      : TranslateString(1166, 'Prices and pool share')}\r\n                  </UIKitText>\r\n                  <Pane>\r\n                    <PoolPriceBar\r\n                      currencies={currencies}\r\n                      poolTokenPercentage={poolTokenPercentage}\r\n                      noLiquidity={noLiquidity}\r\n                      price={price}\r\n                    />\r\n                  </Pane>\r\n                </div>\r\n              )}\r\n\r\n              {!account ? (\r\n                <ConnectWalletButton width=\"100%\" />\r\n              ) : (\r\n                <AutoColumn gap=\"md\">\r\n                  {(approvalA === ApprovalState.NOT_APPROVED ||\r\n                    approvalA === ApprovalState.PENDING ||\r\n                    approvalB === ApprovalState.NOT_APPROVED ||\r\n                    approvalB === ApprovalState.PENDING) &&\r\n                    isValid && (\r\n                      <RowBetween>\r\n                        {approvalA !== ApprovalState.APPROVED && (\r\n                          <Button\r\n                            onClick={approveACallback}\r\n                            disabled={approvalA === ApprovalState.PENDING}\r\n                            style={{ width: approvalB !== ApprovalState.APPROVED ? '48%' : '100%' }}\r\n                          >\r\n                            {approvalA === ApprovalState.PENDING ? (\r\n                              <Dots>Approving {currencies[Field.CURRENCY_A]?.symbol}</Dots>\r\n                            ) : (\r\n                              `Approve ${currencies[Field.CURRENCY_A]?.symbol}`\r\n                            )}\r\n                          </Button>\r\n                        )}\r\n                        {approvalB !== ApprovalState.APPROVED && (\r\n                          <Button\r\n                            onClick={approveBCallback}\r\n                            disabled={approvalB === ApprovalState.PENDING}\r\n                            style={{ width: approvalA !== ApprovalState.APPROVED ? '48%' : '100%' }}\r\n                          >\r\n                            {approvalB === ApprovalState.PENDING ? (\r\n                              <Dots>Approving {currencies[Field.CURRENCY_B]?.symbol}</Dots>\r\n                            ) : (\r\n                              `Approve ${currencies[Field.CURRENCY_B]?.symbol}`\r\n                            )}\r\n                          </Button>\r\n                        )}\r\n                      </RowBetween>\r\n                    )}\r\n                  <Button\r\n                    onClick={() => {\r\n                      if (expertMode) {\r\n                        onAdd()\r\n                      } else {\r\n                        setShowConfirm(true)\r\n                      }\r\n                    }}\r\n                    disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\r\n                    variant={\r\n                      !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\r\n                        ? 'danger'\r\n                        : 'primary'\r\n                    }\r\n                    width=\"100%\"\r\n                  >\r\n                    {error ?? 'Supply'}\r\n                  </Button>\r\n                </AutoColumn>\r\n              )}\r\n            </AutoColumn>\r\n          </CardBody>\r\n        </Wrapper>\r\n      </AppBody>\r\n      {pair && !noLiquidity && pairState !== PairState.INVALID ? (\r\n        <AutoColumn style={{ minWidth: '20rem', marginTop: '1rem' }}>\r\n          <MinimalPositionCard showUnwrapped={oneCurrencyIsWBNB} pair={pair} />\r\n        </AutoColumn>\r\n      ) : null}\r\n    </Container>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\r\nimport AddLiquidity from './index'\r\n\r\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40})-(0x[a-fA-F0-9]{40})$/\r\nexport function RedirectOldAddLiquidityPathStructure(props: RouteComponentProps<{ currencyIdA: string }>) {\r\n  const {\r\n    match: {\r\n      params: { currencyIdA },\r\n    },\r\n  } = props\r\n  const match = currencyIdA.match(OLD_PATH_STRUCTURE)\r\n  if (match?.length) {\r\n    return <Redirect to={`/add/${match[1]}/${match[2]}`} />\r\n  }\r\n\r\n  return <AddLiquidity {...props} />\r\n}\r\n\r\nexport function RedirectDuplicateTokenIds(props: RouteComponentProps<{ currencyIdA: string; currencyIdB: string }>) {\r\n  const {\r\n    match: {\r\n      params: { currencyIdA, currencyIdB },\r\n    },\r\n  } = props\r\n  if (currencyIdA.toLowerCase() === currencyIdB.toLowerCase()) {\r\n    return <Redirect to={`/add/${currencyIdA}`} />\r\n  }\r\n  return <AddLiquidity {...props} />\r\n}\r\n","import React from 'react'\r\nimport { RouteComponentProps, Redirect } from 'react-router-dom'\r\n\r\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40})-(0x[a-fA-F0-9]{40})$/\r\n\r\nexport function RedirectOldRemoveLiquidityPathStructure({\r\n  match: {\r\n    params: { tokens },\r\n  },\r\n}: RouteComponentProps<{ tokens: string }>) {\r\n  if (!OLD_PATH_STRUCTURE.test(tokens)) {\r\n    return <Redirect to=\"/pool\" />\r\n  }\r\n  const [currency0, currency1] = tokens.split('-')\r\n\r\n  return <Redirect to={`/remove/${currency0}/${currency1}`} />\r\n}\r\n\r\nexport default RedirectOldRemoveLiquidityPathStructure\r\n","import { Currency, ETHER, JSBI, TokenAmount } from '@pancakeswap-libs/sdk'\r\nimport React, { useCallback, useEffect, useState } from 'react'\r\nimport { Button, ChevronDownIcon, AddIcon, CardBody, Text } from '@pancakeswap-libs/uikit'\r\nimport CardNav from 'components/CardNav'\r\nimport { LightCard } from 'components/Card'\r\nimport { AutoColumn, ColumnCenter } from 'components/Column'\r\nimport CurrencyLogo from 'components/CurrencyLogo'\r\nimport { FindPoolTabs } from 'components/NavigationTabs'\r\nimport { MinimalPositionCard } from 'components/PositionCard'\r\nimport CurrencySearchModal from 'components/SearchModal/CurrencySearchModal'\r\nimport { PairState, usePair } from 'data/Reserves'\r\nimport { useActiveWeb3React } from 'hooks'\r\nimport { usePairAdder } from 'state/user/hooks'\r\nimport { useTokenBalance } from 'state/wallet/hooks'\r\nimport { StyledInternalLink } from 'components/Shared'\r\nimport Container from 'components/Container'\r\nimport { currencyId } from 'utils/currencyId'\r\nimport useI18n from 'hooks/useI18n'\r\nimport AppBody from '../AppBody'\r\nimport { Dots } from '../Pool/styleds'\r\n\r\nenum Fields {\r\n  TOKEN0 = 0,\r\n  TOKEN1 = 1,\r\n}\r\n\r\nexport default function PoolFinder() {\r\n  const { account } = useActiveWeb3React()\r\n\r\n  const [showSearch, setShowSearch] = useState<boolean>(false)\r\n  const [activeField, setActiveField] = useState<number>(Fields.TOKEN1)\r\n\r\n  const [currency0, setCurrency0] = useState<Currency | null>(ETHER)\r\n  const [currency1, setCurrency1] = useState<Currency | null>(null)\r\n\r\n  const [pairState, pair] = usePair(currency0 ?? undefined, currency1 ?? undefined)\r\n  const addPair = usePairAdder()\r\n\r\n  const TranslateString = useI18n()\r\n  useEffect(() => {\r\n    if (pair) {\r\n      addPair(pair)\r\n    }\r\n  }, [pair, addPair])\r\n\r\n  const validPairNoLiquidity: boolean =\r\n    pairState === PairState.NOT_EXISTS ||\r\n    Boolean(\r\n      pairState === PairState.EXISTS &&\r\n        pair &&\r\n        JSBI.equal(pair.reserve0.raw, JSBI.BigInt(0)) &&\r\n        JSBI.equal(pair.reserve1.raw, JSBI.BigInt(0))\r\n    )\r\n\r\n  const position: TokenAmount | undefined = useTokenBalance(account ?? undefined, pair?.liquidityToken)\r\n  const hasPosition = Boolean(position && JSBI.greaterThan(position.raw, JSBI.BigInt(0)))\r\n\r\n  const handleCurrencySelect = useCallback(\r\n    (currency: Currency) => {\r\n      if (activeField === Fields.TOKEN0) {\r\n        setCurrency0(currency)\r\n      } else {\r\n        setCurrency1(currency)\r\n      }\r\n    },\r\n    [activeField]\r\n  )\r\n\r\n  const handleSearchDismiss = useCallback(() => {\r\n    setShowSearch(false)\r\n  }, [setShowSearch])\r\n\r\n  const prerequisiteMessage = (\r\n    <LightCard padding=\"45px 10px\">\r\n      <Text style={{ textAlign: 'center' }}>\r\n        {!account\r\n          ? TranslateString(1174, 'Connect to a wallet to find pools')\r\n          : TranslateString(208, 'Select a token to find your liquidity.')}\r\n      </Text>\r\n    </LightCard>\r\n  )\r\n\r\n  return (\r\n    <Container>\r\n      <CardNav activeIndex={1} />\r\n      <AppBody>\r\n        <FindPoolTabs />\r\n        <CardBody>\r\n          <AutoColumn gap=\"md\">\r\n            <Button\r\n              onClick={() => {\r\n                setShowSearch(true)\r\n                setActiveField(Fields.TOKEN0)\r\n              }}\r\n              startIcon={currency0 ? <CurrencyLogo currency={currency0} style={{ marginRight: '.5rem' }} /> : null}\r\n              endIcon={<ChevronDownIcon width=\"24px\" color=\"white\" />}\r\n              width=\"100%\"\r\n            >\r\n              {currency0 ? currency0.symbol : TranslateString(82, 'Select a Token')}\r\n            </Button>\r\n\r\n            <ColumnCenter>\r\n              <AddIcon color=\"textSubtle\" />\r\n            </ColumnCenter>\r\n\r\n            <Button\r\n              onClick={() => {\r\n                setShowSearch(true)\r\n                setActiveField(Fields.TOKEN1)\r\n              }}\r\n              startIcon={currency1 ? <CurrencyLogo currency={currency1} style={{ marginRight: '.5rem' }} /> : null}\r\n              endIcon={<ChevronDownIcon width=\"24px\" color=\"white\" />}\r\n              width=\"100%\"\r\n            >\r\n              {currency1 ? currency1.symbol : TranslateString(82, 'Select a Token')}\r\n            </Button>\r\n\r\n            {hasPosition && (\r\n              <ColumnCenter\r\n                style={{ justifyItems: 'center', backgroundColor: '', padding: '12px 0px', borderRadius: '12px' }}\r\n              >\r\n                <Text style={{ textAlign: 'center' }}>{TranslateString(210, 'Pool found!')}</Text>\r\n              </ColumnCenter>\r\n            )}\r\n\r\n            {currency0 && currency1 ? (\r\n              pairState === PairState.EXISTS ? (\r\n                hasPosition && pair ? (\r\n                  <MinimalPositionCard pair={pair} />\r\n                ) : (\r\n                  <LightCard padding=\"45px 10px\">\r\n                    <AutoColumn gap=\"sm\" justify=\"center\">\r\n                      <Text style={{ textAlign: 'center' }}>\r\n                        {TranslateString(212, 'You don’t have liquidity in this pool yet.')}\r\n                      </Text>\r\n                      <Text style={{ textAlign: 'center' }}>\r\n                        {TranslateString(168, \"You can't add liquidity on V1\")}\r\n                      </Text>\r\n                    </AutoColumn>\r\n                  </LightCard>\r\n                )\r\n              ) : validPairNoLiquidity ? (\r\n                <LightCard padding=\"45px 10px\">\r\n                  <AutoColumn gap=\"sm\" justify=\"center\">\r\n                    <Text style={{ textAlign: 'center' }}>{TranslateString(214, 'No pool found.')}</Text>\r\n                    <StyledInternalLink to={`/add/${currencyId(currency0)}/${currencyId(currency1)}`}>\r\n                      Create pool.\r\n                    </StyledInternalLink>\r\n                  </AutoColumn>\r\n                </LightCard>\r\n              ) : pairState === PairState.INVALID ? (\r\n                <LightCard padding=\"45px 10px\">\r\n                  <AutoColumn gap=\"sm\" justify=\"center\">\r\n                    <Text style={{ textAlign: 'center' }}>{TranslateString(136, 'Invalid pair.')}</Text>\r\n                  </AutoColumn>\r\n                </LightCard>\r\n              ) : pairState === PairState.LOADING ? (\r\n                <LightCard padding=\"45px 10px\">\r\n                  <AutoColumn gap=\"sm\" justify=\"center\">\r\n                    <Text style={{ textAlign: 'center' }}>\r\n                      Loading\r\n                      <Dots />\r\n                    </Text>\r\n                  </AutoColumn>\r\n                </LightCard>\r\n              ) : null\r\n            ) : (\r\n              prerequisiteMessage\r\n            )}\r\n          </AutoColumn>\r\n\r\n          <CurrencySearchModal\r\n            isOpen={showSearch}\r\n            onCurrencySelect={handleCurrencySelect}\r\n            onDismiss={handleSearchDismiss}\r\n            showCommonBases\r\n            selectedCurrency={(activeField === Fields.TOKEN0 ? currency1 : currency0) ?? undefined}\r\n          />\r\n        </CardBody>\r\n      </AppBody>\r\n    </Container>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Box, Button, Flex, Input, Text } from '@pancakeswap-libs/uikit'\r\nimport { useUserSlippageTolerance } from 'state/user/hooks'\r\nimport QuestionHelper from '../QuestionHelper'\r\n\r\nconst MAX_SLIPPAGE = 5000\r\nconst RISKY_SLIPPAGE_LOW = 50\r\nconst RISKY_SLIPPAGE_HIGH = 500\r\n\r\nconst Option = styled.div`\r\n  padding: 0 4px;\r\n`\r\n\r\nconst Options = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  ${Option}:first-child {\r\n    padding-left: 0;\r\n  }\r\n\r\n  ${Option}:last-child {\r\n    padding-right: 0;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex-direction: row;\r\n  }\r\n`\r\n\r\nconst predefinedValues = [\r\n  { label: '0.1%', value: 0.1 },\r\n  { label: '0.5%', value: 0.5 },\r\n  { label: '1%', value: 1 },\r\n]\r\n\r\ntype SlippageToleranceSettingsModalProps = {\r\n  translateString: (translationId: number, fallback: string) => string\r\n}\r\n\r\nconst SlippageToleranceSettings = ({ translateString }: SlippageToleranceSettingsModalProps) => {\r\n  const [userSlippageTolerance, setUserslippageTolerance] = useUserSlippageTolerance()\r\n  const [value, setValue] = useState(userSlippageTolerance / 100)\r\n  const [error, setError] = useState<string | null>(null)\r\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { value: inputValue } = evt.target\r\n    setValue(parseFloat(inputValue))\r\n  }\r\n\r\n  // Updates local storage if value is valid\r\n  useEffect(() => {\r\n    try {\r\n      const rawValue = value * 100\r\n      if (!Number.isNaN(rawValue) && rawValue > 0 && rawValue < MAX_SLIPPAGE) {\r\n        setUserslippageTolerance(rawValue)\r\n        setError(null)\r\n      } else {\r\n        setError(translateString(1144, 'Enter a valid slippage percentage'))\r\n      }\r\n    } catch {\r\n      setError(translateString(1144, 'Enter a valid slippage percentage'))\r\n    }\r\n  }, [value, setError, setUserslippageTolerance, translateString])\r\n\r\n  // Notify user if slippage is risky\r\n  useEffect(() => {\r\n    if (userSlippageTolerance < RISKY_SLIPPAGE_LOW) {\r\n      setError(translateString(1146, 'Your transaction may fail'))\r\n    } else if (userSlippageTolerance > RISKY_SLIPPAGE_HIGH) {\r\n      setError(translateString(1148, 'Your transaction may be frontrun'))\r\n    }\r\n  }, [userSlippageTolerance, setError, translateString])\r\n\r\n  return (\r\n    <Box mb=\"16px\">\r\n      <Flex alignItems=\"center\" mb=\"8px\">\r\n        <Text bold>{translateString(88, 'Slippage tolerance')}</Text>\r\n        <QuestionHelper\r\n          text={translateString(\r\n            186,\r\n            'Your transaction will revert if the price changes unfavorably by more than this percentage.'\r\n          )}\r\n        />\r\n      </Flex>\r\n      <Options>\r\n        <Flex mb={['8px', '8px', 0]} mr={[0, 0, '8px']}>\r\n          {predefinedValues.map(({ label, value: predefinedValue }) => {\r\n            const handleClick = () => setValue(predefinedValue)\r\n\r\n            return (\r\n              <Option key={predefinedValue}>\r\n                <Button variant={value === predefinedValue ? 'primary' : 'tertiary'} onClick={handleClick}>\r\n                  {label}\r\n                </Button>\r\n              </Option>\r\n            )\r\n          })}\r\n        </Flex>\r\n        <Flex alignItems=\"center\">\r\n          <Option>\r\n            <Input\r\n              type=\"number\"\r\n              scale=\"lg\"\r\n              step={0.1}\r\n              min={0.1}\r\n              placeholder=\"5%\"\r\n              value={value}\r\n              onChange={handleChange}\r\n              isWarning={error !== null}\r\n            />\r\n          </Option>\r\n          <Option>\r\n            <Text fontSize=\"18px\">%</Text>\r\n          </Option>\r\n        </Flex>\r\n      </Options>\r\n      {error && (\r\n        <Text mt=\"8px\" color=\"failure\">\r\n          {error}\r\n        </Text>\r\n      )}\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default SlippageToleranceSettings\r\n","import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Input, Text, Flex, Box } from '@pancakeswap-libs/uikit'\r\nimport { useUserDeadline } from 'state/user/hooks'\r\nimport QuestionHelper from '../QuestionHelper'\r\n\r\nconst Field = styled.div`\r\n  align-items: center;\r\n  display: inline-flex;\r\n\r\n  & > ${Input} {\r\n    max-width: 100px;\r\n  }\r\n`\r\n\r\ntype TransactionDeadlineSettingModalProps = {\r\n  translateString: (translationId: number, fallback: string) => string\r\n}\r\n\r\nconst TransactionDeadlineSetting = ({ translateString }: TransactionDeadlineSettingModalProps) => {\r\n  const [deadline, setDeadline] = useUserDeadline()\r\n  const [value, setValue] = useState(deadline / 60) // deadline in minutes\r\n  const [error, setError] = useState<string | null>(null)\r\n\r\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { value: inputValue } = evt.target\r\n    setValue(parseInt(inputValue, 10))\r\n  }\r\n\r\n  // Updates local storage if value is valid\r\n  useEffect(() => {\r\n    try {\r\n      const rawValue = value * 60\r\n      if (!Number.isNaN(rawValue) && rawValue > 0) {\r\n        setDeadline(rawValue)\r\n        setError(null)\r\n      } else {\r\n        setError(translateString(1150, 'Enter a valid deadline'))\r\n      }\r\n    } catch {\r\n      setError(translateString(1150, 'Enter a valid deadline'))\r\n    }\r\n  }, [value, setError, setDeadline, translateString])\r\n\r\n  return (\r\n    <Box mb=\"16px\">\r\n      <Flex alignItems=\"center\" mb=\"8px\">\r\n        <Text bold>{translateString(90, 'Transaction deadline')}</Text>\r\n        <QuestionHelper\r\n          text={translateString(188, 'Your transaction will revert if it is pending for more than this long.')}\r\n        />\r\n      </Flex>\r\n      <Field>\r\n        <Input type=\"number\" step=\"1\" min=\"1\" value={value} onChange={handleChange} />\r\n        <Text fontSize=\"14px\" ml=\"8px\">\r\n          Minutes\r\n        </Text>\r\n      </Field>\r\n      {error && (\r\n        <Text mt=\"8px\" color=\"failure\">\r\n          {error}\r\n        </Text>\r\n      )}\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default TransactionDeadlineSetting\r\n","import React from 'react'\r\nimport { Box, Flex, Text, PancakeToggle, useMatchBreakpoints } from '@pancakeswap-libs/uikit'\r\nimport { useAudioModeManager } from 'state/user/hooks'\r\n\r\ntype AudioSettingModalProps = {\r\n  translateString: (translationId: number, fallback: string) => string\r\n}\r\n\r\nconst AudioSetting = ({ translateString }: AudioSettingModalProps) => {\r\n  const { isSm, isXs } = useMatchBreakpoints()\r\n  const [audioPlay, toggleSetAudioMode] = useAudioModeManager()\r\n\r\n  return (\r\n    <Box mb=\"16px\">\r\n      <Flex alignItems=\"center\" mb=\"8px\">\r\n        <Text bold>{translateString(999, 'Audio')}</Text>\r\n      </Flex>\r\n      <Box>\r\n        <PancakeToggle scale={isSm || isXs ? 'sm' : 'md'} checked={audioPlay} onChange={toggleSetAudioMode} />\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default AudioSetting\r\n","import React from 'react'\r\nimport { Modal } from '@pancakeswap-libs/uikit'\r\nimport SlippageToleranceSetting from './SlippageToleranceSetting'\r\nimport TransactionDeadlineSetting from './TransactionDeadlineSetting'\r\nimport AudioSetting from './AudioSetting'\r\n\r\ntype SettingsModalProps = {\r\n  onDismiss?: () => void\r\n  translateString: (translationId: number, fallback: string) => string\r\n}\r\n\r\n// TODO: Fix UI Kit typings\r\nconst defaultOnDismiss = () => null\r\n\r\nconst SettingsModal = ({ onDismiss = defaultOnDismiss, translateString }: SettingsModalProps) => {\r\n  return (\r\n    <Modal title={translateString(1200, 'Settings')} onDismiss={onDismiss}>\r\n      <SlippageToleranceSetting translateString={translateString} />\r\n      <TransactionDeadlineSetting translateString={translateString} />\r\n      <AudioSetting translateString={translateString} />\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default SettingsModal\r\n","import React, { useMemo } from 'react'\r\nimport { CheckmarkCircleIcon, ErrorIcon, Flex, LinkExternal, Text, Modal, Button } from '@pancakeswap-libs/uikit'\r\nimport { useActiveWeb3React } from 'hooks'\r\nimport { getBscScanLink } from 'utils'\r\nimport { isTransactionRecent, useAllTransactions } from 'state/transactions/hooks'\r\nimport { TransactionDetails } from 'state/transactions/reducer'\r\nimport Loader from 'components/Loader'\r\n\r\ntype RecentTransactionsModalProps = {\r\n  onDismiss?: () => void\r\n  translateString: (translationId: number, fallback: string) => string\r\n}\r\n\r\n// TODO: Fix UI Kit typings\r\nconst defaultOnDismiss = () => null\r\n\r\nconst newTransactionsFirst = (a: TransactionDetails, b: TransactionDetails) => b.addedTime - a.addedTime\r\n\r\nconst getRowStatus = (sortedRecentTransaction: TransactionDetails) => {\r\n  const { hash, receipt } = sortedRecentTransaction\r\n\r\n  if (!hash) {\r\n    return { icon: <Loader />, color: 'text' }\r\n  }\r\n\r\n  if (hash && receipt?.status === 1) {\r\n    return { icon: <CheckmarkCircleIcon color=\"success\" />, color: 'success' }\r\n  }\r\n\r\n  return { icon: <ErrorIcon color=\"failure\" />, color: 'failure' }\r\n}\r\n\r\nconst RecentTransactionsModal = ({ onDismiss = defaultOnDismiss, translateString }: RecentTransactionsModalProps) => {\r\n  const { account, chainId } = useActiveWeb3React()\r\n  const allTransactions = useAllTransactions()\r\n\r\n  // Logic taken from Web3Status/index.tsx line 175\r\n  const sortedRecentTransactions = useMemo(() => {\r\n    const txs = Object.values(allTransactions)\r\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst)\r\n  }, [allTransactions])\r\n\r\n  return (\r\n    <Modal title={translateString(1202, 'Recent transactions')} onDismiss={onDismiss}>\r\n      {!account && (\r\n        <Flex justifyContent=\"center\" flexDirection=\"column\" alignItems=\"center\">\r\n          <Text mb=\"8px\" bold>\r\n            Please connect your wallet to view your recent transactions\r\n          </Text>\r\n          <Button variant=\"tertiary\" scale=\"sm\" onClick={onDismiss}>\r\n            Close\r\n          </Button>\r\n        </Flex>\r\n      )}\r\n      {account && chainId && sortedRecentTransactions.length === 0 && (\r\n        <Flex justifyContent=\"center\" flexDirection=\"column\" alignItems=\"center\">\r\n          <Text mb=\"8px\" bold>\r\n            No recent transactions\r\n          </Text>\r\n          <Button variant=\"tertiary\" scale=\"sm\" onClick={onDismiss}>\r\n            Close\r\n          </Button>\r\n        </Flex>\r\n      )}\r\n      {account &&\r\n        chainId &&\r\n        sortedRecentTransactions.map((sortedRecentTransaction) => {\r\n          const { hash, summary } = sortedRecentTransaction\r\n          const { icon, color } = getRowStatus(sortedRecentTransaction)\r\n\r\n          return (\r\n            <>\r\n              <Flex key={hash} alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\r\n                <LinkExternal href={getBscScanLink(chainId, hash, 'transaction')} color={color}>\r\n                  {summary ?? hash}\r\n                </LinkExternal>\r\n                {icon}\r\n              </Flex>\r\n            </>\r\n          )\r\n        })}\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default RecentTransactionsModal\r\n","import React, { ReactNode } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, IconButton, Text, Flex, useModal, TuneIcon, HistoryIcon } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport SettingsModal from './SettingsModal'\r\nimport RecentTransactionsModal from './RecentTransactionsModal'\r\n\r\ninterface PageHeaderProps {\r\n  title: ReactNode\r\n  description?: ReactNode\r\n  children?: ReactNode\r\n}\r\n\r\nconst StyledPageHeader = styled.div`\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.borderColor};\r\n  padding: 24px;\r\n`\r\n\r\nconst Details = styled.div`\r\n  flex: 1;\r\n`\r\n\r\nconst PageHeader = ({ title, description, children }: PageHeaderProps) => {\r\n  const TranslateString = useI18n()\r\n  const [onPresentSettings] = useModal(<SettingsModal translateString={TranslateString} />)\r\n  const [onPresentRecentTransactions] = useModal(<RecentTransactionsModal translateString={TranslateString} />)\r\n\r\n  return (\r\n    <StyledPageHeader>\r\n      <Flex alignItems=\"center\">\r\n        <Details>\r\n          <Heading mb=\"8px\">{title}</Heading>\r\n          {description && (\r\n            <Text color=\"textSubtle\" fontSize=\"14px\">\r\n              {description}\r\n            </Text>\r\n          )}\r\n        </Details>\r\n        <IconButton variant=\"text\" onClick={onPresentSettings} title={TranslateString(1200, 'Settings')}>\r\n          <TuneIcon width=\"24px\" color=\"currentColor\" />\r\n        </IconButton>\r\n        <IconButton\r\n          variant=\"text\"\r\n          onClick={onPresentRecentTransactions}\r\n          title={TranslateString(1202, 'Recent transactions')}\r\n        >\r\n          <HistoryIcon width=\"24px\" color=\"currentColor\" />\r\n        </IconButton>\r\n      </Flex>\r\n      {children && <Text mt=\"16px\">{children}</Text>}\r\n    </StyledPageHeader>\r\n  )\r\n}\r\n\r\nexport default PageHeader\r\n","import React, { useContext, useMemo } from 'react'\r\nimport { ThemeContext } from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\nimport { Pair } from '@pancakeswap-libs/sdk'\r\nimport { Button, CardBody, Text } from '@pancakeswap-libs/uikit'\r\nimport CardNav from 'components/CardNav'\r\nimport Question from 'components/QuestionHelper'\r\nimport FullPositionCard from 'components/PositionCard'\r\nimport { useTokenBalancesWithLoadingIndicator } from 'state/wallet/hooks'\r\nimport { StyledInternalLink } from 'components/Shared'\r\nimport { LightCard } from 'components/Card'\r\nimport { RowBetween } from 'components/Row'\r\nimport { AutoColumn } from 'components/Column'\r\nimport Container from 'components/Container'\r\n\r\nimport { useActiveWeb3React } from 'hooks'\r\nimport { usePairs } from 'data/Reserves'\r\nimport { toV2LiquidityToken, useTrackedTokenPairs } from 'state/user/hooks'\r\nimport { Dots } from 'components/swap/styleds'\r\nimport useI18n from 'hooks/useI18n'\r\nimport PageHeader from 'components/PageHeader'\r\nimport AppBody from '../AppBody'\r\n\r\nexport default function Pool() {\r\n  const theme = useContext(ThemeContext)\r\n  const { account } = useActiveWeb3React()\r\n  const TranslateString = useI18n()\r\n\r\n  // fetch the user's balances of all tracked V2 LP tokens\r\n  const trackedTokenPairs = useTrackedTokenPairs()\r\n  const tokenPairsWithLiquidityTokens = useMemo(\r\n    () => trackedTokenPairs.map((tokens) => ({ liquidityToken: toV2LiquidityToken(tokens), tokens })),\r\n    [trackedTokenPairs]\r\n  )\r\n  const liquidityTokens = useMemo(() => tokenPairsWithLiquidityTokens.map((tpwlt) => tpwlt.liquidityToken), [\r\n    tokenPairsWithLiquidityTokens,\r\n  ])\r\n  const [v2PairsBalances, fetchingV2PairBalances] = useTokenBalancesWithLoadingIndicator(\r\n    account ?? undefined,\r\n    liquidityTokens\r\n  )\r\n\r\n  // fetch the reserves for all V2 pools in which the user has a balance\r\n  const liquidityTokensWithBalances = useMemo(\r\n    () =>\r\n      tokenPairsWithLiquidityTokens.filter(({ liquidityToken }) =>\r\n        v2PairsBalances[liquidityToken.address]?.greaterThan('0')\r\n      ),\r\n    [tokenPairsWithLiquidityTokens, v2PairsBalances]\r\n  )\r\n\r\n  const v2Pairs = usePairs(liquidityTokensWithBalances.map(({ tokens }) => tokens))\r\n  const v2IsLoading =\r\n    fetchingV2PairBalances || v2Pairs?.length < liquidityTokensWithBalances.length || v2Pairs?.some((V2Pair) => !V2Pair)\r\n\r\n  const allV2PairsWithLiquidity = v2Pairs.map(([, pair]) => pair).filter((v2Pair): v2Pair is Pair => Boolean(v2Pair))\r\n\r\n  return (\r\n    <Container>\r\n      <CardNav activeIndex={1} />\r\n      <AppBody>\r\n        <PageHeader\r\n          title={TranslateString(262, 'Liquidity')}\r\n          description={TranslateString(1168, 'Add liquidity to receive LP tokens')}\r\n        >\r\n          <Button id=\"join-pool-button\" as={Link} to=\"/add/BNB\">\r\n            {TranslateString(168, 'Add Liquidity')}\r\n          </Button>\r\n        </PageHeader>\r\n        <AutoColumn gap=\"lg\" justify=\"center\">\r\n          <CardBody>\r\n            <AutoColumn gap=\"12px\" style={{ width: '100%' }}>\r\n              <RowBetween padding=\"0 8px\">\r\n                <Text color={theme.colors.text}>{TranslateString(107, 'Your Liquidity')}</Text>\r\n                <Question\r\n                  text={TranslateString(\r\n                    1170,\r\n                    'When you add liquidity, you are given pool tokens that represent your share. If you don’t see a pool you joined in this list, try importing a pool below.'\r\n                  )}\r\n                />\r\n              </RowBetween>\r\n\r\n              {!account ? (\r\n                <LightCard padding=\"40px\">\r\n                  <Text color=\"textDisabled\" textAlign=\"center\">\r\n                    {TranslateString(156, 'Connect to a wallet to view your liquidity.')}\r\n                  </Text>\r\n                </LightCard>\r\n              ) : v2IsLoading ? (\r\n                <LightCard padding=\"40px\">\r\n                  <Text color=\"textDisabled\" textAlign=\"center\">\r\n                    <Dots>Loading</Dots>\r\n                  </Text>\r\n                </LightCard>\r\n              ) : allV2PairsWithLiquidity?.length > 0 ? (\r\n                <>\r\n                  {allV2PairsWithLiquidity.map((v2Pair) => (\r\n                    <FullPositionCard key={v2Pair.liquidityToken.address} pair={v2Pair} />\r\n                  ))}\r\n                </>\r\n              ) : (\r\n                <LightCard padding=\"40px\">\r\n                  <Text color=\"textDisabled\" textAlign=\"center\">\r\n                    {TranslateString(104, 'No liquidity found.')}\r\n                  </Text>\r\n                </LightCard>\r\n              )}\r\n\r\n              <div>\r\n                <Text fontSize=\"14px\" style={{ padding: '.5rem 0 .5rem 0' }}>\r\n                  {TranslateString(106, \"Don't see a pool you joined?\")}{' '}\r\n                  <StyledInternalLink id=\"import-pool-link\" to=\"/find\">\r\n                    {TranslateString(108, 'Import it.')}\r\n                  </StyledInternalLink>\r\n                </Text>\r\n                <Text fontSize=\"14px\" style={{ padding: '.5rem 0 .5rem 0' }}>\r\n                  {TranslateString(1172, 'Or, if you staked your LP tokens in a farm, unstake them to see them here.')}\r\n                </Text>\r\n              </div>\r\n            </AutoColumn>\r\n          </CardBody>\r\n        </AutoColumn>\r\n      </AppBody>\r\n    </Container>\r\n  )\r\n}\r\n","import { createAction } from '@reduxjs/toolkit'\r\n\r\nexport enum Field {\r\n  LIQUIDITY_PERCENT = 'LIQUIDITY_PERCENT',\r\n  LIQUIDITY = 'LIQUIDITY',\r\n  CURRENCY_A = 'CURRENCY_A',\r\n  CURRENCY_B = 'CURRENCY_B'\r\n}\r\n\r\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('burn/typeInputBurn')\r\n","import React, { useCallback } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledRangeInput = styled.input<{ size: number }>`\r\n  -webkit-appearance: none; /* Hides the slider so that custom slider can be made */\r\n  width: 100%; /* Specific width is required for Firefox. */\r\n  background: transparent; /* Otherwise white in Chrome */\r\n  cursor: pointer;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  &::-moz-focus-outer {\r\n    border: 0;\r\n  }\r\n\r\n  &::-webkit-slider-thumb {\r\n    -webkit-appearance: none;\r\n    height: ${({ size }) => size}px;\r\n    width: ${({ size }) => size}px;\r\n    background-color: #565a69;\r\n    border-radius: 100%;\r\n    border: none;\r\n    transform: translateY(-50%);\r\n    color: ${({ theme }) => theme.colors.invertedContrast};\r\n\r\n    &:hover,\r\n    &:focus {\r\n      box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.1), 0px 4px 8px rgba(0, 0, 0, 0.08), 0px 16px 24px rgba(0, 0, 0, 0.06),\r\n        0px 24px 32px rgba(0, 0, 0, 0.04);\r\n    }\r\n  }\r\n\r\n  &::-moz-range-thumb {\r\n    height: ${({ size }) => size}px;\r\n    width: ${({ size }) => size}px;\r\n    background-color: #565a69;\r\n    border-radius: 100%;\r\n    border: none;\r\n    color: ${({ theme }) => theme.colors.invertedContrast};\r\n\r\n    &:hover,\r\n    &:focus {\r\n      box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.1), 0px 4px 8px rgba(0, 0, 0, 0.08), 0px 16px 24px rgba(0, 0, 0, 0.06),\r\n        0px 24px 32px rgba(0, 0, 0, 0.04);\r\n    }\r\n  }\r\n\r\n  &::-ms-thumb {\r\n    height: ${({ size }) => size}px;\r\n    width: ${({ size }) => size}px;\r\n    background-color: #565a69;\r\n    border-radius: 100%;\r\n    color: ${({ theme }) => theme.colors.invertedContrast};\r\n\r\n    &:hover,\r\n    &:focus {\r\n      box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.1), 0px 4px 8px rgba(0, 0, 0, 0.08), 0px 16px 24px rgba(0, 0, 0, 0.06),\r\n        0px 24px 32px rgba(0, 0, 0, 0.04);\r\n    }\r\n  }\r\n\r\n  &::-webkit-slider-runnable-track {\r\n    background: linear-gradient(\r\n      90deg,\r\n      ${({ theme }) => theme.colors.primaryDark},\r\n      ${({ theme }) => theme.colors.tertiary}\r\n    );\r\n    height: 2px;\r\n  }\r\n\r\n  &::-moz-range-track {\r\n    background: linear-gradient(\r\n      90deg,\r\n      ${({ theme }) => theme.colors.primaryDark},\r\n      ${({ theme }) => theme.colors.tertiary}\r\n    );\r\n    height: 2px;\r\n  }\r\n\r\n  &::-ms-track {\r\n    width: 100%;\r\n    border-color: transparent;\r\n    color: transparent;\r\n\r\n    background: ${({ theme }) => theme.colors.primaryDark};\r\n    height: 2px;\r\n  }\r\n  &::-ms-fill-lower {\r\n    background: ${({ theme }) => theme.colors.primaryDark};\r\n  }\r\n  &::-ms-fill-upper {\r\n    background: ${({ theme }) => theme.colors.tertiary};\r\n  }\r\n`\r\n\r\ninterface InputSliderProps {\r\n  value: number\r\n  onChange: (value: number) => void\r\n  step?: number\r\n  min?: number\r\n  max?: number\r\n  size?: number\r\n}\r\n\r\nexport default function Slider({ value, onChange, min = 0, step = 1, max = 100, size = 28 }: InputSliderProps) {\r\n  const changeCallback = useCallback(\r\n    e => {\r\n      onChange(parseInt(e.target.value))\r\n    },\r\n    [onChange]\r\n  )\r\n\r\n  return (\r\n    <StyledRangeInput\r\n      size={size}\r\n      type=\"range\"\r\n      value={value}\r\n      style={{ width: '90%', marginLeft: 15, marginRight: 15, padding: '15px 0' }}\r\n      onChange={changeCallback}\r\n      aria-labelledby=\"input slider\"\r\n      step={step}\r\n      min={min}\r\n      max={max}\r\n    />\r\n  )\r\n}\r\n","import { Currency, CurrencyAmount, JSBI, Pair, Percent, TokenAmount } from '@pancakeswap-libs/sdk'\r\nimport { useCallback } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { usePair } from '../../data/Reserves'\r\nimport { useTotalSupply } from '../../data/TotalSupply'\r\n\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\r\nimport { AppDispatch, AppState } from '../index'\r\nimport { tryParseAmount } from '../swap/hooks'\r\nimport { useTokenBalances } from '../wallet/hooks'\r\nimport { Field, typeInput } from './actions'\r\n\r\nexport function useBurnState(): AppState['burn'] {\r\n  return useSelector<AppState, AppState['burn']>(state => state.burn)\r\n}\r\n\r\nexport function useDerivedBurnInfo(\r\n  currencyA: Currency | undefined,\r\n  currencyB: Currency | undefined\r\n): {\r\n  pair?: Pair | null\r\n  parsedAmounts: {\r\n    [Field.LIQUIDITY_PERCENT]: Percent\r\n    [Field.LIQUIDITY]?: TokenAmount\r\n    [Field.CURRENCY_A]?: CurrencyAmount\r\n    [Field.CURRENCY_B]?: CurrencyAmount\r\n  }\r\n  error?: string\r\n} {\r\n  const { account, chainId } = useActiveWeb3React()\r\n\r\n  const { independentField, typedValue } = useBurnState()\r\n\r\n  // pair + totalsupply\r\n  const [, pair] = usePair(currencyA, currencyB)\r\n\r\n  // balances\r\n  const relevantTokenBalances = useTokenBalances(account ?? undefined, [pair?.liquidityToken])\r\n  const userLiquidity: undefined | TokenAmount = relevantTokenBalances?.[pair?.liquidityToken?.address ?? '']\r\n\r\n  const [tokenA, tokenB] = [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\r\n  const tokens = {\r\n    [Field.CURRENCY_A]: tokenA,\r\n    [Field.CURRENCY_B]: tokenB,\r\n    [Field.LIQUIDITY]: pair?.liquidityToken\r\n  }\r\n\r\n  // liquidity values\r\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\r\n  const liquidityValueA =\r\n    pair &&\r\n    totalSupply &&\r\n    userLiquidity &&\r\n    tokenA &&\r\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\r\n    JSBI.greaterThanOrEqual(totalSupply.raw, userLiquidity.raw)\r\n      ? new TokenAmount(tokenA, pair.getLiquidityValue(tokenA, totalSupply, userLiquidity, false).raw)\r\n      : undefined\r\n  const liquidityValueB =\r\n    pair &&\r\n    totalSupply &&\r\n    userLiquidity &&\r\n    tokenB &&\r\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\r\n    JSBI.greaterThanOrEqual(totalSupply.raw, userLiquidity.raw)\r\n      ? new TokenAmount(tokenB, pair.getLiquidityValue(tokenB, totalSupply, userLiquidity, false).raw)\r\n      : undefined\r\n  const liquidityValues: { [Field.CURRENCY_A]?: TokenAmount; [Field.CURRENCY_B]?: TokenAmount } = {\r\n    [Field.CURRENCY_A]: liquidityValueA,\r\n    [Field.CURRENCY_B]: liquidityValueB\r\n  }\r\n\r\n  let percentToRemove: Percent = new Percent('0', '100')\r\n  // user specified a %\r\n  if (independentField === Field.LIQUIDITY_PERCENT) {\r\n    percentToRemove = new Percent(typedValue, '100')\r\n  }\r\n  // user specified a specific amount of liquidity tokens\r\n  else if (independentField === Field.LIQUIDITY) {\r\n    if (pair?.liquidityToken) {\r\n      const independentAmount = tryParseAmount(typedValue, pair.liquidityToken)\r\n      if (independentAmount && userLiquidity && !independentAmount.greaterThan(userLiquidity)) {\r\n        percentToRemove = new Percent(independentAmount.raw, userLiquidity.raw)\r\n      }\r\n    }\r\n  }\r\n  // user specified a specific amount of token a or b\r\n  else if (tokens[independentField]) {\r\n      const independentAmount = tryParseAmount(typedValue, tokens[independentField])\r\n      const liquidityValue = liquidityValues[independentField]\r\n      if (independentAmount && liquidityValue && !independentAmount.greaterThan(liquidityValue)) {\r\n        percentToRemove = new Percent(independentAmount.raw, liquidityValue.raw)\r\n      }\r\n    }\r\n\r\n  const parsedAmounts: {\r\n    [Field.LIQUIDITY_PERCENT]: Percent\r\n    [Field.LIQUIDITY]?: TokenAmount\r\n    [Field.CURRENCY_A]?: TokenAmount\r\n    [Field.CURRENCY_B]?: TokenAmount\r\n  } = {\r\n    [Field.LIQUIDITY_PERCENT]: percentToRemove,\r\n    [Field.LIQUIDITY]:\r\n      userLiquidity && percentToRemove && percentToRemove.greaterThan('0')\r\n        ? new TokenAmount(userLiquidity.token, percentToRemove.multiply(userLiquidity.raw).quotient)\r\n        : undefined,\r\n    [Field.CURRENCY_A]:\r\n      tokenA && percentToRemove && percentToRemove.greaterThan('0') && liquidityValueA\r\n        ? new TokenAmount(tokenA, percentToRemove.multiply(liquidityValueA.raw).quotient)\r\n        : undefined,\r\n    [Field.CURRENCY_B]:\r\n      tokenB && percentToRemove && percentToRemove.greaterThan('0') && liquidityValueB\r\n        ? new TokenAmount(tokenB, percentToRemove.multiply(liquidityValueB.raw).quotient)\r\n        : undefined\r\n  }\r\n\r\n  let error: string | undefined\r\n  if (!account) {\r\n    error = 'Connect Wallet'\r\n  }\r\n\r\n  if (!parsedAmounts[Field.LIQUIDITY] || !parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\r\n    error = error ?? 'Enter an amount'\r\n  }\r\n\r\n  return { pair, parsedAmounts, error }\r\n}\r\n\r\nexport function useBurnActionHandlers(): {\r\n  onUserInput: (field: Field, typedValue: string) => void\r\n} {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  const onUserInput = useCallback(\r\n    (field: Field, typedValue: string) => {\r\n      dispatch(typeInput({ field, typedValue }))\r\n    },\r\n    [dispatch]\r\n  )\r\n\r\n  return {\r\n    onUserInput\r\n  }\r\n}\r\n","import React, { useCallback, useContext, useMemo, useState } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\nimport { splitSignature } from '@ethersproject/bytes'\r\nimport { Contract } from '@ethersproject/contracts'\r\nimport { TransactionResponse } from '@ethersproject/providers'\r\nimport { Currency, currencyEquals, ETHER, Percent, WETH } from '@pancakeswap-libs/sdk'\r\nimport { Button, Flex, Text } from '@pancakeswap-libs/uikit'\r\nimport { ArrowDown, Plus } from 'react-feather'\r\nimport { RouteComponentProps } from 'react-router'\r\n\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { AutoColumn, ColumnCenter } from '../../components/Column'\r\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\r\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\r\nimport DoubleCurrencyLogo from '../../components/DoubleLogo'\r\nimport { AddRemoveTabs } from '../../components/NavigationTabs'\r\nimport { MinimalPositionCard } from '../../components/PositionCard'\r\nimport { RowBetween, RowFixed } from '../../components/Row'\r\nimport Container from '../../components/Container'\r\n\r\nimport Slider from '../../components/Slider'\r\nimport CurrencyLogo from '../../components/CurrencyLogo'\r\nimport { ROUTER_ADDRESS } from '../../constants'\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport { useCurrency } from '../../hooks/Tokens'\r\nimport { usePairContract } from '../../hooks/useContract'\r\n\r\nimport { useTransactionAdder } from '../../state/transactions/hooks'\r\nimport { StyledInternalLink } from '../../components/Shared'\r\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from '../../utils'\r\nimport { currencyId } from '../../utils/currencyId'\r\nimport useDebouncedChangeHandler from '../../utils/useDebouncedChangeHandler'\r\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\r\nimport AppBody from '../AppBody'\r\nimport { ClickableText, Wrapper } from '../Pool/styleds'\r\nimport { useApproveCallback, ApprovalState } from '../../hooks/useApproveCallback'\r\nimport { Dots } from '../../components/swap/styleds'\r\nimport { useBurnActionHandlers, useDerivedBurnInfo, useBurnState } from '../../state/burn/hooks'\r\n\r\nimport { Field } from '../../state/burn/actions'\r\nimport { useUserDeadline, useUserSlippageTolerance } from '../../state/user/hooks'\r\n\r\nconst OutlineCard = styled.div`\r\n  border: 1px solid ${({ theme }) => theme.colors.borderColor};\r\n  border-radius: 16px;\r\n  padding: 24px;\r\n`\r\n\r\nconst Body = styled.div`\r\n  padding-left: 24px;\r\n  padding-right: 24px;\r\n`\r\n\r\nexport default function RemoveLiquidity({\r\n  history,\r\n  match: {\r\n    params: { currencyIdA, currencyIdB },\r\n  },\r\n}: RouteComponentProps<{ currencyIdA: string; currencyIdB: string }>) {\r\n  const [currencyA, currencyB] = [useCurrency(currencyIdA) ?? undefined, useCurrency(currencyIdB) ?? undefined]\r\n  const { account, chainId, library } = useActiveWeb3React()\r\n  const TranslateString = useI18n()\r\n  const [tokenA, tokenB] = useMemo(() => [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)], [\r\n    currencyA,\r\n    currencyB,\r\n    chainId,\r\n  ])\r\n\r\n  const theme = useContext(ThemeContext)\r\n\r\n  // burn state\r\n  const { independentField, typedValue } = useBurnState()\r\n  const { pair, parsedAmounts, error } = useDerivedBurnInfo(currencyA ?? undefined, currencyB ?? undefined)\r\n  const { onUserInput: _onUserInput } = useBurnActionHandlers()\r\n  const isValid = !error\r\n\r\n  // modal and loading\r\n  const [showConfirm, setShowConfirm] = useState<boolean>(false)\r\n  const [showDetailed, setShowDetailed] = useState<boolean>(false)\r\n  const [attemptingTxn, setAttemptingTxn] = useState(false) // clicked confirm\r\n\r\n  // txn values\r\n  const [txHash, setTxHash] = useState<string>('')\r\n  const [deadline] = useUserDeadline()\r\n  const [allowedSlippage] = useUserSlippageTolerance()\r\n\r\n  const formattedAmounts = {\r\n    [Field.LIQUIDITY_PERCENT]: parsedAmounts[Field.LIQUIDITY_PERCENT].equalTo('0')\r\n      ? '0'\r\n      : parsedAmounts[Field.LIQUIDITY_PERCENT].lessThan(new Percent('1', '100'))\r\n      ? '<1'\r\n      : parsedAmounts[Field.LIQUIDITY_PERCENT].toFixed(0),\r\n    [Field.LIQUIDITY]:\r\n      independentField === Field.LIQUIDITY ? typedValue : parsedAmounts[Field.LIQUIDITY]?.toSignificant(6) ?? '',\r\n    [Field.CURRENCY_A]:\r\n      independentField === Field.CURRENCY_A ? typedValue : parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\r\n    [Field.CURRENCY_B]:\r\n      independentField === Field.CURRENCY_B ? typedValue : parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\r\n  }\r\n\r\n  const atMaxAmount = parsedAmounts[Field.LIQUIDITY_PERCENT]?.equalTo(new Percent('1'))\r\n\r\n  // pair contract\r\n  const pairContract: Contract | null = usePairContract(pair?.liquidityToken?.address)\r\n\r\n  // allowance handling\r\n  const [signatureData, setSignatureData] = useState<{ v: number; r: string; s: string; deadline: number } | null>(null)\r\n  const [approval, approveCallback] = useApproveCallback(parsedAmounts[Field.LIQUIDITY], ROUTER_ADDRESS)\r\n  async function onAttemptToApprove() {\r\n    if (!pairContract || !pair || !library) throw new Error('missing dependencies')\r\n    const liquidityAmount = parsedAmounts[Field.LIQUIDITY]\r\n    if (!liquidityAmount) throw new Error('missing liquidity amount')\r\n    // try to gather a signature for permission\r\n    const nonce = await pairContract.nonces(account)\r\n\r\n    const deadlineForSignature: number = Math.ceil(Date.now() / 1000) + deadline\r\n\r\n    const EIP712Domain = [\r\n      { name: 'name', type: 'string' },\r\n      { name: 'version', type: 'string' },\r\n      { name: 'chainId', type: 'uint256' },\r\n      { name: 'verifyingContract', type: 'address' },\r\n    ]\r\n    const domain = {\r\n      name: 'Pancake LPs',\r\n      version: '1',\r\n      chainId,\r\n      verifyingContract: pair.liquidityToken.address,\r\n    }\r\n    const Permit = [\r\n      { name: 'owner', type: 'address' },\r\n      { name: 'spender', type: 'address' },\r\n      { name: 'value', type: 'uint256' },\r\n      { name: 'nonce', type: 'uint256' },\r\n      { name: 'deadline', type: 'uint256' },\r\n    ]\r\n    const message = {\r\n      owner: account,\r\n      spender: ROUTER_ADDRESS,\r\n      value: liquidityAmount.raw.toString(),\r\n      nonce: nonce.toHexString(),\r\n      deadline: deadlineForSignature,\r\n    }\r\n    const data = JSON.stringify({\r\n      types: {\r\n        EIP712Domain,\r\n        Permit,\r\n      },\r\n      domain,\r\n      primaryType: 'Permit',\r\n      message,\r\n    })\r\n\r\n    library\r\n      .send('eth_signTypedData_v4', [account, data])\r\n      .then(splitSignature)\r\n      .then((signature) => {\r\n        setSignatureData({\r\n          v: signature.v,\r\n          r: signature.r,\r\n          s: signature.s,\r\n          deadline: deadlineForSignature,\r\n        })\r\n      })\r\n      .catch((e) => {\r\n        // for all errors other than 4001 (EIP-1193 user rejected request), fall back to manual approve\r\n        if (e?.code !== 4001) {\r\n          approveCallback()\r\n        }\r\n      })\r\n  }\r\n\r\n  // wrapped onUserInput to clear signatures\r\n  const onUserInput = useCallback(\r\n    (field: Field, val: string) => {\r\n      setSignatureData(null)\r\n      return _onUserInput(field, val)\r\n    },\r\n    [_onUserInput]\r\n  )\r\n\r\n  const onLiquidityInput = useCallback((val: string): void => onUserInput(Field.LIQUIDITY, val), [onUserInput])\r\n  const onCurrencyAInput = useCallback((val: string): void => onUserInput(Field.CURRENCY_A, val), [onUserInput])\r\n  const onCurrencyBInput = useCallback((val: string): void => onUserInput(Field.CURRENCY_B, val), [onUserInput])\r\n\r\n  // tx sending\r\n  const addTransaction = useTransactionAdder()\r\n  async function onRemove() {\r\n    if (!chainId || !library || !account) throw new Error('missing dependencies')\r\n    const { [Field.CURRENCY_A]: currencyAmountA, [Field.CURRENCY_B]: currencyAmountB } = parsedAmounts\r\n    if (!currencyAmountA || !currencyAmountB) {\r\n      throw new Error('missing currency amounts')\r\n    }\r\n    const router = getRouterContract(chainId, library, account)\r\n\r\n    const amountsMin = {\r\n      [Field.CURRENCY_A]: calculateSlippageAmount(currencyAmountA, allowedSlippage)[0],\r\n      [Field.CURRENCY_B]: calculateSlippageAmount(currencyAmountB, allowedSlippage)[0],\r\n    }\r\n\r\n    if (!currencyA || !currencyB) throw new Error('missing tokens')\r\n    const liquidityAmount = parsedAmounts[Field.LIQUIDITY]\r\n    if (!liquidityAmount) throw new Error('missing liquidity amount')\r\n\r\n    const currencyBIsETH = currencyB === ETHER\r\n    const oneCurrencyIsETH = currencyA === ETHER || currencyBIsETH\r\n    const deadlineFromNow = Math.ceil(Date.now() / 1000) + deadline\r\n\r\n    if (!tokenA || !tokenB) throw new Error('could not wrap')\r\n\r\n    let methodNames: string[]\r\n    let args: Array<string | string[] | number | boolean>\r\n    // we have approval, use normal remove liquidity\r\n    if (approval === ApprovalState.APPROVED) {\r\n      // removeLiquidityETH\r\n      if (oneCurrencyIsETH) {\r\n        methodNames = ['removeLiquidityETH', 'removeLiquidityETHSupportingFeeOnTransferTokens']\r\n        args = [\r\n          currencyBIsETH ? tokenA.address : tokenB.address,\r\n          liquidityAmount.raw.toString(),\r\n          amountsMin[currencyBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(),\r\n          amountsMin[currencyBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(),\r\n          account,\r\n          deadlineFromNow,\r\n        ]\r\n      }\r\n      // removeLiquidity\r\n      else {\r\n        methodNames = ['removeLiquidity']\r\n        args = [\r\n          tokenA.address,\r\n          tokenB.address,\r\n          liquidityAmount.raw.toString(),\r\n          amountsMin[Field.CURRENCY_A].toString(),\r\n          amountsMin[Field.CURRENCY_B].toString(),\r\n          account,\r\n          deadlineFromNow,\r\n        ]\r\n      }\r\n    }\r\n    // we have a signataure, use permit versions of remove liquidity\r\n    else if (signatureData !== null) {\r\n      // removeLiquidityETHWithPermit\r\n      if (oneCurrencyIsETH) {\r\n        methodNames = ['removeLiquidityETHWithPermit', 'removeLiquidityETHWithPermitSupportingFeeOnTransferTokens']\r\n        args = [\r\n          currencyBIsETH ? tokenA.address : tokenB.address,\r\n          liquidityAmount.raw.toString(),\r\n          amountsMin[currencyBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(),\r\n          amountsMin[currencyBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(),\r\n          account,\r\n          signatureData.deadline,\r\n          false,\r\n          signatureData.v,\r\n          signatureData.r,\r\n          signatureData.s,\r\n        ]\r\n      }\r\n      // removeLiquidityETHWithPermit\r\n      else {\r\n        methodNames = ['removeLiquidityWithPermit']\r\n        args = [\r\n          tokenA.address,\r\n          tokenB.address,\r\n          liquidityAmount.raw.toString(),\r\n          amountsMin[Field.CURRENCY_A].toString(),\r\n          amountsMin[Field.CURRENCY_B].toString(),\r\n          account,\r\n          signatureData.deadline,\r\n          false,\r\n          signatureData.v,\r\n          signatureData.r,\r\n          signatureData.s,\r\n        ]\r\n      }\r\n    } else {\r\n      throw new Error('Attempting to confirm without approval or a signature. Please contact support.')\r\n    }\r\n    const safeGasEstimates: (BigNumber | undefined)[] = await Promise.all(\r\n      methodNames.map((methodName, index) =>\r\n        router.estimateGas[methodName](...args)\r\n          .then(calculateGasMargin)\r\n          .catch((e) => {\r\n            console.error(`estimateGas failed`, index, methodName, args, e)\r\n            return undefined\r\n          })\r\n      )\r\n    )\r\n\r\n    const indexOfSuccessfulEstimation = safeGasEstimates.findIndex((safeGasEstimate) =>\r\n      BigNumber.isBigNumber(safeGasEstimate)\r\n    )\r\n\r\n    // all estimations failed...\r\n    if (indexOfSuccessfulEstimation === -1) {\r\n      console.error('This transaction would fail. Please contact support.')\r\n    } else {\r\n      const methodName = methodNames[indexOfSuccessfulEstimation]\r\n      const safeGasEstimate = safeGasEstimates[indexOfSuccessfulEstimation]\r\n\r\n      setAttemptingTxn(true)\r\n      await router[methodName](...args, {\r\n        gasLimit: safeGasEstimate,\r\n      })\r\n        .then((response: TransactionResponse) => {\r\n          setAttemptingTxn(false)\r\n\r\n          addTransaction(response, {\r\n            summary: `Remove ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\r\n              currencyA?.symbol\r\n            } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencyB?.symbol}`,\r\n          })\r\n\r\n          setTxHash(response.hash)\r\n        })\r\n        .catch((e: Error) => {\r\n          setAttemptingTxn(false)\r\n          // we only care if the error is something _other_ than the user rejected the tx\r\n          console.error(e)\r\n        })\r\n    }\r\n  }\r\n\r\n  function modalHeader() {\r\n    return (\r\n      <AutoColumn gap=\"md\" style={{ marginTop: '20px' }}>\r\n        <RowBetween align=\"flex-end\">\r\n          <Text fontSize=\"24px\">{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</Text>\r\n          <RowFixed gap=\"4px\">\r\n            <CurrencyLogo currency={currencyA} size=\"24px\" />\r\n            <Text fontSize=\"24px\" style={{ marginLeft: '10px' }}>\r\n              {currencyA?.symbol}\r\n            </Text>\r\n          </RowFixed>\r\n        </RowBetween>\r\n        <RowFixed>\r\n          <Plus size=\"16\" color={theme.colors.textSubtle} />\r\n        </RowFixed>\r\n        <RowBetween align=\"flex-end\">\r\n          <Text fontSize=\"24px\">{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</Text>\r\n          <RowFixed gap=\"4px\">\r\n            <CurrencyLogo currency={currencyB} size=\"24px\" />\r\n            <Text fontSize=\"24px\" style={{ marginLeft: '10px' }}>\r\n              {currencyB?.symbol}\r\n            </Text>\r\n          </RowFixed>\r\n        </RowBetween>\r\n\r\n        <Text small color=\"textSubtle\" textAlign=\"left\" padding=\"12px 0 0 0\" style={{ fontStyle: 'italic' }}>\r\n          {`Output is estimated. If the price changes by more than ${\r\n            allowedSlippage / 100\r\n          }% your transaction will revert.`}\r\n        </Text>\r\n      </AutoColumn>\r\n    )\r\n  }\r\n\r\n  function modalBottom() {\r\n    return (\r\n      <>\r\n        <RowBetween>\r\n          <Text color=\"textSubtle\">{`LP ${currencyA?.symbol}/${currencyB?.symbol}`} Burned</Text>\r\n          <RowFixed>\r\n            <DoubleCurrencyLogo currency0={currencyA} currency1={currencyB} margin />\r\n            <Text>{parsedAmounts[Field.LIQUIDITY]?.toSignificant(6)}</Text>\r\n          </RowFixed>\r\n        </RowBetween>\r\n        {pair && (\r\n          <>\r\n            <RowBetween>\r\n              <Text color=\"textSubtle\">{TranslateString(1182, 'Price')}</Text>\r\n              <Text>\r\n                1 {currencyA?.symbol} = {tokenA ? pair.priceOf(tokenA).toSignificant(6) : '-'} {currencyB?.symbol}\r\n              </Text>\r\n            </RowBetween>\r\n            <RowBetween>\r\n              <div />\r\n              <Text>\r\n                1 {currencyB?.symbol} = {tokenB ? pair.priceOf(tokenB).toSignificant(6) : '-'} {currencyA?.symbol}\r\n              </Text>\r\n            </RowBetween>\r\n          </>\r\n        )}\r\n        <Button disabled={!(approval === ApprovalState.APPROVED || signatureData !== null)} onClick={onRemove}>\r\n          {TranslateString(1136, 'Confirm')}\r\n        </Button>\r\n      </>\r\n    )\r\n  }\r\n\r\n  const pendingText = `Removing ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)} ${\r\n    currencyA?.symbol\r\n  } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)} ${currencyB?.symbol}`\r\n\r\n  const liquidityPercentChangeCallback = useCallback(\r\n    (value: number) => {\r\n      onUserInput(Field.LIQUIDITY_PERCENT, value.toString())\r\n    },\r\n    [onUserInput]\r\n  )\r\n\r\n  const oneCurrencyIsETH = currencyA === ETHER || currencyB === ETHER\r\n  const oneCurrencyIsWETH = Boolean(\r\n    chainId &&\r\n      ((currencyA && currencyEquals(WETH[chainId], currencyA)) ||\r\n        (currencyB && currencyEquals(WETH[chainId], currencyB)))\r\n  )\r\n\r\n  const handleSelectCurrencyA = useCallback(\r\n    (currency: Currency) => {\r\n      if (currencyIdB && currencyId(currency) === currencyIdB) {\r\n        history.push(`/remove/${currencyId(currency)}/${currencyIdA}`)\r\n      } else {\r\n        history.push(`/remove/${currencyId(currency)}/${currencyIdB}`)\r\n      }\r\n    },\r\n    [currencyIdA, currencyIdB, history]\r\n  )\r\n  const handleSelectCurrencyB = useCallback(\r\n    (currency: Currency) => {\r\n      if (currencyIdA && currencyId(currency) === currencyIdA) {\r\n        history.push(`/remove/${currencyIdB}/${currencyId(currency)}`)\r\n      } else {\r\n        history.push(`/remove/${currencyIdA}/${currencyId(currency)}`)\r\n      }\r\n    },\r\n    [currencyIdA, currencyIdB, history]\r\n  )\r\n\r\n  const handleDismissConfirmation = useCallback(() => {\r\n    setShowConfirm(false)\r\n    setSignatureData(null) // important that we clear signature data to avoid bad sigs\r\n    // if there was a tx hash, we want to clear the input\r\n    if (txHash) {\r\n      onUserInput(Field.LIQUIDITY_PERCENT, '0')\r\n    }\r\n    setTxHash('')\r\n  }, [onUserInput, txHash])\r\n\r\n  const [innerLiquidityPercentage, setInnerLiquidityPercentage] = useDebouncedChangeHandler(\r\n    Number.parseInt(parsedAmounts[Field.LIQUIDITY_PERCENT].toFixed(0)),\r\n    liquidityPercentChangeCallback\r\n  )\r\n\r\n  return (\r\n    <Container>\r\n      <AppBody>\r\n        <AddRemoveTabs adding={false} />\r\n        <Wrapper>\r\n          <TransactionConfirmationModal\r\n            isOpen={showConfirm}\r\n            onDismiss={handleDismissConfirmation}\r\n            attemptingTxn={attemptingTxn}\r\n            hash={txHash || ''}\r\n            content={() => (\r\n              <ConfirmationModalContent\r\n                title={TranslateString(1156, 'You will receive')}\r\n                onDismiss={handleDismissConfirmation}\r\n                topContent={modalHeader}\r\n                bottomContent={modalBottom}\r\n              />\r\n            )}\r\n            pendingText={pendingText}\r\n          />\r\n          <AutoColumn gap=\"md\">\r\n            <Body>\r\n              <OutlineCard>\r\n                <AutoColumn>\r\n                  <RowBetween>\r\n                    <Text>Amount</Text>\r\n                    <ClickableText\r\n                      onClick={() => {\r\n                        setShowDetailed(!showDetailed)\r\n                      }}\r\n                    >\r\n                      {showDetailed ? TranslateString(1184, 'Simple') : TranslateString(1186, 'Detailed')}\r\n                    </ClickableText>\r\n                  </RowBetween>\r\n                  <Flex justifyContent=\"start\">\r\n                    <Text fontSize=\"64px\">{formattedAmounts[Field.LIQUIDITY_PERCENT]}%</Text>\r\n                  </Flex>\r\n                  {!showDetailed && (\r\n                    <>\r\n                      <Flex mb=\"8px\">\r\n                        <Slider value={innerLiquidityPercentage} onChange={setInnerLiquidityPercentage} />\r\n                      </Flex>\r\n                      <Flex justifyContent=\"space-around\">\r\n                        <Button\r\n                          variant=\"tertiary\"\r\n                          scale=\"sm\"\r\n                          onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '25')}\r\n                        >\r\n                          25%\r\n                        </Button>\r\n                        <Button\r\n                          variant=\"tertiary\"\r\n                          scale=\"sm\"\r\n                          onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '50')}\r\n                        >\r\n                          50%\r\n                        </Button>\r\n                        <Button\r\n                          variant=\"tertiary\"\r\n                          scale=\"sm\"\r\n                          onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '75')}\r\n                        >\r\n                          75%\r\n                        </Button>\r\n                        <Button\r\n                          variant=\"tertiary\"\r\n                          scale=\"sm\"\r\n                          onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '100')}\r\n                        >\r\n                          {TranslateString(166, 'Max')}\r\n                        </Button>\r\n                      </Flex>\r\n                    </>\r\n                  )}\r\n                </AutoColumn>\r\n              </OutlineCard>\r\n            </Body>\r\n            {!showDetailed && (\r\n              <>\r\n                <ColumnCenter>\r\n                  <ArrowDown size=\"16\" color={theme.colors.textSubtle} />\r\n                </ColumnCenter>\r\n                <Body>\r\n                  <OutlineCard>\r\n                    <AutoColumn gap=\"10px\">\r\n                      <RowBetween>\r\n                        <Text fontSize=\"24px\">{formattedAmounts[Field.CURRENCY_A] || '-'}</Text>\r\n                        <RowFixed>\r\n                          <CurrencyLogo currency={currencyA} style={{ marginRight: '12px' }} />\r\n                          <Text fontSize=\"24px\" id=\"remove-liquidity-tokena-symbol\">\r\n                            {currencyA?.symbol}\r\n                          </Text>\r\n                        </RowFixed>\r\n                      </RowBetween>\r\n                      <RowBetween>\r\n                        <Text fontSize=\"24px\">{formattedAmounts[Field.CURRENCY_B] || '-'}</Text>\r\n                        <RowFixed>\r\n                          <CurrencyLogo currency={currencyB} style={{ marginRight: '12px' }} />\r\n                          <Text fontSize=\"24px\" id=\"remove-liquidity-tokenb-symbol\">\r\n                            {currencyB?.symbol}\r\n                          </Text>\r\n                        </RowFixed>\r\n                      </RowBetween>\r\n                      {chainId && (oneCurrencyIsWETH || oneCurrencyIsETH) ? (\r\n                        <RowBetween style={{ justifyContent: 'flex-end' }}>\r\n                          {oneCurrencyIsETH ? (\r\n                            <StyledInternalLink\r\n                              to={`/remove/${currencyA === ETHER ? WETH[chainId].address : currencyIdA}/${\r\n                                currencyB === ETHER ? WETH[chainId].address : currencyIdB\r\n                              }`}\r\n                            >\r\n                              {TranslateString(1188, 'Receive WBNB')}\r\n                            </StyledInternalLink>\r\n                          ) : oneCurrencyIsWETH ? (\r\n                            <StyledInternalLink\r\n                              to={`/remove/${\r\n                                currencyA && currencyEquals(currencyA, WETH[chainId]) ? 'BNB' : currencyIdA\r\n                              }/${currencyB && currencyEquals(currencyB, WETH[chainId]) ? 'BNB' : currencyIdB}`}\r\n                            >\r\n                              {TranslateString(1190, 'Receive BNB')}\r\n                            </StyledInternalLink>\r\n                          ) : null}\r\n                        </RowBetween>\r\n                      ) : null}\r\n                    </AutoColumn>\r\n                  </OutlineCard>\r\n                </Body>\r\n              </>\r\n            )}\r\n            <Body style={{ paddingBottom: '24px' }}>\r\n              {showDetailed && (\r\n                <>\r\n                  <CurrencyInputPanel\r\n                    value={formattedAmounts[Field.LIQUIDITY]}\r\n                    onUserInput={onLiquidityInput}\r\n                    onMax={() => {\r\n                      onUserInput(Field.LIQUIDITY_PERCENT, '100')\r\n                    }}\r\n                    showMaxButton={!atMaxAmount}\r\n                    disableCurrencySelect\r\n                    currency={pair?.liquidityToken}\r\n                    pair={pair}\r\n                    id=\"liquidity-amount\"\r\n                  />\r\n                  <ColumnCenter>\r\n                    <ArrowDown size=\"16\" color={theme.colors.textSubtle} />\r\n                  </ColumnCenter>\r\n                  <CurrencyInputPanel\r\n                    hideBalance\r\n                    value={formattedAmounts[Field.CURRENCY_A]}\r\n                    onUserInput={onCurrencyAInput}\r\n                    onMax={() => onUserInput(Field.LIQUIDITY_PERCENT, '100')}\r\n                    showMaxButton={!atMaxAmount}\r\n                    currency={currencyA}\r\n                    label=\"Output\"\r\n                    onCurrencySelect={handleSelectCurrencyA}\r\n                    id=\"remove-liquidity-tokena\"\r\n                  />\r\n                  <ColumnCenter>\r\n                    <Plus size=\"16\" color={theme.colors.textSubtle} />\r\n                  </ColumnCenter>\r\n                  <CurrencyInputPanel\r\n                    hideBalance\r\n                    value={formattedAmounts[Field.CURRENCY_B]}\r\n                    onUserInput={onCurrencyBInput}\r\n                    onMax={() => onUserInput(Field.LIQUIDITY_PERCENT, '100')}\r\n                    showMaxButton={!atMaxAmount}\r\n                    currency={currencyB}\r\n                    label=\"Output\"\r\n                    onCurrencySelect={handleSelectCurrencyB}\r\n                    id=\"remove-liquidity-tokenb\"\r\n                  />\r\n                </>\r\n              )}\r\n              {pair && (\r\n                <div style={{ padding: '24px' }}>\r\n                  <Flex justifyContent=\"space-between\" mb=\"8px\">\r\n                    Price:\r\n                    <div>\r\n                      1 {currencyA?.symbol} = {tokenA ? pair.priceOf(tokenA).toSignificant(6) : '-'} {currencyB?.symbol}\r\n                    </div>\r\n                  </Flex>\r\n                  <Flex justifyContent=\"space-between\">\r\n                    <div />\r\n                    <div>\r\n                      1 {currencyB?.symbol} = {tokenB ? pair.priceOf(tokenB).toSignificant(6) : '-'} {currencyA?.symbol}\r\n                    </div>\r\n                  </Flex>\r\n                </div>\r\n              )}\r\n              <div style={{ position: 'relative' }}>\r\n                {!account ? (\r\n                  <ConnectWalletButton width=\"100%\" />\r\n                ) : (\r\n                  <RowBetween>\r\n                    <Button\r\n                      onClick={onAttemptToApprove}\r\n                      variant={approval === ApprovalState.APPROVED || signatureData !== null ? 'success' : 'primary'}\r\n                      disabled={approval !== ApprovalState.NOT_APPROVED || signatureData !== null}\r\n                      mr=\"8px\"\r\n                    >\r\n                      {approval === ApprovalState.PENDING ? (\r\n                        <Dots>Approving</Dots>\r\n                      ) : approval === ApprovalState.APPROVED || signatureData !== null ? (\r\n                        'Approved'\r\n                      ) : (\r\n                        'Approve'\r\n                      )}\r\n                    </Button>\r\n                    <Button\r\n                      onClick={() => {\r\n                        setShowConfirm(true)\r\n                      }}\r\n                      disabled={!isValid || (signatureData === null && approval !== ApprovalState.APPROVED)}\r\n                      variant={\r\n                        !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\r\n                          ? 'danger'\r\n                          : 'primary'\r\n                      }\r\n                    >\r\n                      {error || 'Remove'}\r\n                    </Button>\r\n                  </RowBetween>\r\n                )}\r\n              </div>\r\n            </Body>\r\n          </AutoColumn>\r\n        </Wrapper>\r\n      </AppBody>\r\n\r\n      {pair ? (\r\n        <AutoColumn style={{ minWidth: '20rem', marginTop: '1rem' }}>\r\n          <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\r\n        </AutoColumn>\r\n      ) : null}\r\n    </Container>\r\n  )\r\n}\r\n","import { useCallback, useEffect, useRef, useState } from 'react'\r\n\r\n/**\r\n * Easy way to debounce the handling of a rapidly changing value, e.g. a changing slider input\r\n * @param value value that is rapidly changing\r\n * @param onChange change handler that should receive the debounced updates to the value\r\n * @param debouncedMs how long we should wait for changes to be applied\r\n */\r\nexport default function useDebouncedChangeHandler<T>(\r\n  value: T,\r\n  onChange: (newValue: T) => void,\r\n  debouncedMs = 100\r\n): [T, (value: T) => void] {\r\n  const [inner, setInner] = useState<T>(() => value)\r\n  const timer = useRef<ReturnType<typeof setTimeout>>()\r\n\r\n  const onChangeInner = useCallback(\r\n    (newValue: T) => {\r\n      setInner(newValue)\r\n      if (timer.current) {\r\n        clearTimeout(timer.current)\r\n      }\r\n      timer.current = setTimeout(() => {\r\n        onChange(newValue)\r\n        timer.current = undefined\r\n      }, debouncedMs)\r\n    },\r\n    [debouncedMs, onChange]\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (timer.current) {\r\n      clearTimeout(timer.current)\r\n      timer.current = undefined\r\n    }\r\n    setInner(value)\r\n  }, [value])\r\n\r\n  return [inner, onChangeInner]\r\n}\r\n","import React, { useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useENS from '../../hooks/useENS'\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport { ExternalLink } from '../Shared'\r\nimport { AutoColumn } from '../Column'\r\nimport { RowBetween } from '../Row'\r\nimport { getBscScanLink } from '../../utils'\r\n\r\nconst InputPanel = styled.div`\r\n  display: flex;\r\n  flex-flow: column nowrap;\r\n  position: relative;\r\n  border-radius: 1.25rem;\r\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\r\n  z-index: 1;\r\n  width: 100%;\r\n`\r\n\r\nconst ContainerRow = styled.div<{ error: boolean }>`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 1.25rem;\r\n  border: 1px solid ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.invertedContrast)};\r\n  transition: border-color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')},\r\n    color 500ms ${({ error }) => (error ? 'step-end' : 'step-start')};\r\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\r\n`\r\n\r\nconst InputContainer = styled.div`\r\n  flex: 1;\r\n  padding: 1rem;\r\n`\r\n\r\nconst Input = styled.input<{ error?: boolean }>`\r\n  font-size: 1.25rem;\r\n  outline: none;\r\n  border: none;\r\n  flex: 1 1 auto;\r\n  width: 0;\r\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\r\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\r\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.primary)};\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  font-weight: 500;\r\n  width: 100%;\r\n  ::placeholder {\r\n    color: ${({ theme }) => theme.colors.textDisabled};\r\n  }\r\n  padding: 0px;\r\n  -webkit-appearance: textfield;\r\n\r\n  ::-webkit-search-decoration {\r\n    -webkit-appearance: none;\r\n  }\r\n\r\n  ::-webkit-outer-spin-button,\r\n  ::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n  }\r\n\r\n  ::placeholder {\r\n    color: ${({ theme }) => theme.colors.textDisabled};\r\n  }\r\n`\r\n\r\nexport default function AddressInputPanel({\r\n  id,\r\n  value,\r\n  onChange,\r\n}: {\r\n  id?: string\r\n  // the typed string value\r\n  value: string\r\n  // triggers whenever the typed value changes\r\n  onChange: (value: string) => void\r\n}) {\r\n  const { chainId } = useActiveWeb3React()\r\n  const TranslateString = useI18n()\r\n  const { address, loading, name } = useENS(value)\r\n\r\n  const handleInput = useCallback(\r\n    (event) => {\r\n      const input = event.target.value\r\n      const withoutSpaces = input.replace(/\\s+/g, '')\r\n      onChange(withoutSpaces)\r\n    },\r\n    [onChange]\r\n  )\r\n\r\n  const error = Boolean(value.length > 0 && !loading && !address)\r\n\r\n  return (\r\n    <InputPanel id={id}>\r\n      <ContainerRow error={error}>\r\n        <InputContainer>\r\n          <AutoColumn gap=\"md\">\r\n            <RowBetween>\r\n              <Text color=\"textSubtle\" fontWeight={500} fontSize=\"14px\">\r\n                {TranslateString(1138, 'Recipient')}\r\n              </Text>\r\n              {address && chainId && (\r\n                <ExternalLink href={getBscScanLink(chainId, name ?? address, 'address')} style={{ fontSize: '14px' }}>\r\n                  {TranslateString(116, '(View on BscScan)')}\r\n                </ExternalLink>\r\n              )}\r\n            </RowBetween>\r\n            <Input\r\n              className=\"recipient-address-input\"\r\n              type=\"text\"\r\n              autoComplete=\"off\"\r\n              autoCorrect=\"off\"\r\n              autoCapitalize=\"off\"\r\n              spellCheck=\"false\"\r\n              placeholder={TranslateString(1140, 'Wallet Address or ENS name')}\r\n              error={error}\r\n              pattern=\"^(0x[a-fA-F0-9]{40})$\"\r\n              onChange={handleInput}\r\n              value={value}\r\n            />\r\n          </AutoColumn>\r\n        </InputContainer>\r\n      </ContainerRow>\r\n    </InputPanel>\r\n  )\r\n}\r\n","import { Percent } from '@pancakeswap-libs/sdk'\r\nimport React from 'react'\r\nimport { ONE_BIPS } from '../../constants'\r\nimport { warningSeverity } from '../../utils/prices'\r\nimport { ErrorText } from './styleds'\r\n\r\n/**\r\n * Formatted version of price impact text with warning colors\r\n */\r\nexport default function FormattedPriceImpact({ priceImpact }: { priceImpact?: Percent }) {\r\n  return (\r\n    <ErrorText fontSize=\"14px\" severity={warningSeverity(priceImpact)}>\r\n      {priceImpact ? (priceImpact.lessThan(ONE_BIPS) ? '<0.01%' : `${priceImpact.toFixed(2)}%`) : '-'}\r\n    </ErrorText>\r\n  )\r\n}\r\n","import { Trade, TradeType } from '@pancakeswap-libs/sdk'\r\nimport React, { useMemo, useState } from 'react'\r\nimport { Text, Button } from '@pancakeswap-libs/uikit'\r\nimport { Repeat } from 'react-feather'\r\n\r\nimport useI18n from 'hooks/useI18n'\r\nimport { Field } from '../../state/swap/actions'\r\nimport {\r\n  computeSlippageAdjustedAmounts,\r\n  computeTradePriceBreakdown,\r\n  formatExecutionPrice,\r\n  warningSeverity,\r\n} from '../../utils/prices'\r\nimport { AutoColumn } from '../Column'\r\nimport QuestionHelper from '../QuestionHelper'\r\nimport { AutoRow, RowBetween, RowFixed } from '../Row'\r\nimport FormattedPriceImpact from './FormattedPriceImpact'\r\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds'\r\n\r\nexport default function SwapModalFooter({\r\n  trade,\r\n  onConfirm,\r\n  allowedSlippage,\r\n  swapErrorMessage,\r\n  disabledConfirm,\r\n}: {\r\n  trade: Trade\r\n  allowedSlippage: number\r\n  onConfirm: () => void\r\n  swapErrorMessage: string | undefined\r\n  disabledConfirm: boolean\r\n}) {\r\n  const [showInverted, setShowInverted] = useState<boolean>(false)\r\n  const slippageAdjustedAmounts = useMemo(() => computeSlippageAdjustedAmounts(trade, allowedSlippage), [\r\n    allowedSlippage,\r\n    trade,\r\n  ])\r\n  const { priceImpactWithoutFee, realizedLPFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\r\n  const severity = warningSeverity(priceImpactWithoutFee)\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <>\r\n      <AutoColumn gap=\"0px\">\r\n        <RowBetween align=\"center\">\r\n          <Text fontSize=\"14px\">Price</Text>\r\n          <Text\r\n            fontSize=\"14px\"\r\n            style={{\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              display: 'flex',\r\n              textAlign: 'right',\r\n              paddingLeft: '8px',\r\n              fontWeight: 500,\r\n            }}\r\n          >\r\n            {formatExecutionPrice(trade, showInverted)}\r\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\r\n              <Repeat size={14} />\r\n            </StyledBalanceMaxMini>\r\n          </Text>\r\n        </RowBetween>\r\n\r\n        <RowBetween>\r\n          <RowFixed>\r\n            <Text fontSize=\"14px\">\r\n              {trade.tradeType === TradeType.EXACT_INPUT\r\n                ? TranslateString(1210, 'Minimum received')\r\n                : TranslateString(220, 'Maximum sold')}\r\n            </Text>\r\n            <QuestionHelper\r\n              text={TranslateString(\r\n                202,\r\n                'Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.'\r\n              )}\r\n            />\r\n          </RowFixed>\r\n          <RowFixed>\r\n            <Text fontSize=\"14px\">\r\n              {trade.tradeType === TradeType.EXACT_INPUT\r\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\r\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\r\n            </Text>\r\n            <Text fontSize=\"14px\" marginLeft=\"4px\">\r\n              {trade.tradeType === TradeType.EXACT_INPUT\r\n                ? trade.outputAmount.currency.symbol\r\n                : trade.inputAmount.currency.symbol}\r\n            </Text>\r\n          </RowFixed>\r\n        </RowBetween>\r\n        <RowBetween>\r\n          <RowFixed>\r\n            <Text fontSize=\"14px\">{TranslateString(226, 'Price Impact')}</Text>\r\n            <QuestionHelper\r\n              text={TranslateString(224, 'The difference between the market price and your price due to trade size.')}\r\n            />\r\n          </RowFixed>\r\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\r\n        </RowBetween>\r\n        <RowBetween>\r\n          <RowFixed>\r\n            <Text fontSize=\"14px\">{TranslateString(228, 'Liquidity Provider Fee')}</Text>\r\n            <QuestionHelper\r\n              text={TranslateString(\r\n                999,\r\n                'For each trade a 0.2% fee is paid. 0.17% goes to liquidity providers and 0.03% goes to the PancakeSwap treasury.'\r\n              )}\r\n            />\r\n          </RowFixed>\r\n          <Text fontSize=\"14px\">\r\n            {realizedLPFee ? `${realizedLPFee?.toSignificant(6)} ${trade.inputAmount.currency.symbol}` : '-'}\r\n          </Text>\r\n        </RowBetween>\r\n      </AutoColumn>\r\n\r\n      <AutoRow>\r\n        <Button\r\n          onClick={onConfirm}\r\n          disabled={disabledConfirm}\r\n          variant={severity > 2 ? 'danger' : 'primary'}\r\n          mt=\"10px\"\r\n          id=\"confirm-swap-or-send\"\r\n          width=\"100%\"\r\n        >\r\n          {severity > 2 ? 'Swap Anyway' : 'Confirm Swap'}\r\n        </Button>\r\n\r\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\r\n      </AutoRow>\r\n    </>\r\n  )\r\n}\r\n","import React, { useContext, useMemo } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\nimport { Trade, TradeType } from '@pancakeswap-libs/sdk'\r\nimport { Button, Text } from '@pancakeswap-libs/uikit'\r\nimport { ArrowDown, AlertTriangle } from 'react-feather'\r\nimport { Field } from '../../state/swap/actions'\r\nimport { isAddress, shortenAddress } from '../../utils'\r\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown, warningSeverity } from '../../utils/prices'\r\nimport { AutoColumn } from '../Column'\r\nimport CurrencyLogo from '../CurrencyLogo'\r\nimport { RowBetween, RowFixed } from '../Row'\r\nimport { SwapShowAcceptChanges } from './styleds'\r\n\r\nconst PriceInfoText = styled(Text)`\r\n  font-style: italic;\r\n  line-height: 1.3;\r\n\r\n  span {\r\n    color: ${({ theme }) => theme.colors.primary};\r\n    font-weight: 600;\r\n  }\r\n`\r\n\r\nexport default function SwapModalHeader({\r\n  trade,\r\n  allowedSlippage,\r\n  recipient,\r\n  showAcceptChanges,\r\n  onAcceptChanges,\r\n}: {\r\n  trade: Trade\r\n  allowedSlippage: number\r\n  recipient: string | null\r\n  showAcceptChanges: boolean\r\n  onAcceptChanges: () => void\r\n}) {\r\n  const slippageAdjustedAmounts = useMemo(() => computeSlippageAdjustedAmounts(trade, allowedSlippage), [\r\n    trade,\r\n    allowedSlippage,\r\n  ])\r\n  const { priceImpactWithoutFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\r\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\r\n\r\n  const theme = useContext(ThemeContext)\r\n\r\n  return (\r\n    <AutoColumn gap=\"md\" style={{ marginTop: '20px' }}>\r\n      <RowBetween align=\"flex-end\">\r\n        <RowFixed gap=\"0px\">\r\n          <CurrencyLogo currency={trade.inputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\r\n          <Text\r\n            fontSize=\"24px\"\r\n            color={showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT ? theme.colors.primary : 'text'}\r\n          >\r\n            {trade.inputAmount.toSignificant(6)}\r\n          </Text>\r\n        </RowFixed>\r\n        <RowFixed gap=\"0px\">\r\n          <Text fontSize=\"24px\" style={{ marginLeft: '10px', fontWeight: 500 }}>\r\n            {trade.inputAmount.currency.symbol}\r\n          </Text>\r\n        </RowFixed>\r\n      </RowBetween>\r\n      <RowFixed>\r\n        <ArrowDown size=\"16\" color={theme.colors.textSubtle} style={{ marginLeft: '4px', minWidth: '16px' }} />\r\n      </RowFixed>\r\n      <RowBetween align=\"flex-end\">\r\n        <RowFixed gap=\"0px\">\r\n          <CurrencyLogo currency={trade.outputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\r\n          <Text\r\n            fontSize=\"24px\"\r\n            style={{ marginLeft: '10px', fontWeight: 500 }}\r\n            color={\r\n              priceImpactSeverity > 2\r\n                ? theme.colors.failure\r\n                : showAcceptChanges && trade.tradeType === TradeType.EXACT_INPUT\r\n                ? theme.colors.primary\r\n                : 'text'\r\n            }\r\n          >\r\n            {trade.outputAmount.toSignificant(6)}\r\n          </Text>\r\n        </RowFixed>\r\n        <RowFixed gap=\"0px\">\r\n          <Text fontSize=\"24px\" style={{ marginLeft: '10px', fontWeight: 500 }}>\r\n            {trade.outputAmount.currency.symbol}\r\n          </Text>\r\n        </RowFixed>\r\n      </RowBetween>\r\n      {showAcceptChanges ? (\r\n        <SwapShowAcceptChanges justify=\"flex-start\" gap=\"0px\">\r\n          <RowBetween>\r\n            <RowFixed>\r\n              <AlertTriangle size={20} style={{ marginRight: '8px', minWidth: 24 }} />\r\n              <Text color=\"primary\"> Price Updated</Text>\r\n            </RowFixed>\r\n            <Button onClick={onAcceptChanges}>Accept</Button>\r\n          </RowBetween>\r\n        </SwapShowAcceptChanges>\r\n      ) : null}\r\n      <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '16px 0 0' }}>\r\n        {trade.tradeType === TradeType.EXACT_INPUT ? (\r\n          <PriceInfoText>\r\n            {`Output is estimated. You will receive at least `}\r\n            <span>\r\n              {slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(6)} {trade.outputAmount.currency.symbol}\r\n            </span>\r\n            {' or the transaction will revert.'}\r\n          </PriceInfoText>\r\n        ) : (\r\n          <PriceInfoText>\r\n            {`Input is estimated. You will sell at most `}\r\n            <span>\r\n              {slippageAdjustedAmounts[Field.INPUT]?.toSignificant(6)} {trade.inputAmount.currency.symbol}\r\n            </span>\r\n            {' or the transaction will revert.'}\r\n          </PriceInfoText>\r\n        )}\r\n      </AutoColumn>\r\n      {recipient !== null ? (\r\n        <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '16px 0 0' }}>\r\n          <Text>\r\n            Output will be sent to{' '}\r\n            <b title={recipient}>{isAddress(recipient) ? shortenAddress(recipient) : recipient}</b>\r\n          </Text>\r\n        </AutoColumn>\r\n      ) : null}\r\n    </AutoColumn>\r\n  )\r\n}\r\n","import { currencyEquals, Trade } from '@pancakeswap-libs/sdk'\r\nimport React, { useCallback, useMemo } from 'react'\r\nimport TransactionConfirmationModal, {\r\n  ConfirmationModalContent,\r\n  TransactionErrorContent\r\n} from '../TransactionConfirmationModal'\r\nimport SwapModalFooter from './SwapModalFooter'\r\nimport SwapModalHeader from './SwapModalHeader'\r\n\r\n/**\r\n * Returns true if the trade requires a confirmation of details before we can submit it\r\n * @param tradeA trade A\r\n * @param tradeB trade B\r\n */\r\nfunction tradeMeaningfullyDiffers(tradeA: Trade, tradeB: Trade): boolean {\r\n  return (\r\n    tradeA.tradeType !== tradeB.tradeType ||\r\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\r\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\r\n    !currencyEquals(tradeA.outputAmount.currency, tradeB.outputAmount.currency) ||\r\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\r\n  )\r\n}\r\n\r\nexport default function ConfirmSwapModal({\r\n  trade,\r\n  originalTrade,\r\n  onAcceptChanges,\r\n  allowedSlippage,\r\n  onConfirm,\r\n  onDismiss,\r\n  recipient,\r\n  swapErrorMessage,\r\n  isOpen,\r\n  attemptingTxn,\r\n  txHash\r\n}: {\r\n  isOpen: boolean\r\n  trade: Trade | undefined\r\n  originalTrade: Trade | undefined\r\n  attemptingTxn: boolean\r\n  txHash: string | undefined\r\n  recipient: string | null\r\n  allowedSlippage: number\r\n  onAcceptChanges: () => void\r\n  onConfirm: () => void\r\n  swapErrorMessage: string | undefined\r\n  onDismiss: () => void\r\n}) {\r\n  const showAcceptChanges = useMemo(\r\n    () => Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade)),\r\n    [originalTrade, trade]\r\n  )\r\n\r\n  const modalHeader = useCallback(() => {\r\n    return trade ? (\r\n      <SwapModalHeader\r\n        trade={trade}\r\n        allowedSlippage={allowedSlippage}\r\n        recipient={recipient}\r\n        showAcceptChanges={showAcceptChanges}\r\n        onAcceptChanges={onAcceptChanges}\r\n      />\r\n    ) : null\r\n  }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade])\r\n\r\n  const modalBottom = useCallback(() => {\r\n    return trade ? (\r\n      <SwapModalFooter\r\n        onConfirm={onConfirm}\r\n        trade={trade}\r\n        disabledConfirm={showAcceptChanges}\r\n        swapErrorMessage={swapErrorMessage}\r\n        allowedSlippage={allowedSlippage}\r\n      />\r\n    ) : null\r\n  }, [allowedSlippage, onConfirm, showAcceptChanges, swapErrorMessage, trade])\r\n\r\n  // text to show while loading\r\n  const pendingText = `Swapping ${trade?.inputAmount?.toSignificant(6)} ${\r\n    trade?.inputAmount?.currency?.symbol\r\n  } for ${trade?.outputAmount?.toSignificant(6)} ${trade?.outputAmount?.currency?.symbol}`\r\n\r\n  const confirmationContent = useCallback(\r\n    () =>\r\n      swapErrorMessage ? (\r\n        <TransactionErrorContent onDismiss={onDismiss} message={swapErrorMessage} />\r\n      ) : (\r\n        <ConfirmationModalContent\r\n          title=\"Confirm Swap\"\r\n          onDismiss={onDismiss}\r\n          topContent={modalHeader}\r\n          bottomContent={modalBottom}\r\n        />\r\n      ),\r\n    [onDismiss, modalBottom, modalHeader, swapErrorMessage]\r\n  )\r\n\r\n  return (\r\n    <TransactionConfirmationModal\r\n      isOpen={isOpen}\r\n      onDismiss={onDismiss}\r\n      attemptingTxn={attemptingTxn}\r\n      hash={txHash}\r\n      content={confirmationContent}\r\n      pendingText={pendingText}\r\n    />\r\n  )\r\n}\r\n","import { Trade } from '@pancakeswap-libs/sdk'\r\nimport React, { Fragment, memo, useContext } from 'react'\r\nimport { ChevronRight } from 'react-feather'\r\nimport { Flex, Text } from '@pancakeswap-libs/uikit'\r\nimport { ThemeContext } from 'styled-components'\r\nimport CurrencyLogo from '../CurrencyLogo'\r\n\r\nexport default memo(function SwapRoute({ trade }: { trade: Trade }) {\r\n  const theme = useContext(ThemeContext)\r\n  return (\r\n    <Flex\r\n      px=\"1rem\"\r\n      py=\"0.5rem\"\r\n      my=\"0.5rem\"\r\n      style={{ border: `1px solid ${theme.colors.tertiary}`, borderRadius: '1rem' }}\r\n      flexWrap=\"wrap\"\r\n      justifyContent=\"space-evenly\"\r\n      alignItems=\"center\"\r\n    >\r\n      {trade.route.path.map((token, i, path) => {\r\n        const isLastItem: boolean = i === path.length - 1\r\n        return (\r\n          // eslint-disable-next-line react/no-array-index-key\r\n          <Fragment key={i}>\r\n            <Flex my=\"0.5rem\" alignItems=\"center\" style={{ flexShrink: 0 }}>\r\n              <CurrencyLogo currency={token} size=\"1.5rem\" />\r\n              <Text fontSize=\"14px\" color=\"text\" ml=\"0.5rem\">\r\n                {token.symbol}\r\n              </Text>\r\n            </Flex>\r\n            {isLastItem ? null : <ChevronRight color=\"textSubtle\" />}\r\n          </Fragment>\r\n        )\r\n      })}\r\n    </Flex>\r\n  )\r\n})\r\n","import React from 'react'\r\nimport { Trade, TradeType } from '@pancakeswap-libs/sdk'\r\nimport { Card, CardBody, Text } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { Field } from '../../state/swap/actions'\r\nimport { useUserSlippageTolerance } from '../../state/user/hooks'\r\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown } from '../../utils/prices'\r\nimport { AutoColumn } from '../Column'\r\nimport QuestionHelper from '../QuestionHelper'\r\nimport { RowBetween, RowFixed } from '../Row'\r\nimport FormattedPriceImpact from './FormattedPriceImpact'\r\nimport { SectionBreak } from './styleds'\r\nimport SwapRoute from './SwapRoute'\r\n\r\nfunction TradeSummary({ trade, allowedSlippage }: { trade: Trade; allowedSlippage: number }) {\r\n  const { priceImpactWithoutFee, realizedLPFee } = computeTradePriceBreakdown(trade)\r\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT\r\n  const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(trade, allowedSlippage)\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <RowBetween>\r\n          <RowFixed>\r\n            <Text fontSize=\"14px\">\r\n              {isExactIn ? TranslateString(1210, 'Minimum received') : TranslateString(220, 'Maximum sold')}\r\n            </Text>\r\n            <QuestionHelper\r\n              text={TranslateString(\r\n                202,\r\n                'Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.'\r\n              )}\r\n            />\r\n          </RowFixed>\r\n          <RowFixed>\r\n            <Text fontSize=\"14px\">\r\n              {isExactIn\r\n                ? `${slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4)} ${trade.outputAmount.currency.symbol}` ??\r\n                  '-'\r\n                : `${slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4)} ${trade.inputAmount.currency.symbol}` ??\r\n                  '-'}\r\n            </Text>\r\n          </RowFixed>\r\n        </RowBetween>\r\n        <RowBetween>\r\n          <RowFixed>\r\n            <Text fontSize='14px'>{TranslateString(226, 'Price Impact')}</Text>\r\n            <QuestionHelper\r\n              text={TranslateString(\r\n                224,\r\n                'The difference between the market price and estimated price due to trade size.'\r\n              )}\r\n            />\r\n          </RowFixed>\r\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\r\n        </RowBetween>\r\n\r\n        <RowBetween>\r\n          <RowFixed>\r\n            <Text fontSize=\"14px\">{TranslateString(228, 'Liquidity Provider Fee')}</Text>\r\n            <QuestionHelper\r\n              text={TranslateString(\r\n                230,\r\n                'For each trade a 0.2% fee is paid. 0.17% goes to liquidity providers and 0.03% goes to the PancakeSwap treasury.'\r\n              )}\r\n            />\r\n          </RowFixed>\r\n          <Text fontSize=\"14px\">\r\n            {realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.symbol}` : '-'}\r\n          </Text>\r\n        </RowBetween>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport interface AdvancedSwapDetailsProps {\r\n  trade?: Trade\r\n}\r\n\r\nexport function AdvancedSwapDetails({ trade }: AdvancedSwapDetailsProps) {\r\n  const [allowedSlippage] = useUserSlippageTolerance()\r\n  const TranslateString = useI18n()\r\n  const showRoute = Boolean(trade && trade.route.path.length > 2)\r\n\r\n  return (\r\n    <AutoColumn gap=\"md\">\r\n      {trade && (\r\n        <>\r\n          <TradeSummary trade={trade} allowedSlippage={allowedSlippage} />\r\n          {showRoute && (\r\n            <>\r\n              <SectionBreak />\r\n              <AutoColumn style={{ padding: '0 24px' }}>\r\n                <RowFixed>\r\n                  <Text fontSize=\"14px\">Route</Text>\r\n                  <QuestionHelper\r\n                    text={TranslateString(\r\n                      999,\r\n                      'Routing through these tokens resulted in the best price for your trade.'\r\n                    )}\r\n                  />\r\n                </RowFixed>\r\n                <SwapRoute trade={trade} />\r\n              </AutoColumn>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </AutoColumn>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useLastTruthy } from '../../hooks/useLast'\r\nimport { AdvancedSwapDetails, AdvancedSwapDetailsProps } from './AdvancedSwapDetails'\r\n\r\nconst AdvancedDetailsFooter = styled.div<{ show: boolean }>`\r\n  padding-top: calc(16px + 2rem);\r\n  padding-bottom: 20px;\r\n  margin-top: -2rem;\r\n  width: 100%;\r\n  max-width: 400px;\r\n  border-bottom-left-radius: 20px;\r\n  border-bottom-right-radius: 20px;\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  z-index: 1;\r\n\r\n  transform: ${({ show }) => (show ? 'translateY(0%)' : 'translateY(-100%)')};\r\n  transition: transform 300ms ease-in-out;\r\n`\r\n\r\nexport default function AdvancedSwapDetailsDropdown({ trade, ...rest }: AdvancedSwapDetailsProps) {\r\n  const lastTrade = useLastTruthy(trade)\r\n\r\n  return (\r\n    <AdvancedDetailsFooter show={Boolean(trade)}>\r\n      <AdvancedSwapDetails {...rest} trade={trade ?? lastTrade ?? undefined} />\r\n    </AdvancedDetailsFooter>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Price } from '@pancakeswap-libs/sdk'\r\nimport { SyncAltIcon, Text } from '@pancakeswap-libs/uikit'\r\nimport { StyledBalanceMaxMini } from './styleds'\r\n\r\ninterface TradePriceProps {\r\n  price?: Price\r\n  showInverted: boolean\r\n  setShowInverted: (showInverted: boolean) => void\r\n}\r\n\r\nexport default function TradePrice({ price, showInverted, setShowInverted }: TradePriceProps) {\r\n  const formattedPrice = showInverted ? price?.toSignificant(6) : price?.invert()?.toSignificant(6)\r\n\r\n  const show = Boolean(price?.baseCurrency && price?.quoteCurrency)\r\n  const label = showInverted\r\n    ? `${price?.quoteCurrency?.symbol} per ${price?.baseCurrency?.symbol}`\r\n    : `${price?.baseCurrency?.symbol} per ${price?.quoteCurrency?.symbol}`\r\n\r\n  return (\r\n    <Text fontSize=\"14px\" style={{ justifyContent: 'center', alignItems: 'center', display: 'flex' }}>\r\n      {show ? (\r\n        <>\r\n          {formattedPrice ?? '-'} {label}\r\n          <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\r\n            <SyncAltIcon width=\"20px\" color=\"primary\" />\r\n          </StyledBalanceMaxMini>\r\n        </>\r\n      ) : (\r\n        '-'\r\n      )}\r\n    </Text>\r\n  )\r\n}\r\n","import { Token } from '@pancakeswap-libs/sdk'\r\nimport { transparentize } from 'polished'\r\nimport { Button, Text } from '@pancakeswap-libs/uikit'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { AlertTriangle } from 'react-feather'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport { useAllTokens } from '../../hooks/Tokens'\r\nimport { getBscScanLink, shortenAddress } from '../../utils'\r\nimport { ExternalLink } from '../Shared'\r\nimport CurrencyLogo from '../CurrencyLogo'\r\nimport Modal from '../Modal'\r\nimport { AutoRow, RowBetween } from '../Row'\r\nimport { AutoColumn } from '../Column'\r\n\r\nconst Wrapper = styled.div<{ error: boolean }>`\r\n  background: ${({ theme }) => transparentize(0.6, theme.colors.tertiary)};\r\n  padding: 0.75rem;\r\n  border-radius: 20px;\r\n`\r\n\r\nconst WarningContainer = styled.div`\r\n  max-width: 420px;\r\n  width: 100%;\r\n  padding: 1rem;\r\n  background: rgba(242, 150, 2, 0.05);\r\n  border: 1px solid #f3841e;\r\n  border-radius: 20px;\r\n  overflow: auto;\r\n`\r\n\r\nconst StyledWarningIcon = styled(AlertTriangle)`\r\n  stroke: ${({ theme }) => theme.colors.failure};\r\n`\r\n\r\ninterface TokenWarningCardProps {\r\n  token?: Token\r\n}\r\n\r\nfunction TokenWarningCard({ token }: TokenWarningCardProps) {\r\n  const { chainId } = useActiveWeb3React()\r\n  const TranslateString = useI18n()\r\n  const tokenSymbol = token?.symbol?.toLowerCase() ?? ''\r\n  const tokenName = token?.name?.toLowerCase() ?? ''\r\n\r\n  const allTokens = useAllTokens()\r\n\r\n  const duplicateNameOrSymbol = useMemo(() => {\r\n    if (!token || !chainId) return false\r\n\r\n    return Object.keys(allTokens).some((tokenAddress) => {\r\n      const userToken = allTokens[tokenAddress]\r\n      if (userToken.equals(token)) {\r\n        return false\r\n      }\r\n      return userToken.symbol?.toLowerCase() === tokenSymbol || userToken.name?.toLowerCase() === tokenName\r\n    })\r\n  }, [token, chainId, allTokens, tokenSymbol, tokenName])\r\n\r\n  if (!token) return null\r\n\r\n  return (\r\n    <Wrapper error={duplicateNameOrSymbol}>\r\n      <AutoRow gap=\"6px\">\r\n        <AutoColumn gap=\"24px\">\r\n          <CurrencyLogo currency={token} size=\"16px\" />\r\n          <div> </div>\r\n        </AutoColumn>\r\n        <AutoColumn gap=\"10px\" justify=\"flex-start\">\r\n          <Text>\r\n            {token && token.name && token.symbol && token.name !== token.symbol\r\n              ? `${token.name} (${token.symbol})`\r\n              : token.name || token.symbol}{' '}\r\n          </Text>\r\n          {chainId && (\r\n            <ExternalLink style={{ fontWeight: 400 }} href={getBscScanLink(chainId, token.address, 'token')}>\r\n              <Text title={token.address}>\r\n                {shortenAddress(token.address)} {TranslateString(116, '(View on BscScan)')}\r\n              </Text>\r\n            </ExternalLink>\r\n          )}\r\n        </AutoColumn>\r\n      </AutoRow>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default function TokenWarningModal({\r\n  isOpen,\r\n  tokens,\r\n  onConfirm,\r\n}: {\r\n  isOpen: boolean\r\n  tokens: Token[]\r\n  onConfirm: () => void\r\n}) {\r\n  const [understandChecked, setUnderstandChecked] = useState(false)\r\n  const toggleUnderstand = useCallback(() => setUnderstandChecked((uc) => !uc), [])\r\n  const TranslateString = useI18n()\r\n\r\n  const handleDismiss = useCallback(() => null, [])\r\n  return (\r\n    <Modal isOpen={isOpen} onDismiss={handleDismiss} maxHeight={90}>\r\n      <WarningContainer className=\"token-warning-container\">\r\n        <AutoColumn gap=\"lg\">\r\n          <AutoRow gap=\"6px\">\r\n            <StyledWarningIcon />\r\n            <Text color=\"failure\">{TranslateString(1128, 'Token imported')}</Text>\r\n          </AutoRow>\r\n          <Text>\r\n            {TranslateString(\r\n              1130,\r\n              'Anyone can create a BEP20 token on BSC with any name, including creating fake versions of existing tokens and tokens that claim to represent projects that do not have a token.'\r\n            )}\r\n          </Text>\r\n          <Text>\r\n            {TranslateString(\r\n              1132,\r\n              'This interface can load arbitrary tokens by token addresses. Please take extra caution and do your research when interacting with arbitrary BEP20 tokens.'\r\n            )}\r\n          </Text>\r\n          <Text>{TranslateString(1134, 'If you purchase an arbitrary token, you may be unable to sell it back.')}</Text>\r\n          {tokens.map((token) => {\r\n            return <TokenWarningCard key={token.address} token={token} />\r\n          })}\r\n          <RowBetween>\r\n            <div>\r\n              <label htmlFor=\"understand-checkbox\" style={{ cursor: 'pointer', userSelect: 'none' }}>\r\n                <input\r\n                  id=\"understand-checkbox\"\r\n                  type=\"checkbox\"\r\n                  className=\"understand-checkbox\"\r\n                  checked={understandChecked}\r\n                  onChange={toggleUnderstand}\r\n                />{' '}\r\n                <Text as=\"span\" ml=\"4px\">\r\n                  {TranslateString(148, 'I understand')}\r\n                </Text>\r\n              </label>\r\n            </div>\r\n            <Button\r\n              disabled={!understandChecked}\r\n              variant=\"danger\"\r\n              style={{ width: '140px' }}\r\n              className=\"token-dismiss-button\"\r\n              onClick={() => {\r\n                onConfirm()\r\n              }}\r\n            >\r\n              {TranslateString(150, 'Continue')}\r\n            </Button>\r\n          </RowBetween>\r\n        </AutoColumn>\r\n      </WarningContainer>\r\n    </Modal>\r\n  )\r\n}\r\n","import React, { useCallback, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Text } from '@pancakeswap-libs/uikit'\r\nimport { AlertTriangle } from 'react-feather'\r\nimport Modal from '../Modal'\r\nimport { AutoRow, RowBetween } from '../Row'\r\nimport { AutoColumn } from '../Column'\r\n\r\nconst WarningContainer = styled.div`\r\n  max-width: 420px;\r\n  width: 100%;\r\n  padding: 1rem;\r\n  background: rgba(242, 150, 2, 0.05);\r\n  border: 1px solid #f3841e;\r\n  border-radius: 20px;\r\n  overflow: auto;\r\n`\r\n\r\nconst StyledWarningIcon = styled(AlertTriangle)`\r\n  stroke: ${({ theme }) => theme.colors.failure};\r\n`\r\n\r\nexport default function SyrupWarningModal({\r\n  isOpen,\r\n  transactionType,\r\n  onConfirm,\r\n}: {\r\n  isOpen: boolean\r\n  transactionType: string | null\r\n  onConfirm: () => void\r\n}) {\r\n  const [understandChecked, setUnderstandChecked] = useState(false)\r\n  const toggleUnderstand = useCallback(() => setUnderstandChecked((uc) => !uc), [])\r\n\r\n  const handleDismiss = useCallback(() => null, [])\r\n  return (\r\n    <Modal isOpen={isOpen} onDismiss={handleDismiss} maxHeight={90}>\r\n      <WarningContainer className=\"token-warning-container\">\r\n        <AutoColumn gap=\"lg\">\r\n          <AutoRow gap=\"6px\">\r\n            <StyledWarningIcon />\r\n            <Text color=\"failure\">Syrup Warning</Text>\r\n          </AutoRow>\r\n          {transactionType !== '' && (\r\n            <>\r\n              <Text color=\"failure\">\r\n                Please be careful when <strong>{transactionType}</strong> SYRUP.\r\n              </Text>\r\n              <Text color=\"failure\">\r\n                {transactionType === 'Buying'\r\n                  ? 'You will not receive CAKE rewards for holding purchased SYRUP.'\r\n                  : 'You will need to buy back the same amount of SYRUP to be able to convert back to CAKE.'}\r\n              </Text>\r\n            </>\r\n          )}\r\n          <RowBetween>\r\n            <div>\r\n              <label htmlFor=\"understand-checkbox\" style={{ cursor: 'pointer', userSelect: 'none' }}>\r\n                <input\r\n                  id=\"understand-checkbox\"\r\n                  type=\"checkbox\"\r\n                  className=\"understand-checkbox\"\r\n                  checked={understandChecked}\r\n                  onChange={toggleUnderstand}\r\n                />{' '}\r\n                <Text as=\"span\">I understand</Text>\r\n              </label>\r\n            </div>\r\n            <Button\r\n              disabled={!understandChecked}\r\n              variant=\"danger\"\r\n              style={{ width: '140px' }}\r\n              onClick={() => {\r\n                setUnderstandChecked(false)\r\n                onConfirm()\r\n              }}\r\n            >\r\n              Continue\r\n            </Button>\r\n          </RowBetween>\r\n        </AutoColumn>\r\n      </WarningContainer>\r\n    </Modal>\r\n  )\r\n}\r\n","import React, { useCallback, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Text } from '@pancakeswap-libs/uikit'\r\nimport { AlertTriangle } from 'react-feather'\r\nimport Modal from '../Modal'\r\nimport { AutoRow, RowBetween } from '../Row'\r\nimport { AutoColumn } from '../Column'\r\n\r\nconst WarningContainer = styled.div`\r\n  max-width: 420px;\r\n  width: 100%;\r\n  padding: 1rem;\r\n  background: rgba(242, 150, 2, 0.05);\r\n  border: 1px solid #f3841e;\r\n  border-radius: 20px;\r\n  overflow: auto;\r\n`\r\n\r\nconst StyledWarningIcon = styled(AlertTriangle)`\r\n  stroke: ${({ theme }) => theme.colors.binance};\r\n`\r\n\r\nexport default function SafeMoonWarningModal({ isOpen, onConfirm }: { isOpen: boolean; onConfirm: () => void }) {\r\n  const [understandChecked, setUnderstandChecked] = useState(false)\r\n  const toggleUnderstand = useCallback(() => setUnderstandChecked((uc) => !uc), [])\r\n\r\n  const handleDismiss = useCallback(() => null, [])\r\n  return (\r\n    <Modal isOpen={isOpen} onDismiss={handleDismiss} maxHeight={90}>\r\n      <WarningContainer className=\"token-warning-container\">\r\n        <AutoColumn gap=\"lg\">\r\n          <AutoRow gap=\"6px\">\r\n            <StyledWarningIcon />\r\n            <Text>Notice for trading SafeMoon</Text>\r\n          </AutoRow>\r\n          <>\r\n            <Text>\r\n              To trade SAFEMOON, you must click on the settings icon and{' '}\r\n              <strong>set your slippage tolerance to 12%+</strong>\r\n            </Text>\r\n            <Text>This is because SafeMoon taxes a 10% fee on each transaction.</Text>\r\n            <Text>• 5% fee = redistributed to all existing holders</Text>\r\n            <Text>• 5% fee = used to add liquidity</Text>\r\n          </>\r\n          <RowBetween>\r\n            <div>\r\n              <label htmlFor=\"understand-checkbox\" style={{ cursor: 'pointer', userSelect: 'none' }}>\r\n                <input\r\n                  id=\"understand-safeMoonWarning\"\r\n                  type=\"checkbox\"\r\n                  className=\"understand-checkbox\"\r\n                  checked={understandChecked}\r\n                  onChange={toggleUnderstand}\r\n                />{' '}\r\n                <Text as=\"span\">I understand</Text>\r\n              </label>\r\n            </div>\r\n            <Button\r\n              id=\"confirm-safeMoonWarning\"\r\n              disabled={!understandChecked}\r\n              variant=\"danger\"\r\n              style={{ width: '140px' }}\r\n              onClick={() => {\r\n                setUnderstandChecked(false)\r\n                onConfirm()\r\n              }}\r\n            >\r\n              Continue\r\n            </Button>\r\n          </RowBetween>\r\n        </AutoColumn>\r\n      </WarningContainer>\r\n    </Modal>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { transparentize } from 'polished'\r\nimport { RowBetween } from '../Row'\r\nimport { AutoColumn } from '../Column'\r\n\r\nconst Wrapper = styled(AutoColumn)`\r\n  margin-top: 1.25rem;\r\n`\r\n\r\nconst Grouping = styled(RowBetween)`\r\n  width: 50%;\r\n`\r\n\r\nconst Circle = styled.div<{ confirmed?: boolean; disabled?: boolean }>`\r\n  min-width: 20px;\r\n  min-height: 20px;\r\n  background-color: ${({ theme, confirmed, disabled }) =>\r\n    disabled ? theme.colors.backgroundDisabled : confirmed ? theme.colors.success : theme.colors.primary};\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  line-height: 8px;\r\n  font-size: 12px;\r\n  color: ${({ theme, confirmed, disabled }) =>\r\n    disabled ? theme.colors.text : confirmed ? theme.colors.success : '#FFFFFF'};\r\n`\r\n\r\nconst CircleRow = styled.div`\r\n  width: calc(100% - 20px);\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\nconst Connector = styled.div<{ prevConfirmed?: boolean }>`\r\n  width: 100%;\r\n  height: 2px;\r\n  background-color: ;\r\n  background: linear-gradient(\r\n    90deg,\r\n    ${({ theme, prevConfirmed }) => transparentize(0.5, prevConfirmed ? theme.colors.success : theme.colors.primary)} 0%,\r\n    ${({ theme, prevConfirmed }) => (prevConfirmed ? theme.colors.primary : theme.colors.backgroundDisabled)} 80%\r\n  );\r\n  opacity: 0.6;\r\n`\r\n\r\ninterface ProgressCirclesProps {\r\n  steps: boolean[]\r\n}\r\n\r\n/**\r\n * Based on array of steps, create a step counter of circles.\r\n * A circle can be enabled, disabled, or confirmed. States are derived\r\n * from previous step.\r\n *\r\n * An extra circle is added to represent the ability to swap, add, or remove.\r\n * This step will never be marked as complete (because no 'txn done' state in body ui).\r\n *\r\n * @param steps  array of booleans where true means step is complete\r\n */\r\nexport default function ProgressCircles({ steps }: ProgressCirclesProps) {\r\n  return (\r\n    <Wrapper justify=\"center\">\r\n      <Grouping>\r\n        {steps.map((step, i) => {\r\n          return (\r\n            // eslint-disable-next-line react/no-array-index-key\r\n            <CircleRow key={i}>\r\n              <Circle confirmed={step} disabled={!steps[i - 1] && i !== 0}>\r\n                {step ? '✓' : i + 1}\r\n              </Circle>\r\n              <Connector prevConfirmed={step} />\r\n            </CircleRow>\r\n          )\r\n        })}\r\n        <Circle disabled={!steps[steps.length - 1]}>{steps.length + 1}</Circle>\r\n      </Grouping>\r\n    </Wrapper>\r\n  )\r\n}\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { Contract } from '@ethersproject/contracts'\r\nimport { JSBI, Percent, Router, SwapParameters, Trade, TradeType } from '@pancakeswap-libs/sdk'\r\nimport { useMemo } from 'react'\r\nimport { BIPS_BASE, DEFAULT_DEADLINE_FROM_NOW, INITIAL_ALLOWED_SLIPPAGE } from '../constants'\r\nimport { useTransactionAdder } from '../state/transactions/hooks'\r\nimport { calculateGasMargin, getRouterContract, isAddress, shortenAddress } from '../utils'\r\nimport isZero from '../utils/isZero'\r\nimport { useActiveWeb3React } from './index'\r\nimport useENS from './useENS'\r\n\r\n enum SwapCallbackState {\r\n  INVALID,\r\n  LOADING,\r\n  VALID,\r\n}\r\n\r\ninterface SwapCall {\r\n  contract: Contract\r\n  parameters: SwapParameters\r\n}\r\n\r\ninterface SuccessfulCall {\r\n  call: SwapCall\r\n  gasEstimate: BigNumber\r\n}\r\n\r\ninterface FailedCall {\r\n  call: SwapCall\r\n  error: Error\r\n}\r\n\r\ntype EstimatedSwapCall = SuccessfulCall | FailedCall\r\n\r\n/**\r\n * Returns the swap calls that can be used to make the trade\r\n * @param trade trade to execute\r\n * @param allowedSlippage user allowed slippage\r\n * @param deadline the deadline for the trade\r\n * @param recipientAddressOrName\r\n */\r\nfunction useSwapCallArguments(\r\n  trade: Trade | undefined, // trade to execute, required\r\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\r\n  deadline: number = DEFAULT_DEADLINE_FROM_NOW, // in seconds from now\r\n  recipientAddressOrName: string | null // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\r\n): SwapCall[] {\r\n  const { account, chainId, library } = useActiveWeb3React()\r\n\r\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\r\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\r\n\r\n  return useMemo(() => {\r\n    if (!trade || !recipient || !library || !account || !chainId) return []\r\n\r\n    const contract: Contract | null = getRouterContract(chainId, library, account)\r\n    if (!contract) {\r\n      return []\r\n    }\r\n\r\n    const swapMethods = []\r\n\r\n    swapMethods.push(\r\n      // @ts-ignore\r\n      Router.swapCallParameters(trade, {\r\n        feeOnTransfer: false,\r\n        allowedSlippage: new Percent(JSBI.BigInt(Math.floor(allowedSlippage)), BIPS_BASE),\r\n        recipient,\r\n        ttl: deadline,\r\n      })\r\n    )\r\n\r\n    if (trade.tradeType === TradeType.EXACT_INPUT) {\r\n      swapMethods.push(\r\n        // @ts-ignore\r\n        Router.swapCallParameters(trade, {\r\n          feeOnTransfer: true,\r\n          allowedSlippage: new Percent(JSBI.BigInt(Math.floor(allowedSlippage)), BIPS_BASE),\r\n          recipient,\r\n          ttl: deadline,\r\n        })\r\n      )\r\n    }\r\n\r\n    return swapMethods.map((parameters) => ({ parameters, contract }))\r\n  }, [account, allowedSlippage, chainId, deadline, library, recipient, trade])\r\n}\r\n\r\n// returns a function that will execute a swap, if the parameters are all valid\r\n// and the user has approved the slippage adjusted input amount for the trade\r\nexport function useSwapCallback(\r\n  trade: Trade | undefined, // trade to execute, required\r\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\r\n  deadline: number = DEFAULT_DEADLINE_FROM_NOW, // in seconds from now\r\n  recipientAddressOrName: string | null // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\r\n): { state: SwapCallbackState; callback: null | (() => Promise<string>); error: string | null } {\r\n  const { account, chainId, library } = useActiveWeb3React()\r\n\r\n  const swapCalls = useSwapCallArguments(trade, allowedSlippage, deadline, recipientAddressOrName)\r\n\r\n  const addTransaction = useTransactionAdder()\r\n\r\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\r\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\r\n\r\n  return useMemo(() => {\r\n    if (!trade || !library || !account || !chainId) {\r\n      return { state: SwapCallbackState.INVALID, callback: null, error: 'Missing dependencies' }\r\n    }\r\n    if (!recipient) {\r\n      if (recipientAddressOrName !== null) {\r\n        return { state: SwapCallbackState.INVALID, callback: null, error: 'Invalid recipient' }\r\n      }\r\n      return { state: SwapCallbackState.LOADING, callback: null, error: null }\r\n    }\r\n\r\n    return {\r\n      state: SwapCallbackState.VALID,\r\n      callback: async function onSwap(): Promise<string> {\r\n        const estimatedCalls: EstimatedSwapCall[] = await Promise.all(\r\n          swapCalls.map((call) => {\r\n            const {\r\n              parameters: { methodName, args, value },\r\n              contract,\r\n            } = call\r\n            const options = !value || isZero(value) ? {} : { value }\r\n\r\n            return contract.estimateGas[methodName](...args, options)\r\n              .then((gasEstimate) => {\r\n                return {\r\n                  call,\r\n                  gasEstimate,\r\n                }\r\n              })\r\n              .catch((gasError) => {\r\n                console.info('Gas estimate failed, trying eth_call to extract error', call)\r\n\r\n                return contract.callStatic[methodName](...args, options)\r\n                  .then((result) => {\r\n                    console.info('Unexpected successful call after failed estimate gas', call, gasError, result)\r\n                    return { call, error: new Error('Unexpected issue with estimating the gas. Please try again.') }\r\n                  })\r\n                  .catch((callError) => {\r\n                    console.info('Call threw error', call, callError)\r\n                    let errorMessage: string\r\n                    switch (callError.reason) {\r\n                      case 'UniswapV2Router: INSUFFICIENT_OUTPUT_AMOUNT':\r\n                      case 'UniswapV2Router: EXCESSIVE_INPUT_AMOUNT':\r\n                        errorMessage =\r\n                          'This transaction will not succeed either due to price movement or fee on transfer. Try increasing your slippage tolerance.'\r\n                        break\r\n                      default:\r\n                        errorMessage = `The transaction cannot succeed due to error: ${callError.reason}. This is probably an issue with one of the tokens you are swapping.`\r\n                    }\r\n                    return { call, error: new Error(errorMessage) }\r\n                  })\r\n              })\r\n          })\r\n        )\r\n\r\n        // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\r\n        const successfulEstimation = estimatedCalls.find(\r\n          (el, ix, list): el is SuccessfulCall =>\r\n            'gasEstimate' in el && (ix === list.length - 1 || 'gasEstimate' in list[ix + 1])\r\n        )\r\n\r\n        if (!successfulEstimation) {\r\n          const errorCalls = estimatedCalls.filter((call): call is FailedCall => 'error' in call)\r\n          if (errorCalls.length > 0) throw errorCalls[errorCalls.length - 1].error\r\n          throw new Error('Unexpected error. Please contact support: none of the calls threw an error')\r\n        }\r\n\r\n        const {\r\n          call: {\r\n            contract,\r\n            parameters: { methodName, args, value },\r\n          },\r\n          gasEstimate,\r\n        } = successfulEstimation\r\n\r\n        return contract[methodName](...args, {\r\n          gasLimit: calculateGasMargin(gasEstimate),\r\n          ...(value && !isZero(value) ? { value, from: account } : { from: account }),\r\n        })\r\n          .then((response: any) => {\r\n            const inputSymbol = trade.inputAmount.currency.symbol\r\n            const outputSymbol = trade.outputAmount.currency.symbol\r\n            const inputAmount = trade.inputAmount.toSignificant(3)\r\n            const outputAmount = trade.outputAmount.toSignificant(3)\r\n\r\n            const base = `Swap ${inputAmount} ${inputSymbol} for ${outputAmount} ${outputSymbol}`\r\n            const withRecipient =\r\n              recipient === account\r\n                ? base\r\n                : `${base} to ${\r\n                    recipientAddressOrName && isAddress(recipientAddressOrName)\r\n                      ? shortenAddress(recipientAddressOrName)\r\n                      : recipientAddressOrName\r\n                  }`\r\n\r\n            addTransaction(response, {\r\n              summary: withRecipient,\r\n            })\r\n\r\n            return response.hash\r\n          })\r\n          .catch((error: any) => {\r\n            // if the user rejected the tx, pass this along\r\n            if (error?.code === 4001) {\r\n              throw new Error('Transaction rejected.')\r\n            } else {\r\n              // otherwise, the error was unexpected and we need to convey that\r\n              console.error(`Swap failed`, error, methodName, args, value)\r\n              throw new Error(`Swap failed: ${error.message}`)\r\n            }\r\n          })\r\n      },\r\n      error: null,\r\n    }\r\n  }, [trade, library, account, chainId, recipient, recipientAddressOrName, swapCalls, addTransaction])\r\n}\r\n\r\nexport default useSwapCallback","import { Currency, currencyEquals, ETHER, WETH } from '@pancakeswap-libs/sdk'\r\nimport { useMemo } from 'react'\r\nimport { tryParseAmount } from '../state/swap/hooks'\r\nimport { useTransactionAdder } from '../state/transactions/hooks'\r\nimport { useCurrencyBalance } from '../state/wallet/hooks'\r\nimport { useActiveWeb3React } from './index'\r\nimport { useWETHContract } from './useContract'\r\n\r\nexport enum WrapType {\r\n  NOT_APPLICABLE,\r\n  WRAP,\r\n  UNWRAP\r\n}\r\n\r\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE }\r\n/**\r\n * Given the selected input and output currency, return a wrap callback\r\n * @param inputCurrency the selected input currency\r\n * @param outputCurrency the selected output currency\r\n * @param typedValue the user input value\r\n */\r\nexport default function useWrapCallback(\r\n  inputCurrency: Currency | undefined,\r\n  outputCurrency: Currency | undefined,\r\n  typedValue: string | undefined\r\n): { wrapType: WrapType; execute?: undefined | (() => Promise<void>); inputError?: string } {\r\n  const { chainId, account } = useActiveWeb3React()\r\n  const wethContract = useWETHContract()\r\n  const balance = useCurrencyBalance(account ?? undefined, inputCurrency)\r\n  // we can always parse the amount typed as the input currency, since wrapping is 1:1\r\n  const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [inputCurrency, typedValue])\r\n  const addTransaction = useTransactionAdder()\r\n\r\n  return useMemo(() => {\r\n    if (!wethContract || !chainId || !inputCurrency || !outputCurrency) return NOT_APPLICABLE\r\n\r\n    const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount)\r\n\r\n    if (inputCurrency === ETHER && currencyEquals(WETH[chainId], outputCurrency)) {\r\n      return {\r\n        wrapType: WrapType.WRAP,\r\n        execute:\r\n          sufficientBalance && inputAmount\r\n            ? async () => {\r\n                try {\r\n                  const txReceipt = await wethContract.deposit({ value: `0x${inputAmount.raw.toString(16)}` })\r\n                  addTransaction(txReceipt, { summary: `Wrap ${inputAmount.toSignificant(6)} BNB to WBNB` })\r\n                } catch (error) {\r\n                  console.error('Could not deposit', error)\r\n                }\r\n              }\r\n            : undefined,\r\n        inputError: sufficientBalance ? undefined : 'Insufficient BNB balance'\r\n      }\r\n    } if (currencyEquals(WETH[chainId], inputCurrency) && outputCurrency === ETHER) {\r\n      return {\r\n        wrapType: WrapType.UNWRAP,\r\n        execute:\r\n          sufficientBalance && inputAmount\r\n            ? async () => {\r\n                try {\r\n                  const txReceipt = await wethContract.withdraw(`0x${inputAmount.raw.toString(16)}`)\r\n                  addTransaction(txReceipt, { summary: `Unwrap ${inputAmount.toSignificant(6)} WBNB to BNB` })\r\n                } catch (error) {\r\n                  console.error('Could not withdraw', error)\r\n                }\r\n              }\r\n            : undefined,\r\n        inputError: sufficientBalance ? undefined : 'Insufficient WBNB balance'\r\n      }\r\n    } \r\n      return NOT_APPLICABLE\r\n    \r\n  }, [wethContract, chainId, inputCurrency, outputCurrency, inputAmount, balance, addTransaction])\r\n}\r\n","import { CurrencyAmount, JSBI, Token, Trade } from '@pancakeswap-libs/sdk'\r\nimport React, { useCallback, useContext, useEffect, useMemo, useState } from 'react'\r\nimport { ArrowDown } from 'react-feather'\r\nimport { CardBody, ArrowDownIcon, Button, IconButton, Text } from '@pancakeswap-libs/uikit'\r\nimport { ThemeContext } from 'styled-components'\r\nimport AddressInputPanel from 'components/AddressInputPanel'\r\nimport Card, { GreyCard } from 'components/Card'\r\nimport { AutoColumn } from 'components/Column'\r\nimport ConfirmSwapModal from 'components/swap/ConfirmSwapModal'\r\nimport CurrencyInputPanel from 'components/CurrencyInputPanel'\r\nimport CardNav from 'components/CardNav'\r\nimport { AutoRow, RowBetween } from 'components/Row'\r\nimport AdvancedSwapDetailsDropdown from 'components/swap/AdvancedSwapDetailsDropdown'\r\nimport confirmPriceImpactWithoutFee from 'components/swap/confirmPriceImpactWithoutFee'\r\nimport { ArrowWrapper, BottomGrouping, SwapCallbackError, Wrapper } from 'components/swap/styleds'\r\nimport TradePrice from 'components/swap/TradePrice'\r\nimport TokenWarningModal from 'components/TokenWarningModal'\r\nimport SyrupWarningModal from 'components/SyrupWarningModal'\r\nimport SafeMoonWarningModal from 'components/SafeMoonWarningModal'\r\nimport ProgressSteps from 'components/ProgressSteps'\r\nimport Container from 'components/Container'\r\n\r\nimport { INITIAL_ALLOWED_SLIPPAGE } from 'constants/index'\r\nimport { useActiveWeb3React } from 'hooks'\r\nimport { useCurrency } from 'hooks/Tokens'\r\nimport { ApprovalState, useApproveCallbackFromTrade } from 'hooks/useApproveCallback'\r\nimport { useSwapCallback } from 'hooks/useSwapCallback'\r\nimport useWrapCallback, { WrapType } from 'hooks/useWrapCallback'\r\nimport { Field } from 'state/swap/actions'\r\nimport { useDefaultsFromURLSearch, useDerivedSwapInfo, useSwapActionHandlers, useSwapState } from 'state/swap/hooks'\r\nimport { useExpertModeManager, useUserDeadline, useUserSlippageTolerance } from 'state/user/hooks'\r\nimport { LinkStyledButton } from 'components/Shared'\r\nimport { maxAmountSpend } from 'utils/maxAmountSpend'\r\nimport { computeTradePriceBreakdown, warningSeverity } from 'utils/prices'\r\nimport Loader from 'components/Loader'\r\nimport useI18n from 'hooks/useI18n'\r\nimport PageHeader from 'components/PageHeader'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport AppBody from '../AppBody'\r\n\r\nconst Swap = () => {\r\n  const loadedUrlParams = useDefaultsFromURLSearch()\r\n  const TranslateString = useI18n()\r\n\r\n  // token warning stuff\r\n  const [loadedInputCurrency, loadedOutputCurrency] = [\r\n    useCurrency(loadedUrlParams?.inputCurrencyId),\r\n    useCurrency(loadedUrlParams?.outputCurrencyId),\r\n  ]\r\n  const [dismissTokenWarning, setDismissTokenWarning] = useState<boolean>(false)\r\n  const [transactionWarning, setTransactionWarning] = useState<{\r\n    selectedToken: string | null\r\n    purchaseType: string | null\r\n  }>({\r\n    selectedToken: null,\r\n    purchaseType: null,\r\n  })\r\n  const urlLoadedTokens: Token[] = useMemo(\r\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\r\n    [loadedInputCurrency, loadedOutputCurrency]\r\n  )\r\n  const handleConfirmTokenWarning = useCallback(() => {\r\n    setDismissTokenWarning(true)\r\n  }, [])\r\n\r\n  const handleConfirmWarning = () => {\r\n    setTransactionWarning({\r\n      selectedToken: null,\r\n      purchaseType: null,\r\n    })\r\n  }\r\n\r\n  const { account } = useActiveWeb3React()\r\n  const theme = useContext(ThemeContext)\r\n\r\n  const [isExpertMode] = useExpertModeManager()\r\n\r\n  // get custom setting values for user\r\n  const [deadline] = useUserDeadline()\r\n  const [allowedSlippage] = useUserSlippageTolerance()\r\n\r\n  // swap state\r\n  const { independentField, typedValue, recipient } = useSwapState()\r\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\r\n  const { wrapType, execute: onWrap, inputError: wrapInputError } = useWrapCallback(\r\n    currencies[Field.INPUT],\r\n    currencies[Field.OUTPUT],\r\n    typedValue\r\n  )\r\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\r\n  const trade = showWrap ? undefined : v2Trade\r\n\r\n  const parsedAmounts = showWrap\r\n    ? {\r\n        [Field.INPUT]: parsedAmount,\r\n        [Field.OUTPUT]: parsedAmount,\r\n      }\r\n    : {\r\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\r\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\r\n      }\r\n\r\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\r\n  const isValid = !swapInputError\r\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\r\n\r\n  const handleTypeInput = useCallback(\r\n    (value: string) => {\r\n      onUserInput(Field.INPUT, value)\r\n    },\r\n    [onUserInput]\r\n  )\r\n  const handleTypeOutput = useCallback(\r\n    (value: string) => {\r\n      onUserInput(Field.OUTPUT, value)\r\n    },\r\n    [onUserInput]\r\n  )\r\n\r\n  // modal and loading\r\n  const [{ showConfirm, tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\r\n    showConfirm: boolean\r\n    tradeToConfirm: Trade | undefined\r\n    attemptingTxn: boolean\r\n    swapErrorMessage: string | undefined\r\n    txHash: string | undefined\r\n  }>({\r\n    showConfirm: false,\r\n    tradeToConfirm: undefined,\r\n    attemptingTxn: false,\r\n    swapErrorMessage: undefined,\r\n    txHash: undefined,\r\n  })\r\n\r\n  const formattedAmounts = {\r\n    [independentField]: typedValue,\r\n    [dependentField]: showWrap\r\n      ? parsedAmounts[independentField]?.toExact() ?? ''\r\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\r\n  }\r\n\r\n  const route = trade?.route\r\n  const userHasSpecifiedInputOutput = Boolean(\r\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0))\r\n  )\r\n  const noRoute = !route\r\n\r\n  // check whether the user has approved the router on the input token\r\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\r\n\r\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\r\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\r\n\r\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\r\n  useEffect(() => {\r\n    if (approval === ApprovalState.PENDING) {\r\n      setApprovalSubmitted(true)\r\n    }\r\n  }, [approval, approvalSubmitted])\r\n\r\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\r\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\r\n\r\n  // the callback to execute the swap\r\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(\r\n    trade,\r\n    allowedSlippage,\r\n    deadline,\r\n    recipient\r\n  )\r\n\r\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\r\n\r\n  const handleSwap = useCallback(() => {\r\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\r\n      return\r\n    }\r\n    if (!swapCallback) {\r\n      return\r\n    }\r\n    setSwapState((prevState) => ({ ...prevState, attemptingTxn: true, swapErrorMessage: undefined, txHash: undefined }))\r\n    swapCallback()\r\n      .then((hash) => {\r\n        setSwapState((prevState) => ({\r\n          ...prevState,\r\n          attemptingTxn: false,\r\n          swapErrorMessage: undefined,\r\n          txHash: hash,\r\n        }))\r\n      })\r\n      .catch((error) => {\r\n        setSwapState((prevState) => ({\r\n          ...prevState,\r\n          attemptingTxn: false,\r\n          swapErrorMessage: error.message,\r\n          txHash: undefined,\r\n        }))\r\n      })\r\n  }, [priceImpactWithoutFee, swapCallback, setSwapState])\r\n\r\n  // errors\r\n  const [showInverted, setShowInverted] = useState<boolean>(false)\r\n\r\n  // warnings on slippage\r\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\r\n\r\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\r\n  // never show if price impact is above threshold in non expert mode\r\n  const showApproveFlow =\r\n    !swapInputError &&\r\n    (approval === ApprovalState.NOT_APPROVED ||\r\n      approval === ApprovalState.PENDING ||\r\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\r\n    !(priceImpactSeverity > 3 && !isExpertMode)\r\n\r\n  const handleConfirmDismiss = useCallback(() => {\r\n    setSwapState((prevState) => ({ ...prevState, showConfirm: false }))\r\n\r\n    // if there was a tx hash, we want to clear the input\r\n    if (txHash) {\r\n      onUserInput(Field.INPUT, '')\r\n    }\r\n  }, [onUserInput, txHash, setSwapState])\r\n\r\n  const handleAcceptChanges = useCallback(() => {\r\n    setSwapState((prevState) => ({ ...prevState, tradeToConfirm: trade }))\r\n  }, [trade])\r\n\r\n  // This will check to see if the user has selected Syrup or SafeMoon to either buy or sell.\r\n  // If so, they will be alerted with a warning message.\r\n  const checkForWarning = useCallback(\r\n    (selected: string, purchaseType: string) => {\r\n      if (['SYRUP', 'SAFEMOON'].includes(selected)) {\r\n        setTransactionWarning({\r\n          selectedToken: selected,\r\n          purchaseType,\r\n        })\r\n      }\r\n    },\r\n    [setTransactionWarning]\r\n  )\r\n\r\n  const handleInputSelect = useCallback(\r\n    (inputCurrency) => {\r\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\r\n      onCurrencySelection(Field.INPUT, inputCurrency)\r\n      if (inputCurrency.symbol === 'SYRUP') {\r\n        checkForWarning(inputCurrency.symbol, 'Selling')\r\n      }\r\n      if (inputCurrency.symbol === 'SAFEMOON') {\r\n        checkForWarning(inputCurrency.symbol, 'Selling')\r\n      }\r\n    },\r\n    [onCurrencySelection, setApprovalSubmitted, checkForWarning]\r\n  )\r\n\r\n  const handleMaxInput = useCallback(() => {\r\n    if (maxAmountInput) {\r\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\r\n    }\r\n  }, [maxAmountInput, onUserInput])\r\n\r\n  const handleOutputSelect = useCallback(\r\n    (outputCurrency) => {\r\n      onCurrencySelection(Field.OUTPUT, outputCurrency)\r\n      if (outputCurrency.symbol === 'SYRUP') {\r\n        checkForWarning(outputCurrency.symbol, 'Buying')\r\n      }\r\n      if (outputCurrency.symbol === 'SAFEMOON') {\r\n        checkForWarning(outputCurrency.symbol, 'Buying')\r\n      }\r\n    },\r\n    [onCurrencySelection, checkForWarning]\r\n  )\r\n\r\n  return (\r\n    <Container>\r\n      <TokenWarningModal\r\n        isOpen={urlLoadedTokens.length > 0 && !dismissTokenWarning}\r\n        tokens={urlLoadedTokens}\r\n        onConfirm={handleConfirmTokenWarning}\r\n      />\r\n      <SyrupWarningModal\r\n        isOpen={transactionWarning.selectedToken === 'SYRUP'}\r\n        transactionType={transactionWarning.purchaseType}\r\n        onConfirm={handleConfirmWarning}\r\n      />\r\n      <SafeMoonWarningModal isOpen={transactionWarning.selectedToken === 'SAFEMOON'} onConfirm={handleConfirmWarning} />\r\n      <CardNav />\r\n      <AppBody>\r\n        <Wrapper id=\"swap-page\">\r\n          <ConfirmSwapModal\r\n            isOpen={showConfirm}\r\n            trade={trade}\r\n            originalTrade={tradeToConfirm}\r\n            onAcceptChanges={handleAcceptChanges}\r\n            attemptingTxn={attemptingTxn}\r\n            txHash={txHash}\r\n            recipient={recipient}\r\n            allowedSlippage={allowedSlippage}\r\n            onConfirm={handleSwap}\r\n            swapErrorMessage={swapErrorMessage}\r\n            onDismiss={handleConfirmDismiss}\r\n          />\r\n          <PageHeader\r\n            title={TranslateString(8, 'Exchange')}\r\n            description={TranslateString(1192, 'Trade tokens in an instant')}\r\n          />\r\n          <CardBody>\r\n            <AutoColumn gap=\"md\">\r\n              <CurrencyInputPanel\r\n                label={\r\n                  independentField === Field.OUTPUT && !showWrap && trade\r\n                    ? TranslateString(194, 'From (estimated)')\r\n                    : TranslateString(76, 'From')\r\n                }\r\n                value={formattedAmounts[Field.INPUT]}\r\n                showMaxButton={!atMaxAmountInput}\r\n                currency={currencies[Field.INPUT]}\r\n                onUserInput={handleTypeInput}\r\n                onMax={handleMaxInput}\r\n                onCurrencySelect={handleInputSelect}\r\n                otherCurrency={currencies[Field.OUTPUT]}\r\n                id=\"swap-currency-input\"\r\n              />\r\n              <AutoColumn justify=\"space-between\">\r\n                <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\r\n                  <ArrowWrapper clickable>\r\n                    <IconButton\r\n                      variant=\"tertiary\"\r\n                      onClick={() => {\r\n                        setApprovalSubmitted(false) // reset 2 step UI for approvals\r\n                        onSwitchTokens()\r\n                      }}\r\n                      style={{ borderRadius: '50%' }}\r\n                      scale=\"sm\"\r\n                    >\r\n                      <ArrowDownIcon color=\"primary\" width=\"24px\" />\r\n                    </IconButton>\r\n                  </ArrowWrapper>\r\n                  {recipient === null && !showWrap && isExpertMode ? (\r\n                    <LinkStyledButton id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\r\n                      + Add a send (optional)\r\n                    </LinkStyledButton>\r\n                  ) : null}\r\n                </AutoRow>\r\n              </AutoColumn>\r\n              <CurrencyInputPanel\r\n                value={formattedAmounts[Field.OUTPUT]}\r\n                onUserInput={handleTypeOutput}\r\n                label={\r\n                  independentField === Field.INPUT && !showWrap && trade\r\n                    ? TranslateString(196, 'To (estimated)')\r\n                    : TranslateString(80, 'To')\r\n                }\r\n                showMaxButton={false}\r\n                currency={currencies[Field.OUTPUT]}\r\n                onCurrencySelect={handleOutputSelect}\r\n                otherCurrency={currencies[Field.INPUT]}\r\n                id=\"swap-currency-output\"\r\n              />\r\n\r\n              {recipient !== null && !showWrap ? (\r\n                <>\r\n                  <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\r\n                    <ArrowWrapper clickable={false}>\r\n                      <ArrowDown size=\"16\" color={theme.colors.textSubtle} />\r\n                    </ArrowWrapper>\r\n                    <LinkStyledButton id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\r\n                      - Remove send\r\n                    </LinkStyledButton>\r\n                  </AutoRow>\r\n                  <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\r\n                </>\r\n              ) : null}\r\n\r\n              {showWrap ? null : (\r\n                <Card padding=\".25rem .75rem 0 .75rem\" borderRadius=\"20px\">\r\n                  <AutoColumn gap=\"4px\">\r\n                    {Boolean(trade) && (\r\n                      <RowBetween align=\"center\">\r\n                        <Text fontSize=\"14px\">{TranslateString(1182, 'Price')}</Text>\r\n                        <TradePrice\r\n                          price={trade?.executionPrice}\r\n                          showInverted={showInverted}\r\n                          setShowInverted={setShowInverted}\r\n                        />\r\n                      </RowBetween>\r\n                    )}\r\n                    {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\r\n                      <RowBetween align=\"center\">\r\n                        <Text fontSize=\"14px\">{TranslateString(88, 'Slippage Tolerance')}</Text>\r\n                        <Text fontSize=\"14px\">{allowedSlippage / 100}%</Text>\r\n                      </RowBetween>\r\n                    )}\r\n                  </AutoColumn>\r\n                </Card>\r\n              )}\r\n            </AutoColumn>\r\n            <BottomGrouping>\r\n              {!account ? (\r\n                <ConnectWalletButton width=\"100%\" />\r\n              ) : showWrap ? (\r\n                <Button disabled={Boolean(wrapInputError)} onClick={onWrap} width=\"100%\">\r\n                  {wrapInputError ??\r\n                    (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\r\n                </Button>\r\n              ) : noRoute && userHasSpecifiedInputOutput ? (\r\n                <GreyCard style={{ textAlign: 'center' }}>\r\n                  <Text mb=\"4px\">{TranslateString(1194, 'Insufficient liquidity for this trade.')}</Text>\r\n                </GreyCard>\r\n              ) : showApproveFlow ? (\r\n                <RowBetween>\r\n                  <Button\r\n                    onClick={approveCallback}\r\n                    disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\r\n                    style={{ width: '48%' }}\r\n                    variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\r\n                  >\r\n                    {approval === ApprovalState.PENDING ? (\r\n                      <AutoRow gap=\"6px\" justify=\"center\">\r\n                        Approving <Loader stroke=\"white\" />\r\n                      </AutoRow>\r\n                    ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\r\n                      'Approved'\r\n                    ) : (\r\n                      `Approve ${currencies[Field.INPUT]?.symbol}`\r\n                    )}\r\n                  </Button>\r\n                  <Button\r\n                    onClick={() => {\r\n                      if (isExpertMode) {\r\n                        handleSwap()\r\n                      } else {\r\n                        setSwapState({\r\n                          tradeToConfirm: trade,\r\n                          attemptingTxn: false,\r\n                          swapErrorMessage: undefined,\r\n                          showConfirm: true,\r\n                          txHash: undefined,\r\n                        })\r\n                      }\r\n                    }}\r\n                    style={{ width: '48%' }}\r\n                    id=\"swap-button\"\r\n                    disabled={\r\n                      !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\r\n                    }\r\n                    variant={isValid && priceImpactSeverity > 2 ? 'danger' : 'primary'}\r\n                  >\r\n                    {priceImpactSeverity > 3 && !isExpertMode\r\n                      ? `Price Impact High`\r\n                      : `Swap${priceImpactSeverity > 2 ? ' Anyway' : ''}`}\r\n                  </Button>\r\n                </RowBetween>\r\n              ) : (\r\n                <Button\r\n                  onClick={() => {\r\n                    if (isExpertMode) {\r\n                      handleSwap()\r\n                    } else {\r\n                      setSwapState({\r\n                        tradeToConfirm: trade,\r\n                        attemptingTxn: false,\r\n                        swapErrorMessage: undefined,\r\n                        showConfirm: true,\r\n                        txHash: undefined,\r\n                      })\r\n                    }\r\n                  }}\r\n                  id=\"swap-button\"\r\n                  disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\r\n                  variant={isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary'}\r\n                  width=\"100%\"\r\n                >\r\n                  {swapInputError ||\r\n                    (priceImpactSeverity > 3 && !isExpertMode\r\n                      ? `Price Impact Too High`\r\n                      : `Swap${priceImpactSeverity > 2 ? ' Anyway' : ''}`)}\r\n                </Button>\r\n              )}\r\n              {showApproveFlow && <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />}\r\n              {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\r\n            </BottomGrouping>\r\n          </CardBody>\r\n        </Wrapper>\r\n      </AppBody>\r\n      <AdvancedSwapDetailsDropdown trade={trade} />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Swap\r\n","import { Percent } from '@pancakeswap-libs/sdk'\r\nimport { ALLOWED_PRICE_IMPACT_HIGH, PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN } from '../../constants'\r\n\r\n/**\r\n * Given the price impact, get user confirmation.\r\n *\r\n * @param priceImpactWithoutFee price impact of the trade without the fee.\r\n */\r\nexport default function confirmPriceImpactWithoutFee(priceImpactWithoutFee: Percent): boolean {\r\n  if (!priceImpactWithoutFee.lessThan(PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN)) {\r\n    return (\r\n      window.prompt(\r\n        `This swap has a price impact of at least ${PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN.toFixed(\r\n          0\r\n        )}%. Please type the word \"confirm\" to continue with this swap.`\r\n      ) === 'confirm'\r\n    )\r\n  } if (!priceImpactWithoutFee.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) {\r\n    return window.confirm(\r\n      `This swap has a price impact of at least ${ALLOWED_PRICE_IMPACT_HIGH.toFixed(\r\n        0\r\n      )}%. Please confirm that you would like to continue with this swap.`\r\n    )\r\n  }\r\n  return true\r\n}\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  Text,\r\n  Button,\r\n  Link,\r\n  Flex,\r\n  ExpandableLabel,\r\n  ArrowDownIcon,\r\n  ErrorIcon,\r\n  OpenNewIcon,\r\n} from '@pancakeswap-libs/uikit'\r\n\r\nconst otherProjects = [\r\n  {\r\n    label: 'ACryptoS',\r\n    href: 'https://app.acryptos.com/',\r\n  },\r\n  {\r\n    label: 'Autofarm',\r\n    href: 'https://autofarm.network/',\r\n  },\r\n  {\r\n    label: 'Alpha Homora',\r\n    href: 'https://homora-bsc.alphafinance.io/',\r\n  },\r\n  {\r\n    label: 'Alpaca Finance',\r\n    href: 'https://app.alpacafinance.org/',\r\n  },\r\n  {\r\n    label: 'Beefy',\r\n    href: 'https://app.beefy.finance/',\r\n  },\r\n  {\r\n    label: 'bEARN',\r\n    href: 'https://bearn.fi/',\r\n  },\r\n  {\r\n    label: 'Cream Finance',\r\n    href: 'https://app.cream.finance/',\r\n  },\r\n  {\r\n    label: 'Harvest',\r\n    href: 'https://harvest.finance/',\r\n  },\r\n  {\r\n    label: 'JetFuel',\r\n    href: 'https://jetfuel.finance/vaults',\r\n  },\r\n  {\r\n    label: 'PancakeBunny',\r\n    href: 'https://pancakebunny.finance/',\r\n  },\r\n  {\r\n    label: 'ValueDeFi',\r\n    href: 'https://bsc.valuedefi.io/#/',\r\n  },\r\n]\r\n\r\nconst FoldableContent = styled(CardBody)<{ isVisible: boolean }>`\r\n  display: ${({ isVisible }) => (isVisible ? 'block' : 'none')};\r\n`\r\n\r\nconst FirstCard = () => {\r\n  const [isVisible, setIsVisible] = useState(false)\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <Text bold>Move LP tokens to wallet</Text>\r\n        <Text small color=\"textSubtle\">\r\n          Unstake your old LP tokens from farms and other projects.\r\n        </Text>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Text bold>Unstake LP tokens from old Farms</Text>\r\n        <Card>\r\n          <CardBody>\r\n            <Text mb=\"16px\">\r\n              All farms will gradually switch to new farms, one-by-one. You can wait until farms switch over, or you can\r\n              unstake in advance.\r\n            </Text>\r\n            <Button as={Link} external href=\"https://pancakeswap.finance/farms/history\" style={{ width: '100%' }}>\r\n              Go to Farms\r\n            </Button>\r\n          </CardBody>\r\n        </Card>\r\n        <Flex mt=\"24px\">\r\n          <ErrorIcon color=\"warning\" mr=\"8px\" />\r\n          <Text>You DON’T need to unstake from Syrup Pools.</Text>\r\n        </Flex>\r\n        <Flex justifyContent=\"center\" my=\"24px\">\r\n          <ArrowDownIcon color=\"textSubtle\" />\r\n        </Flex>\r\n        <Text bold>Unstake from other projects</Text>\r\n        <Card>\r\n          <Flex justifyContent=\"space-between\" alignItems=\"center\" p=\"24px\">\r\n            <Text bold>Suggested projects</Text>\r\n            <ExpandableLabel expanded={isVisible} onClick={() => setIsVisible((prev) => !prev)}>\r\n              {isVisible ? 'Hide' : 'Details'}\r\n            </ExpandableLabel>\r\n          </Flex>\r\n          <FoldableContent isVisible={isVisible}>\r\n            <Text mb=\"16px\">\r\n              You may need to unstake any PancakeSwap LP Tokens that you’ve staked in yield aggregators or other\r\n              projects. Here are some projects you might be using:\r\n            </Text>\r\n            <ul>\r\n              {otherProjects.map((project) => (\r\n                <li key={project.href}>\r\n                  <Link external href={project.href}>\r\n                    {project.label}\r\n                  </Link>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n            <Text my=\"16px\">\r\n              <strong>Please follow your chosen project’s social media and community</strong> to find out how they will\r\n              handle the migration, and what you need to do.\r\n            </Text>\r\n            <Text my=\"16px\">You can also easily check the location of your LP tokens via Yieldwatch:</Text>\r\n            <Button\r\n              endIcon={<OpenNewIcon color=\"white\" />}\r\n              as={Link}\r\n              external\r\n              href=\"https://www.yieldwatch.net/\"\r\n              style={{ width: '100%' }}\r\n            >\r\n              Locate other LP\r\n            </Button>\r\n          </FoldableContent>\r\n        </Card>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default FirstCard\r\n","import React, { useMemo } from 'react'\r\nimport { Card, CardHeader, CardBody, Text, Box, Button, Flex, ArrowDownIcon, Link } from '@pancakeswap-libs/uikit'\r\nimport { Pair } from '@pancakeswap-libs/sdk'\r\nimport { useTokenBalancesWithLoadingIndicator } from 'state/wallet/hooks'\r\nimport { toV2LiquidityToken, useTrackedTokenPairs } from 'state/user/hooks'\r\nimport { StyledInternalLink } from 'components/Shared'\r\nimport { useActiveWeb3React } from 'hooks'\r\nimport { usePairs } from 'data/Reserves'\r\nimport FullPositionCard from 'components/PositionCard'\r\n\r\nconst ArrowSeparator = () => (\r\n  <Flex justifyContent=\"center\" my=\"24px\">\r\n    <ArrowDownIcon color=\"textSubtle\" width=\"24px\" />\r\n  </Flex>\r\n)\r\n\r\nconst SecondCard = () => {\r\n  const { account } = useActiveWeb3React()\r\n\r\n  // fetch the user's balances of all tracked V2 LP tokens\r\n  const trackedTokenPairs = useTrackedTokenPairs()\r\n  const tokenPairsWithLiquidityTokens = useMemo(\r\n    () => trackedTokenPairs.map((tokens) => ({ liquidityToken: toV2LiquidityToken(tokens), tokens })),\r\n    [trackedTokenPairs]\r\n  )\r\n  const liquidityTokens = useMemo(() => tokenPairsWithLiquidityTokens.map((tpwlt) => tpwlt.liquidityToken), [\r\n    tokenPairsWithLiquidityTokens,\r\n  ])\r\n  const [v2PairsBalances, fetchingV2PairBalances] = useTokenBalancesWithLoadingIndicator(\r\n    account ?? undefined,\r\n    liquidityTokens\r\n  )\r\n\r\n  // fetch the reserves for all V2 pools in which the user has a balance\r\n  const liquidityTokensWithBalances = useMemo(\r\n    () =>\r\n      tokenPairsWithLiquidityTokens.filter(({ liquidityToken }) =>\r\n        v2PairsBalances[liquidityToken.address]?.greaterThan('0')\r\n      ),\r\n    [tokenPairsWithLiquidityTokens, v2PairsBalances]\r\n  )\r\n\r\n  const v2Pairs = usePairs(liquidityTokensWithBalances.map(({ tokens }) => tokens))\r\n  const v2IsLoading =\r\n    fetchingV2PairBalances || v2Pairs?.length < liquidityTokensWithBalances.length || v2Pairs?.some((V2Pair) => !V2Pair)\r\n\r\n  const allV2PairsWithLiquidity = v2Pairs.map(([, pair]) => pair).filter((v2Pair): v2Pair is Pair => Boolean(v2Pair))\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <Text bold>Remove Liquidity</Text>\r\n        <Text small color=\"textSubtle\">\r\n          Unstake your old LP tokens from the old liquidity pools\r\n        </Text>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Text bold>V1 LP Tokens in wallet</Text>\r\n        <Card>\r\n          {v2IsLoading ? (\r\n            <CardBody>Loading</CardBody>\r\n          ) : (\r\n            <CardBody>\r\n              {allV2PairsWithLiquidity?.length > 0 ? (\r\n                <>\r\n                  {allV2PairsWithLiquidity.map((v2Pair, index) => (\r\n                    <Box mb={index < allV2PairsWithLiquidity.length - 1 ? '16px' : 0}>\r\n                      <FullPositionCard key={v2Pair.liquidityToken.address} pair={v2Pair} />\r\n                    </Box>\r\n                  ))}\r\n                </>\r\n              ) : (\r\n                <Text color=\"textDisabled\" textAlign=\"center\">\r\n                  No liquidity found.\r\n                </Text>\r\n              )}\r\n              <Text mt=\"16px\" textAlign=\"center\">\r\n                Don&apos;t see a pool you joined?{' '}\r\n                <StyledInternalLink id=\"import-pool-link\" to=\"/find\">\r\n                  Import it\r\n                </StyledInternalLink>\r\n              </Text>\r\n            </CardBody>\r\n          )}\r\n        </Card>\r\n        <ArrowSeparator />\r\n        <Text bold>Discontinued V2 LP</Text>\r\n        <Card>\r\n          <CardBody>\r\n            <Text textAlign=\"center\" mb=\"16px\">\r\n              If you added liquidity to V2 LPs during the migration attempt on April 23, you need to unstake and remove\r\n              liquidity.\r\n            </Text>\r\n            <Button as={Link} external href=\"https://hiccup.pancakeswap.finance/#/pool\" style={{ width: '100%' }}>\r\n              Remove\r\n            </Button>\r\n          </CardBody>\r\n        </Card>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default SecondCard\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { ExpandableLabel, Flex, FlexProps, Text } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\ninterface FoldableTextProps extends FlexProps {\r\n  title?: string\r\n}\r\n\r\nconst Wrapper = styled(Flex)`\r\n  cursor: pointer;\r\n`\r\n\r\nconst StyledExpandableLabelWrapper = styled(Flex)`\r\n  button {\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n  }\r\n`\r\n\r\nconst StyledChildrenFlex = styled(Flex)<{ isExpanded?: boolean }>`\r\n  overflow: hidden;\r\n  height: ${({ isExpanded }) => (isExpanded ? '100%' : '0px')};\r\n  padding-bottom: ${({ isExpanded }) => (isExpanded ? '16px' : '0px')};\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\r\n`\r\n\r\nconst FoldableText: React.FC<FoldableTextProps> = ({ title, children, ...props }) => {\r\n  const TranslateString = useI18n()\r\n  const [isExpanded, setIsExpanded] = useState(false)\r\n\r\n  return (\r\n    <Wrapper {...props} flexDirection=\"column\" onClick={() => setIsExpanded(!isExpanded)}>\r\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" pb=\"16px\">\r\n        <Text bold>{title}</Text>\r\n        <StyledExpandableLabelWrapper>\r\n          <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\r\n            {isExpanded ? TranslateString(1066, 'Hide') : TranslateString(658, 'Details')}\r\n          </ExpandableLabel>\r\n        </StyledExpandableLabelWrapper>\r\n      </Flex>\r\n      <StyledChildrenFlex isExpanded={isExpanded} flexDirection=\"column\">\r\n        {children}\r\n      </StyledChildrenFlex>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default FoldableText\r\n","const config = [\r\n  {\r\n    title: {\r\n      id: 999,\r\n      fallback: 'What do I need to do?',\r\n    },\r\n    description: [\r\n      {\r\n        id: 999,\r\n        fallback: 'You need to migrate all your existing LP Tokens to a new type of LP Token.',\r\n      },\r\n      {\r\n        id: 999,\r\n        fallback: 'Just follow the method shown above on this page.',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: {\r\n      id: 999,\r\n      fallback: 'When should I migrate?',\r\n    },\r\n    description: [\r\n      {\r\n        id: 999,\r\n        fallback:\r\n          'As soon as possible. If you don’t migrate, you’ll stop earning any rewards from the old type of LP tokens.',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: { id: 999, fallback: 'What’s happening?' },\r\n    description: [\r\n      {\r\n        id: 999,\r\n        fallback:\r\n          'In order to upgrade to a new exchange system, PancakeSwap has transferred (“migrated”) two of our current smart contracts to new, upgraded contracts.',\r\n      },\r\n      {\r\n        id: 999,\r\n        fallback:\r\n          'Put simply, we’ve created a new set of LP Tokens, and our farms and exchange are now supporting the new type instead of the old ones.',\r\n      },\r\n      {\r\n        id: 999,\r\n        fallback: 'As such, you need to migrate to the new type, so you can keep earning!',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: { id: 999, fallback: 'Do I need to do this for all my LP Tokens?' },\r\n    description: [\r\n      {\r\n        id: 999,\r\n        fallback: 'You must complete migration of your LP tokens to keep earning:',\r\n      },\r\n      {\r\n        id: 999,\r\n        fallback: 'Trading fees for your LP on the exchange',\r\n      },\r\n      {\r\n        id: 999,\r\n        fallback: 'Yield from farms',\r\n      },\r\n      {\r\n        id: 999,\r\n        fallback: 'If you don’t migrate, those LP tokens won’t earn you anything.',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: { id: 999, fallback: 'Do I need to do anything with Syrup Pools?' },\r\n    description: [\r\n      {\r\n        id: 999,\r\n        fallback: 'No, Syrup Pools won’t be affected. You can still keep earning from the same Syrup Pools as usual.',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: { id: 999, fallback: 'What if I’m using a vault or yield aggregator?' },\r\n    description: [\r\n      {\r\n        id: 999,\r\n        fallback:\r\n          'Check with your chosen project for what you need to do. Most major BSC projects are aware of the situation, and may be handling it differently.',\r\n      },\r\n      {\r\n        id: 999,\r\n        fallback: 'Please follow your chosen project’s social media and community for specific answers.',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: { id: 999, fallback: 'Will I lose pending rewards/yield?' },\r\n    description: [\r\n      {\r\n        id: 999,\r\n        fallback: 'No, you won’t lose any yield or other rewards that you have already earned.',\r\n      },\r\n      {\r\n        id: 999,\r\n        fallback:\r\n          'You will only lose the opportunity to earn rewards from farms and trading fees if you don’t migrate. Migrate early to maximize your rewards!',\r\n      },\r\n    ],\r\n  },\r\n]\r\n\r\nexport default config\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Text, Card, CardHeader, CardBody, Image } from '@pancakeswap-libs/uikit'\r\nimport FoldableText from 'components/FoldableText'\r\nimport Container from 'components/Container'\r\nimport useI18n from 'hooks/useI18n'\r\nimport config from './config'\r\n\r\nconst Wrapper = styled(Container)`\r\n  background: ${({ theme }) => theme.colors.gradients.violetAlt};\r\n`\r\n\r\nconst FAQ = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Heading as=\"h2\" size=\"xl\" color=\"secondary\" mb=\"24px\">\r\n        Learn more\r\n      </Heading>\r\n      <Text bold mb=\"24px\">\r\n        Here’s what you need to know about the PancakeSwap LP Token Migration.\r\n      </Text>\r\n      <Card>\r\n        <CardHeader>\r\n          <Text fontSize=\"24px\" color=\"secondary\" bold>\r\n            FAQ\r\n          </Text>\r\n        </CardHeader>\r\n        <CardBody>\r\n          {config.map(({ title, description }) => (\r\n            <FoldableText\r\n              key={title.fallback}\r\n              id={title.fallback}\r\n              mb=\"24px\"\r\n              title={TranslateString(title.id, title.fallback)}\r\n            >\r\n              {description.map(({ id, fallback }) => {\r\n                return (\r\n                  <Text key={fallback} color=\"textSubtle\" as=\"p\">\r\n                    {TranslateString(id, fallback)}\r\n                  </Text>\r\n                )\r\n              })}\r\n            </FoldableText>\r\n          ))}\r\n        </CardBody>\r\n      </Card>\r\n      <Image src=\"/images/migrate.svg\" width={242} height={227} mt=\"16px\" />\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default FAQ\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Card, CardHeader, CardBody, Text, Button, Link, Flex, ArrowDownIcon } from '@pancakeswap-libs/uikit'\r\nimport Container from 'components/Container'\r\nimport FirstCard from './FirstCard'\r\nimport SecondCard from './SecondCard'\r\nimport FAQ from './FAQ'\r\n\r\nconst Wrapper = styled.div`\r\n  max-width: 436px;\r\n  width: 100%;\r\n  z-index: 5;\r\n`\r\n\r\nconst Header = styled.div`\r\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\r\n  width: 100%;\r\n  padding: 32px;\r\n`\r\n\r\nconst ArrowSeparator = () => (\r\n  <Flex justifyContent=\"center\" my=\"24px\">\r\n    <ArrowDownIcon color=\"textSubtle\" width=\"24px\" />\r\n  </Flex>\r\n)\r\n\r\nconst Migration = () => {\r\n  return (\r\n    <>\r\n      <Header>\r\n        <Heading as=\"h1\" size=\"xxl\" color=\"secondary\" mb=\"24px\">\r\n          LP Token Migration\r\n        </Heading>\r\n        <Text bold fontSize=\"24px\">\r\n          PancakeSwap is being upgraded! <br />\r\n          Migrate your LP tokens to continue earning.\r\n        </Text>\r\n      </Header>\r\n      <Container>\r\n        <Wrapper>\r\n          <FirstCard />\r\n          <ArrowSeparator />\r\n          <SecondCard />\r\n          <ArrowSeparator />\r\n          <Card mb=\"32px\">\r\n            <CardHeader>\r\n              <Text bold>Add Liquidity to new Liquidity Pools</Text>\r\n              <Text small color=\"textSubtle\">\r\n                Stake your tokens in the updated Liquidity Pools\r\n              </Text>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <Text mb=\"24px\">Any new liquidity you add will use the updated system by default. Simple!</Text>\r\n              <Button as={Link} external href=\"https://exchange.pancakeswap.finance/#/pool\" style={{ width: '100%' }}>\r\n                Add liquidity\r\n              </Button>\r\n            </CardBody>\r\n          </Card>\r\n          <ArrowSeparator />\r\n          <Card>\r\n            <CardHeader>\r\n              <Text bold>Stake in New Farms</Text>\r\n              <Text small color=\"textSubtle\">\r\n                Stake your updated LP tokens in PancakeSwap farms\r\n              </Text>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <Text mb=\"24px\">\r\n                If you are able to stake in a farm with your new LP tokens, that means it’s the updated type. Stake as\r\n                usual and you’re done!\r\n              </Text>\r\n              <Button as={Link} external href=\"https://pancakeswap.finance/farms\" style={{ width: '100%' }}>\r\n                Go to farms\r\n              </Button>\r\n            </CardBody>\r\n          </Card>\r\n        </Wrapper>\r\n      </Container>\r\n      <FAQ />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Migration\r\n","import React from 'react'\r\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\r\n\r\n// Redirects to swap but only replace the pathname\r\nexport function RedirectPathToSwapOnly({ location }: RouteComponentProps) {\r\n  return <Redirect to={{ ...location, pathname: '/swap' }} />\r\n}\r\n\r\nexport default RedirectPathToSwapOnly\r\n","export const EN = { code: 'en', language: 'English' }\r\nexport const AR = { code: 'ar', language: 'العربية' }\r\nexport const BN = { code: 'bn', language: 'বাংলা'}\r\nexport const ZHCN = { code: 'zh-CN', language: '简体中文' }\r\nexport const ZHTW = { code: 'zh-TW', language: '繁體中文' }\r\nexport const NL = { code: 'nl', language: 'Nederlands' }\r\nexport const FIL = { code: 'fil', language: 'Filipino' }\r\nexport const FI = { code: 'fi', language: 'Suomalainen' }\r\nexport const FR = { code: 'fr', language: 'Français' }\r\nexport const DE = { code: 'de', language: 'Deutsch' }\r\nexport const EL = { code: 'el', language: 'Ελληνικά' }\r\nexport const HI = { code: 'hi', language: 'हिंदी' }\r\nexport const HU = { code: 'hu', language: 'Magyar' }\r\nexport const ID = { code: 'id', language: 'Bahasa Indonesia' }\r\nexport const IT = { code: 'it', language: 'Italiano' }\r\nexport const JA = { code: 'ja', language: '日本語' }\r\nexport const KO = { code: 'ko', language: '한국어' }\r\nexport const PL = { code: 'pl', language: 'Polski' }\r\nexport const PTPT = { code: 'pt-PT', language: 'Português (Portugal)' }\r\nexport const PTBR = { code: 'pt-BR', language: 'Português (Brasil)' }\r\nexport const RO = { code: 'ro', language: 'Română' }\r\nexport const RU = { code: 'ru', language: 'Русский' }\r\nexport const ESES = { code: 'es-ES', language: 'Español' }\r\nexport const SVSE = { code: 'sv-SE', language: 'Svenska' }\r\nexport const TA = { code: 'ta', language: 'தமிழ்' }\r\nexport const TR = { code: 'tr', language: 'Türkçe' }\r\nexport const UK = { code: 'uk', language: 'Українська' }\r\nexport const VI = { code: 'vi', language: 'Tiếng Việt' }\r\n\r\nexport const allLanguages = [\r\n  EN,\r\n  AR,\r\n  BN,\r\n  ZHCN,\r\n  ZHTW,\r\n  NL,\r\n  FIL,\r\n  FI,\r\n  FR,\r\n  DE,\r\n  EL,\r\n  HI,\r\n  HU,\r\n  ID,\r\n  IT,\r\n  JA,\r\n  KO,\r\n  PL,\r\n  PTPT,\r\n  PTBR,\r\n  RO,\r\n  RU,\r\n  ESES,\r\n  SVSE,\r\n  TA,\r\n  TR,\r\n  UK,\r\n  VI\r\n]\r\n","import React, { createContext } from 'react'\r\nimport { LangType } from '@pancakeswap-libs/uikit'\r\n\r\nexport interface LanguageObject {\r\n  code: string\r\n  language: string\r\n}\r\ninterface LanguageState {\r\n  selectedLanguage: LanguageObject\r\n  setSelectedLanguage: (langObject: LangType) => void\r\n  translatedLanguage: LanguageObject\r\n  setTranslatedLanguage: React.Dispatch<React.SetStateAction<LanguageObject>>\r\n}\r\n\r\nconst defaultLanguageState: LanguageState = {\r\n  selectedLanguage: { code: '', language: '' },\r\n  setSelectedLanguage: (): void => undefined,\r\n  translatedLanguage: { code: '', language: '' },\r\n  setTranslatedLanguage: (): void => undefined,\r\n}\r\n\r\nexport const LanguageContext = createContext(defaultLanguageState as LanguageState)\r\n","import React, { useState } from 'react'\r\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\r\nimport { light, dark } from '@pancakeswap-libs/uikit'\r\n\r\nconst CACHE_KEY = 'IS_DARK'\r\n\r\nexport interface ThemeContextType {\r\n  isDark: boolean;\r\n  toggleTheme: () => void;\r\n}\r\n\r\nconst ThemeContext = React.createContext<ThemeContextType>({ isDark: false, toggleTheme: () => null })\r\n\r\nconst ThemeContextProvider: React.FC = ({ children }) => {\r\n  const [isDark, setIsDark] = useState(() => {\r\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\r\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false\r\n  })\r\n\r\n  const toggleTheme = () => {\r\n    setIsDark((prevState: any) => {\r\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\r\n      return !prevState\r\n    })\r\n  }\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\r\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\r\n    </ThemeContext.Provider>\r\n  )\r\n}\r\n\r\nexport { ThemeContext, ThemeContextProvider }\r\n","import { useContext } from 'react'\r\nimport { ThemeContext as StyledThemeCopntext } from 'styled-components'\r\nimport { ThemeContext } from '../ThemeContext'\r\n\r\nconst useTheme = () => {\r\n  const { isDark, toggleTheme } = useContext(ThemeContext)\r\n  const theme = useContext(StyledThemeCopntext)\r\n  return { isDark, toggleTheme, theme }\r\n}\r\n\r\nexport default useTheme\r\n","import { useEffect, useState } from 'react'\r\n\r\ntype ApiResponse = {\r\n  updated_at: string\r\n  data: {\r\n    [key: string]: {\r\n      name: string\r\n      symbol: string\r\n      price: string\r\n      price_BNB: string\r\n    }\r\n  }\r\n}\r\n\r\nconst api = 'https://api.pancakeswap.info/api/tokens'\r\n\r\nconst useGetPriceData = () => {\r\n  const [data, setData] = useState<ApiResponse | null>(null)\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch(api)\r\n        const res: ApiResponse = await response.json()\r\n\r\n        setData(res)\r\n      } catch (error) {\r\n        console.error('Unable to fetch price data:', error)\r\n      }\r\n    }\r\n\r\n    fetchData()\r\n  }, [setData])\r\n\r\n  return data\r\n}\r\n\r\nexport default useGetPriceData\r\n","import { useEffect, useState } from 'react'\r\nimport Cookies from 'js-cookie'\r\nimport { useActiveWeb3React } from 'hooks'\r\n\r\nconst initialState = {\r\n  profileLink: 'https://pancakeswap.finance/profile',\r\n  noProfileLink: 'https://pancakeswap.finance/profile',\r\n}\r\n\r\n/**\r\n * Note - this will only work if the app is on the same domain\r\n */\r\nconst useGetLocalProfile = () => {\r\n  const [profile, setProfile] = useState(initialState)\r\n  const { account } = useActiveWeb3React()\r\n\r\n  useEffect(() => {\r\n    if (account) {\r\n      try {\r\n        const localData = Cookies.get(`profile_${account}`)\r\n\r\n        if (localData) {\r\n          const localProfile = JSON.parse(localData)\r\n\r\n          setProfile((prevProfile) => ({\r\n            ...prevProfile,\r\n            username: localProfile.username,\r\n            image: localProfile.avatar,\r\n          }))\r\n        }\r\n      } catch (error) {\r\n        setProfile(initialState)\r\n      }\r\n    } else {\r\n      setProfile(initialState)\r\n    }\r\n  }, [account, setProfile])\r\n\r\n  return profile\r\n}\r\n\r\nexport default useGetLocalProfile\r\n","import { MenuEntry } from '@pancakeswap-libs/uikit'\r\n\r\nconst config: MenuEntry[] = [\r\n  {\r\n    label: 'Home',\r\n    icon: 'HomeIcon',\r\n    href: 'https://cubdefi.com/',\r\n  },\r\n  {\r\n    label: 'Trade',\r\n    icon: 'TradeIcon',\r\n    items: [\r\n      {\r\n        label: 'Exchange',\r\n        href: 'https://exchange.cubdefi.com/',\r\n      },\r\n      {\r\n        label: 'Liquidity',\r\n        href: 'https://exchange.cubdefi.com/#/pool',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    label: 'Farms',\r\n    icon: 'FarmIcon',\r\n    href: 'https://cubdefi.com/farms',\r\n  },\r\n  {\r\n    label: 'Dens',\r\n    icon: 'PoolIcon',\r\n    href: 'https://cubdefi.com/dens',\r\n  },\r\n  {\r\n    label: 'Kingdoms',\r\n    icon: 'PawIcon',\r\n    href: 'https://cubdefi.com/kingdoms',\r\n    status: {\r\n      text: 'SOON',\r\n      color: 'warning',\r\n    },\r\n  },\r\n  {\r\n    label: 'LeoBridge',\r\n    icon: 'NftIcon',\r\n    href: \"https://bridge.cubdefi.com\",\r\n  },\r\n  {\r\n    label: 'Info',\r\n    icon: 'InfoIcon',\r\n    items: [\r\n      {\r\n        label: 'GitHub',\r\n        href: 'https://github.com/CubFinance',\r\n      },\r\n      {\r\n        label: 'PancakeSwap',\r\n        href: 'https://pancakeswap.info/token/0x50d809c74e0b8e49e7b4c65bb3109abe3ff4c1c1',\r\n      },\r\n      {\r\n        label: 'CoinMarketCap',\r\n        href: 'https://coinmarketcap.com/currencies/cub-finance/',\r\n      },\r\n      {\r\n        label: 'CoinGecko',\r\n        href: 'https://www.coingecko.com/en/coins/cub-finance',\r\n      },\r\n      {\r\n        label: 'AstroTools',\r\n        href: 'https://app.astrotools.io/pancake-pair-explorer/0x50d809c74e0b8e49e7b4c65bb3109abe3ff4c1c1',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    label: 'Docs',\r\n    icon: 'TicketIcon',\r\n    href: 'https://docs.cubdefi.com/',\r\n  },\r\n  {\r\n    label: 'Roadmap',\r\n    icon: 'MoreIcon',\r\n    href: 'https://docs.cubdefi.com/roadmap',\r\n  },\r\n  {\r\n    label: \"Tokenized Blogging\",\r\n    icon: \"TokenizeIcon\",\r\n    href: \"https://leofinance.io/\",\r\n  },\r\n  {\r\n    label: \"Blog\",\r\n    icon: \"BlogIcon\",\r\n    href: \"https://leofinance.io/@leofinance\",\r\n  },\r\n  {\r\n    label: 'CertiK Audit',\r\n    icon: 'AuditIcon',\r\n    href: 'https://www.certik.org/projects/cubfinance',\r\n  },\r\n]\r\n\r\nexport default config\r\n","import React, { useContext } from 'react'\r\nimport { Menu as UikitMenu} from '@pancakeswap-libs/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { allLanguages } from 'constants/localisation/languageCodes'\r\nimport { LanguageContext } from 'hooks/LanguageContext'\r\nimport useTheme from 'hooks/useTheme'\r\nimport useGetPriceData from 'hooks/useGetPriceData'\r\nimport useGetLocalProfile from 'hooks/useGetLocalProfile'\r\nimport useAuth from 'hooks/useAuth'\r\nimport links from './config'\r\nimport { CUB } from '../../constants'\r\n\r\nconst Menu: React.FC = (props) => {\r\n  const { account } = useWeb3React()\r\n  const { login, logout } = useAuth()\r\n  const { selectedLanguage, setSelectedLanguage } = useContext(LanguageContext)\r\n  const { isDark, toggleTheme } = useTheme()\r\n  const priceData = useGetPriceData()\r\n  const cakePriceUsd = priceData ? Number(priceData.data[CUB.address].price) : undefined\r\n  const profile = useGetLocalProfile()\r\n\r\n  return (\r\n    <UikitMenu\r\n      links={links}\r\n      account={account as string}\r\n      login={login}\r\n      logout={logout}\r\n      isDark={isDark}\r\n      toggleTheme={toggleTheme}\r\n      currentLang={selectedLanguage?.code || ''}\r\n      langs={allLanguages}\r\n      setLang={setSelectedLanguage}\r\n      cakePriceUsd={cakePriceUsd}\r\n      profile={profile}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Menu\r\n","import { useEffect } from 'react'\r\nimport useGetPriceData from './useGetPriceData'\r\nimport { CUB } from '../constants'\r\n\r\nconst useGetDocumentTitlePrice = () => {\r\n  const priceData = useGetPriceData()\r\n\r\n  const cakePriceUsd = priceData ? parseFloat(priceData.data[CUB.address].price) : 0\r\n\r\n  const cakePriceUsdString =\r\n    Number.isNaN(cakePriceUsd) || cakePriceUsd === 0\r\n      ? ''\r\n      : ` - $${cakePriceUsd.toLocaleString(undefined, {\r\n          minimumFractionDigits: 3,\r\n          maximumFractionDigits: 3,\r\n        })}`\r\n\r\n  useEffect(() => {\r\n    document.title = `Cub Finance${cakePriceUsdString}`\r\n  }, [cakePriceUsdString])\r\n}\r\nexport default useGetDocumentTitlePrice\r\n","import React, { Suspense, useEffect, useState } from 'react'\r\nimport { HashRouter, Route, Switch } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { Credentials, StringTranslations } from '@crowdin/crowdin-api-client'\r\nimport { LangType } from '@pancakeswap-libs/uikit'\r\nimport VersionBar from 'components/VersionBar'\r\nimport Popups from '../components/Popups'\r\nimport Web3ReactManager from '../components/Web3ReactManager'\r\nimport { RedirectDuplicateTokenIds, RedirectOldAddLiquidityPathStructure } from './AddLiquidity/redirects'\r\nimport { RedirectOldRemoveLiquidityPathStructure } from './RemoveLiquidity/redirects'\r\nimport AddLiquidity from './AddLiquidity'\r\nimport Pool from './Pool'\r\nimport PoolFinder from './PoolFinder'\r\nimport RemoveLiquidity from './RemoveLiquidity'\r\nimport Swap from './Swap'\r\nimport Migration from './Migration'\r\nimport { RedirectPathToSwapOnly } from './Swap/redirects'\r\nimport { EN, allLanguages } from '../constants/localisation/languageCodes'\r\nimport { LanguageContext } from '../hooks/LanguageContext'\r\nimport { TranslationsContext } from '../hooks/TranslationsContext'\r\n\r\nimport Menu from '../components/Menu'\r\nimport useGetDocumentTitlePrice from '../hooks/useGetDocumentTitlePrice'\r\n\r\nconst AppWrapper = styled.div`\r\n  display: flex;\r\n  flex-flow: column;\r\n  align-items: flex-start;\r\n  overflow-x: hidden;\r\n`\r\n\r\nconst BodyWrapper = styled.div`\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n  z-index: 1;\r\n  margin-bottom: 64px;\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    margin-bottom: 0;\r\n  }\r\n`\r\n\r\nconst CACHE_KEY = 'pancakeSwapLanguage'\r\n\r\nexport default function App() {\r\n  const [selectedLanguage, setSelectedLanguage] = useState<any>(undefined)\r\n  const [translatedLanguage, setTranslatedLanguage] = useState<any>(undefined)\r\n  const [translations, setTranslations] = useState<Array<any>>([])\r\n  const apiKey = `${process.env.REACT_APP_CROWDIN_APIKEY}`\r\n  const projectId = parseInt(`${process.env.REACT_APP_CROWDIN_PROJECTID}`)\r\n  const fileId = 6\r\n\r\n  const credentials: Credentials = {\r\n    token: apiKey,\r\n  }\r\n\r\n  const stringTranslationsApi = new StringTranslations(credentials)\r\n\r\n  const getStoredLang = (storedLangCode: string) => {\r\n    return allLanguages.filter((language) => {\r\n      return language.code === storedLangCode\r\n    })[0]\r\n  }\r\n\r\n  useEffect(() => {\r\n    const storedLangCode = localStorage.getItem(CACHE_KEY)\r\n    if (storedLangCode) {\r\n      const storedLang = getStoredLang(storedLangCode)\r\n      setSelectedLanguage(storedLang)\r\n    } else {\r\n      setSelectedLanguage(EN)\r\n    }\r\n  }, [])\r\n\r\n  const fetchTranslationsForSelectedLanguage = async () => {\r\n    stringTranslationsApi\r\n      .listLanguageTranslations(projectId, selectedLanguage.code, undefined, fileId, 200)\r\n      .then((translationApiResponse) => {\r\n        if (translationApiResponse.data.length < 1) {\r\n          setTranslations(['error'])\r\n        } else {\r\n          setTranslations(translationApiResponse.data)\r\n        }\r\n      })\r\n      .then(() => setTranslatedLanguage(selectedLanguage))\r\n      .catch((error) => {\r\n        setTranslations(['error'])\r\n        console.error(error)\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (selectedLanguage) {\r\n      fetchTranslationsForSelectedLanguage()\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [selectedLanguage])\r\n\r\n  const handleLanguageSelect = (langObject: LangType) => {\r\n    setSelectedLanguage(langObject)\r\n    localStorage.setItem(CACHE_KEY, langObject.code)\r\n  }\r\n\r\n  useGetDocumentTitlePrice()\r\n\r\n  return (\r\n    <Suspense fallback={null}>\r\n      <HashRouter>\r\n        <AppWrapper>\r\n          <LanguageContext.Provider\r\n            value={{\r\n              selectedLanguage,\r\n              setSelectedLanguage: handleLanguageSelect,\r\n              translatedLanguage,\r\n              setTranslatedLanguage,\r\n            }}\r\n          >\r\n            <TranslationsContext.Provider value={{ translations, setTranslations }}>\r\n              <Menu>\r\n                <BodyWrapper>\r\n                  <Popups />\r\n                  <Web3ReactManager>\r\n                    <Switch>\r\n                      <Route exact strict path=\"/swap\" component={Swap} />\r\n                      <Route exact strict path=\"/find\" component={PoolFinder} />\r\n                      <Route exact strict path=\"/pool\" component={Pool} />\r\n                      <Route exact path=\"/add\" component={AddLiquidity} />\r\n                      <Route exact path=\"/migrate\" component={Migration} />\r\n                      <Route exact strict path=\"/remove/:currencyIdA/:currencyIdB\" component={RemoveLiquidity} />\r\n\r\n                      {/* Redirection: These old routes are still used in the code base */}\r\n                      <Route exact path=\"/add/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\r\n                      <Route exact path=\"/add/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />\r\n                      <Route exact strict path=\"/remove/:tokens\" component={RedirectOldRemoveLiquidityPathStructure} />\r\n\r\n                      <Route component={RedirectPathToSwapOnly} />\r\n                    </Switch>\r\n                  </Web3ReactManager>\r\n                </BodyWrapper>\r\n              </Menu>\r\n              {/* <VersionBar /> */}\r\n            </TranslationsContext.Provider>\r\n          </LanguageContext.Provider>\r\n        </AppWrapper>\r\n      </HashRouter>\r\n    </Suspense>\r\n  )\r\n}\r\n","import { useCallback, useEffect, useState } from 'react'\r\n\r\nconst VISIBILITY_STATE_SUPPORTED = 'visibilityState' in document\r\n\r\nfunction isWindowVisible() {\r\n  return !VISIBILITY_STATE_SUPPORTED || document.visibilityState !== 'hidden'\r\n}\r\n\r\n/**\r\n * Returns whether the window is currently visible to the user.\r\n */\r\nexport default function useIsWindowVisible(): boolean {\r\n  const [focused, setFocused] = useState<boolean>(isWindowVisible())\r\n  const listener = useCallback(() => {\r\n    setFocused(isWindowVisible())\r\n  }, [setFocused])\r\n\r\n  useEffect(() => {\r\n    if (!VISIBILITY_STATE_SUPPORTED) return undefined\r\n\r\n    document.addEventListener('visibilitychange', listener)\r\n    return () => {\r\n      document.removeEventListener('visibilitychange', listener)\r\n    }\r\n  }, [listener])\r\n\r\n  return focused\r\n}\r\n","import { useCallback, useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport useDebounce from '../../hooks/useDebounce'\r\nimport useIsWindowVisible from '../../hooks/useIsWindowVisible'\r\nimport { updateBlockNumber } from './actions'\r\n\r\nexport default function Updater(): null {\r\n  const { library, chainId } = useActiveWeb3React()\r\n  const dispatch = useDispatch()\r\n\r\n  const windowVisible = useIsWindowVisible()\r\n\r\n  const [state, setState] = useState<{ chainId: number | undefined; blockNumber: number | null }>({\r\n    chainId,\r\n    blockNumber: null,\r\n  })\r\n\r\n  const blockNumberCallback = useCallback(\r\n    (blockNumber: number) => {\r\n      setState((s) => {\r\n        if (chainId === s.chainId) {\r\n          if (typeof s.blockNumber !== 'number') return { chainId, blockNumber }\r\n          return { chainId, blockNumber: Math.max(blockNumber, s.blockNumber) }\r\n        }\r\n        return s\r\n      })\r\n    },\r\n    [chainId, setState]\r\n  )\r\n\r\n  // attach/detach listeners\r\n  useEffect(() => {\r\n    if (!library || !chainId || !windowVisible) return undefined\r\n\r\n    setState({ chainId, blockNumber: null })\r\n\r\n    library\r\n      .getBlockNumber()\r\n      .then(blockNumberCallback)\r\n      .catch((error) => console.error(`Failed to get block number for chainId: ${chainId}`, error))\r\n\r\n    library.on('block', blockNumberCallback)\r\n    return () => {\r\n      library.removeListener('block', blockNumberCallback)\r\n    }\r\n  }, [dispatch, chainId, library, blockNumberCallback, windowVisible])\r\n\r\n  const debouncedState = useDebounce(state, 100)\r\n\r\n  useEffect(() => {\r\n    if (!debouncedState.chainId || !debouncedState.blockNumber || !windowVisible) return\r\n    dispatch(updateBlockNumber({ chainId: debouncedState.chainId, blockNumber: debouncedState.blockNumber }))\r\n  }, [windowVisible, dispatch, debouncedState.blockNumber, debouncedState.chainId])\r\n\r\n  return null\r\n}\r\n","import { getVersionUpgrade, minVersionBump, VersionUpgrade } from '@uniswap/token-lists'\r\nimport { useCallback, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport { useFetchListCallback } from '../../hooks/useFetchListCallback'\r\nimport useInterval from '../../hooks/useInterval'\r\nimport useIsWindowVisible from '../../hooks/useIsWindowVisible'\r\nimport { addPopup } from '../application/actions'\r\nimport { AppDispatch, AppState } from '../index'\r\nimport { acceptListUpdate } from './actions'\r\n\r\nexport default function Updater(): null {\r\n  const { library } = useActiveWeb3React()\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const lists = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\r\n\r\n  const isWindowVisible = useIsWindowVisible()\r\n\r\n  const fetchList = useFetchListCallback()\r\n\r\n  const fetchAllListsCallback = useCallback(() => {\r\n    if (!isWindowVisible) return\r\n    Object.keys(lists).forEach((url) =>\r\n      fetchList(url).catch((error) => console.error('interval list fetching error', error))\r\n    )\r\n  }, [fetchList, isWindowVisible, lists])\r\n\r\n  // fetch all lists every 10 minutes, but only after we initialize library\r\n  useInterval(fetchAllListsCallback, library ? 1000 * 60 * 10 : null)\r\n\r\n  // whenever a list is not loaded and not loading, try again to load it\r\n  useEffect(() => {\r\n    Object.keys(lists).forEach((listUrl) => {\r\n      const list = lists[listUrl]\r\n\r\n      if (!list.current && !list.loadingRequestId && !list.error) {\r\n        fetchList(listUrl).catch((error) => console.error('list added fetching error', error))\r\n      }\r\n    })\r\n  }, [dispatch, fetchList, library, lists])\r\n\r\n  // automatically update lists if versions are minor/patch\r\n  useEffect(() => {\r\n    Object.keys(lists).forEach((listUrl) => {\r\n      const list = lists[listUrl]\r\n      if (list.current && list.pendingUpdate) {\r\n        const bump = getVersionUpgrade(list.current.version, list.pendingUpdate.version)\r\n        switch (bump) {\r\n          case VersionUpgrade.NONE:\r\n            throw new Error('unexpected no version bump')\r\n          case VersionUpgrade.PATCH:\r\n          case VersionUpgrade.MINOR:\r\n            const min = minVersionBump(list.current.tokens, list.pendingUpdate.tokens)\r\n            // automatically update minor/patch as long as bump matches the min update\r\n            if (bump >= min) {\r\n              dispatch(acceptListUpdate(listUrl))\r\n              dispatch(\r\n                addPopup({\r\n                  key: listUrl,\r\n                  content: {\r\n                    listUpdate: {\r\n                      listUrl,\r\n                      oldList: list.current,\r\n                      newList: list.pendingUpdate,\r\n                      auto: true,\r\n                    },\r\n                  },\r\n                })\r\n              )\r\n            } else {\r\n              console.error(\r\n                `List at url ${listUrl} could not automatically update because the version bump was only PATCH/MINOR while the update had breaking changes and should have been MAJOR`\r\n              )\r\n            }\r\n            break\r\n\r\n          case VersionUpgrade.MAJOR:\r\n            dispatch(\r\n              addPopup({\r\n                key: listUrl,\r\n                content: {\r\n                  listUpdate: {\r\n                    listUrl,\r\n                    auto: false,\r\n                    oldList: list.current,\r\n                    newList: list.pendingUpdate,\r\n                  },\r\n                },\r\n                removeAfterMs: null,\r\n              })\r\n            )\r\n        }\r\n      }\r\n    })\r\n  }, [dispatch, lists])\r\n\r\n  return null\r\n}\r\n","function wait(ms: number): Promise<void> {\r\n  return new Promise((resolve) => setTimeout(resolve, ms))\r\n}\r\n\r\nfunction waitRandom(min: number, max: number): Promise<void> {\r\n  return wait(min + Math.round(Math.random() * Math.max(0, max - min)))\r\n}\r\n\r\n/**\r\n * This error is thrown if the function is cancelled before completing\r\n */\r\nexport class CancelledError extends Error {\r\n  constructor() {\r\n    super('Cancelled')\r\n  }\r\n}\r\n\r\n/**\r\n * Throw this error if the function should retry\r\n */\r\nexport class RetryableError extends Error {}\r\n\r\n/**\r\n * Retries the function that returns the promise until the promise successfully resolves up to n retries\r\n * @param fn function to retry\r\n * @param n how many times to retry\r\n * @param minWait min wait between retries in ms\r\n * @param maxWait max wait between retries in ms\r\n */\r\nexport function retry<T>(\r\n  fn: () => Promise<T>,\r\n  { n, minWait, maxWait }: { n: number; minWait: number; maxWait: number }\r\n): { promise: Promise<T>; cancel: () => void } {\r\n  let completed = false\r\n  let rejectCancelled: (error: Error) => void\r\n  // eslint-disable-next-line no-async-promise-executor\r\n  const promise = new Promise<T>(async (resolve, reject) => {\r\n    rejectCancelled = reject\r\n    // eslint-disable-next-line no-constant-condition\r\n    while (true) {\r\n      let result: T\r\n      try {\r\n        result = await fn()\r\n        if (!completed) {\r\n          resolve(result)\r\n          completed = true\r\n        }\r\n        break\r\n      } catch (error) {\r\n        if (completed) {\r\n          break\r\n        }\r\n        if (n <= 0 || !(error instanceof RetryableError)) {\r\n          reject(error)\r\n          completed = true\r\n          break\r\n        }\r\n        n--\r\n      }\r\n      await waitRandom(minWait, maxWait)\r\n    }\r\n  })\r\n  return {\r\n    promise,\r\n    cancel: () => {\r\n      if (completed) return\r\n      completed = true\r\n      rejectCancelled(new CancelledError())\r\n    },\r\n  }\r\n}\r\n","import { Contract } from '@ethersproject/contracts'\r\nimport { useEffect, useMemo, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport { useMulticallContract } from '../../hooks/useContract'\r\nimport useDebounce from '../../hooks/useDebounce'\r\nimport chunkArray from '../../utils/chunkArray'\r\nimport { CancelledError, retry, RetryableError } from '../../utils/retry'\r\nimport { useBlockNumber } from '../application/hooks'\r\nimport { AppDispatch, AppState } from '../index'\r\nimport {\r\n  Call,\r\n  errorFetchingMulticallResults,\r\n  fetchingMulticallResults,\r\n  parseCallKey,\r\n  updateMulticallResults,\r\n} from './actions'\r\n\r\n// chunk calls so we do not exceed the gas limit\r\nconst CALL_CHUNK_SIZE = 500\r\n\r\n/**\r\n * Fetches a chunk of calls, enforcing a minimum block number constraint\r\n * @param multicallContract multicall contract to fetch against\r\n * @param chunk chunk of calls to make\r\n * @param minBlockNumber minimum block number of the result set\r\n */\r\nasync function fetchChunk(\r\n  multicallContract: Contract,\r\n  chunk: Call[],\r\n  minBlockNumber: number\r\n): Promise<{ results: string[]; blockNumber: number }> {\r\n  let resultsBlockNumber\r\n  let returnData\r\n  try {\r\n    [resultsBlockNumber, returnData] = await multicallContract.aggregate(\r\n      chunk.map((obj) => [obj.address, obj.callData])\r\n    )\r\n  } catch (error) {\r\n    console.info('Failed to fetch chunk inside retry', error)\r\n    throw error\r\n  }\r\n  if (resultsBlockNumber.toNumber() < minBlockNumber) {\r\n    throw new RetryableError('Fetched for old block number')\r\n  }\r\n  return { results: returnData, blockNumber: resultsBlockNumber.toNumber() }\r\n}\r\n\r\n/**\r\n * From the current all listeners state, return each call key mapped to the\r\n * minimum number of blocks per fetch. This is how often each key must be fetched.\r\n * @param allListeners the all listeners state\r\n * @param chainId the current chain id\r\n */\r\nexport function activeListeningKeys(\r\n  allListeners: AppState['multicall']['callListeners'],\r\n  chainId?: number\r\n): { [callKey: string]: number } {\r\n  if (!allListeners || !chainId) return {}\r\n  const listeners = allListeners[chainId]\r\n  if (!listeners) return {}\r\n\r\n  return Object.keys(listeners).reduce<{ [callKey: string]: number }>((memo, callKey) => {\r\n    const keyListeners = listeners[callKey]\r\n\r\n    memo[callKey] = Object.keys(keyListeners)\r\n      .filter((key) => {\r\n        const blocksPerFetch = parseInt(key)\r\n        if (blocksPerFetch <= 0) return false\r\n        return keyListeners[blocksPerFetch] > 0\r\n      })\r\n      .reduce((previousMin, current) => {\r\n        return Math.min(previousMin, parseInt(current))\r\n      }, Infinity)\r\n    return memo\r\n  }, {})\r\n}\r\n\r\n/**\r\n * Return the keys that need to be refetched\r\n * @param callResults current call result state\r\n * @param listeningKeys each call key mapped to how old the data can be in blocks\r\n * @param chainId the current chain id\r\n * @param latestBlockNumber the latest block number\r\n */\r\nexport function outdatedListeningKeys(\r\n  callResults: AppState['multicall']['callResults'],\r\n  listeningKeys: { [callKey: string]: number },\r\n  chainId: number | undefined,\r\n  latestBlockNumber: number | undefined\r\n): string[] {\r\n  if (!chainId || !latestBlockNumber) return []\r\n  const results = callResults[chainId]\r\n  // no results at all, load everything\r\n  if (!results) return Object.keys(listeningKeys)\r\n\r\n  return Object.keys(listeningKeys).filter((callKey) => {\r\n    const blocksPerFetch = listeningKeys[callKey]\r\n\r\n    const data = callResults[chainId][callKey]\r\n    // no data, must fetch\r\n    if (!data) return true\r\n\r\n    const minDataBlockNumber = latestBlockNumber - (blocksPerFetch - 1)\r\n\r\n    // already fetching it for a recent enough block, don't refetch it\r\n    if (data.fetchingBlockNumber && data.fetchingBlockNumber >= minDataBlockNumber) return false\r\n\r\n    // if data is older than minDataBlockNumber, fetch it\r\n    return !data.blockNumber || data.blockNumber < minDataBlockNumber\r\n  })\r\n}\r\n\r\nexport default function Updater(): null {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const state = useSelector<AppState, AppState['multicall']>((s) => s.multicall)\r\n  // wait for listeners to settle before triggering updates\r\n  const debouncedListeners = useDebounce(state.callListeners, 100)\r\n  const latestBlockNumber = useBlockNumber()\r\n  const { chainId } = useActiveWeb3React()\r\n  const multicallContract = useMulticallContract()\r\n  const cancellations = useRef<{ blockNumber: number; cancellations: (() => void)[] }>()\r\n\r\n  const listeningKeys: { [callKey: string]: number } = useMemo(() => {\r\n    return activeListeningKeys(debouncedListeners, chainId)\r\n  }, [debouncedListeners, chainId])\r\n\r\n  const unserializedOutdatedCallKeys = useMemo(() => {\r\n    return outdatedListeningKeys(state.callResults, listeningKeys, chainId, latestBlockNumber)\r\n  }, [chainId, state.callResults, listeningKeys, latestBlockNumber])\r\n\r\n  const serializedOutdatedCallKeys = useMemo(() => JSON.stringify(unserializedOutdatedCallKeys.sort()), [\r\n    unserializedOutdatedCallKeys,\r\n  ])\r\n\r\n  useEffect(() => {\r\n    if (!latestBlockNumber || !chainId || !multicallContract) return\r\n\r\n    const outdatedCallKeys: string[] = JSON.parse(serializedOutdatedCallKeys)\r\n    if (outdatedCallKeys.length === 0) return\r\n    const calls = outdatedCallKeys.map((key) => parseCallKey(key))\r\n    // .filter(item => item.address.toLowerCase() !== '0xBCfCcbde45cE874adCB698cC183deBcF17952812'.toLowerCase())\r\n\r\n    const chunkedCalls = chunkArray(calls, CALL_CHUNK_SIZE)\r\n\r\n    if (cancellations.current?.blockNumber !== latestBlockNumber) {\r\n      cancellations.current?.cancellations?.forEach((c) => c())\r\n    }\r\n\r\n    dispatch(\r\n      fetchingMulticallResults({\r\n        calls,\r\n        chainId,\r\n        fetchingBlockNumber: latestBlockNumber,\r\n      })\r\n    )\r\n\r\n    cancellations.current = {\r\n      blockNumber: latestBlockNumber,\r\n      cancellations: chunkedCalls.map((chunk, index) => {\r\n        const { cancel, promise } = retry(() => fetchChunk(multicallContract, chunk, latestBlockNumber), {\r\n          n: Infinity,\r\n          minWait: 2500,\r\n          maxWait: 3500,\r\n        })\r\n        promise\r\n          .then(({ results: returnData, blockNumber: fetchBlockNumber }) => {\r\n            cancellations.current = { cancellations: [], blockNumber: latestBlockNumber }\r\n\r\n            // accumulates the length of all previous indices\r\n            const firstCallKeyIndex = chunkedCalls.slice(0, index).reduce<number>((memo, curr) => memo + curr.length, 0)\r\n            const lastCallKeyIndex = firstCallKeyIndex + returnData.length\r\n\r\n            dispatch(\r\n              updateMulticallResults({\r\n                chainId,\r\n                results: outdatedCallKeys\r\n                  .slice(firstCallKeyIndex, lastCallKeyIndex)\r\n                  .reduce<{ [callKey: string]: string | null }>((memo, callKey, i) => {\r\n                    memo[callKey] = returnData[i] ?? null\r\n                    return memo\r\n                  }, {}),\r\n                blockNumber: fetchBlockNumber,\r\n              })\r\n            )\r\n          })\r\n          .catch((error: any) => {\r\n            if (error instanceof CancelledError) {\r\n              console.error('Cancelled fetch for blockNumber', latestBlockNumber)\r\n              return\r\n            }\r\n            console.error('Failed to fetch multicall chunk', chunk, chainId, error)\r\n            dispatch(\r\n              errorFetchingMulticallResults({\r\n                calls: chunk,\r\n                chainId,\r\n                fetchingBlockNumber: latestBlockNumber,\r\n              })\r\n            )\r\n          })\r\n        return cancel\r\n      }),\r\n    }\r\n  }, [chainId, multicallContract, dispatch, serializedOutdatedCallKeys, latestBlockNumber])\r\n\r\n  return null\r\n}\r\n","// chunks array into chunks of maximum size\r\n// evenly distributes items among the chunks\r\nexport default function chunkArray<T>(items: T[], maxChunkSize: number): T[][] {\r\n  if (maxChunkSize < 1) throw new Error('maxChunkSize must be gte 1')\r\n  if (items.length <= maxChunkSize) return [items]\r\n\r\n  const numChunks: number = Math.ceil(items.length / maxChunkSize)\r\n  const chunkSize = Math.ceil(items.length / numChunks)\r\n\r\n  return [...Array(numChunks).keys()].map(ix => items.slice(ix * chunkSize, ix * chunkSize + chunkSize))\r\n}\r\n","import { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport { useAddPopup, useBlockNumber } from '../application/hooks'\r\nimport { AppDispatch, AppState } from '../index'\r\nimport { checkedTransaction, finalizeTransaction } from './actions'\r\n\r\nexport function shouldCheck(\r\n  lastBlockNumber: number,\r\n  tx: { addedTime: number; receipt?: any; lastCheckedBlockNumber?: number }\r\n): boolean {\r\n  if (tx.receipt) return false\r\n  if (!tx.lastCheckedBlockNumber) return true\r\n  const blocksSinceCheck = lastBlockNumber - tx.lastCheckedBlockNumber\r\n  if (blocksSinceCheck < 1) return false\r\n  const minutesPending = (new Date().getTime() - tx.addedTime) / 1000 / 60\r\n  if (minutesPending > 60) {\r\n    // every 10 blocks if pending for longer than an hour\r\n    return blocksSinceCheck > 9\r\n  }\r\n  if (minutesPending > 5) {\r\n    // every 3 blocks if pending more than 5 minutes\r\n    return blocksSinceCheck > 2\r\n  }\r\n  // otherwise every block\r\n  return true\r\n}\r\n\r\nexport default function Updater(): null {\r\n  const { chainId, library } = useActiveWeb3React()\r\n\r\n  const lastBlockNumber = useBlockNumber()\r\n\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const transactions = chainId ? state[chainId] ?? {} : {}\r\n\r\n  // show popup on confirm\r\n  const addPopup = useAddPopup()\r\n\r\n  useEffect(() => {\r\n    if (!chainId || !library || !lastBlockNumber) return\r\n\r\n    Object.keys(transactions)\r\n      .filter((hash) => shouldCheck(lastBlockNumber, transactions[hash]))\r\n      .forEach((hash) => {\r\n        library\r\n          .getTransactionReceipt(hash)\r\n          .then((receipt) => {\r\n            if (receipt) {\r\n              dispatch(\r\n                finalizeTransaction({\r\n                  chainId,\r\n                  hash,\r\n                  receipt: {\r\n                    blockHash: receipt.blockHash,\r\n                    blockNumber: receipt.blockNumber,\r\n                    contractAddress: receipt.contractAddress,\r\n                    from: receipt.from,\r\n                    status: receipt.status,\r\n                    to: receipt.to,\r\n                    transactionHash: receipt.transactionHash,\r\n                    transactionIndex: receipt.transactionIndex,\r\n                  },\r\n                })\r\n              )\r\n\r\n              addPopup(\r\n                {\r\n                  txn: {\r\n                    hash,\r\n                    success: receipt.status === 1,\r\n                    summary: transactions[hash]?.summary,\r\n                  },\r\n                },\r\n                hash\r\n              )\r\n            } else {\r\n              dispatch(checkedTransaction({ chainId, hash, blockNumber: lastBlockNumber }))\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.error(`failed to check transaction hash: ${hash}`, error)\r\n          })\r\n      })\r\n  }, [chainId, library, transactions, lastBlockNumber, dispatch, addPopup])\r\n\r\n  return null\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { ToastContainer, Toast } from '@pancakeswap-libs/uikit'\r\nimport useToast from 'hooks/useToast'\r\nimport { AppState } from '../../state'\r\n\r\nconst ToastListener = () => {\r\n  const toasts: Toast[] = useSelector((state: AppState) => state.toasts.data)\r\n  const { remove } = useToast()\r\n\r\n  const handleRemove = (id: string) => remove(id)\r\n\r\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\r\n}\r\n\r\nexport default ToastListener\r\n","import { createReducer, nanoid } from '@reduxjs/toolkit'\r\nimport {\r\n  addPopup,\r\n  PopupContent,\r\n  removePopup,\r\n  toggleWalletModal,\r\n  toggleSettingsMenu,\r\n  updateBlockNumber\r\n} from './actions'\r\n\r\ntype PopupList = Array<{ key: string; show: boolean; content: PopupContent; removeAfterMs: number | null }>\r\n\r\nexport interface ApplicationState {\r\n  blockNumber: { [chainId: number]: number }\r\n  popupList: PopupList\r\n  walletModalOpen: boolean\r\n  settingsMenuOpen: boolean\r\n}\r\n\r\nconst initialState: ApplicationState = {\r\n  blockNumber: {},\r\n  popupList: [],\r\n  walletModalOpen: false,\r\n  settingsMenuOpen: false\r\n}\r\n\r\nexport default createReducer(initialState, builder =>\r\n  builder\r\n    .addCase(updateBlockNumber, (state, action) => {\r\n      const { chainId, blockNumber } = action.payload\r\n      if (typeof state.blockNumber[chainId] !== 'number') {\r\n        state.blockNumber[chainId] = blockNumber\r\n      } else {\r\n        state.blockNumber[chainId] = Math.max(blockNumber, state.blockNumber[chainId])\r\n      }\r\n    })\r\n    .addCase(toggleWalletModal, state => {\r\n      state.walletModalOpen = !state.walletModalOpen\r\n    })\r\n    .addCase(toggleSettingsMenu, state => {\r\n      state.settingsMenuOpen = !state.settingsMenuOpen\r\n    })\r\n    .addCase(addPopup, (state, { payload: { content, key, removeAfterMs = 15000 } }) => {\r\n      state.popupList = (key ? state.popupList.filter(popup => popup.key !== key) : state.popupList).concat([\r\n        {\r\n          key: key || nanoid(),\r\n          show: true,\r\n          content,\r\n          removeAfterMs\r\n        }\r\n      ])\r\n    })\r\n    .addCase(removePopup, (state, { payload: { key } }) => {\r\n      state.popupList.forEach(p => {\r\n        if (p.key === key) {\r\n          p.show = false\r\n        }\r\n      })\r\n    })\r\n)\r\n","import { createAction } from '@reduxjs/toolkit'\r\n\r\n// fired once when the app reloads but before the app renders\r\n// allows any updates to be applied to store data loaded from localStorage\r\nexport const updateVersion = createAction<void>('global/updateVersion')\r\n\r\nexport default createAction\r\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport { INITIAL_ALLOWED_SLIPPAGE, DEFAULT_DEADLINE_FROM_NOW } from '../../constants'\r\nimport { updateVersion } from '../global/actions'\r\nimport {\r\n  addSerializedPair,\r\n  addSerializedToken,\r\n  removeSerializedPair,\r\n  removeSerializedToken,\r\n  SerializedPair,\r\n  SerializedToken,\r\n  updateMatchesDarkMode,\r\n  updateUserDarkMode,\r\n  updateUserExpertMode,\r\n  updateUserSlippageTolerance,\r\n  updateUserDeadline,\r\n  muteAudio,\r\n  unmuteAudio\r\n} from './actions'\r\n\r\nconst currentTimestamp = () => new Date().getTime()\r\n\r\nexport interface UserState {\r\n  // the timestamp of the last updateVersion action\r\n  lastUpdateVersionTimestamp?: number\r\n\r\n  userDarkMode: boolean | null // the user's choice for dark mode or light mode\r\n  matchesDarkMode: boolean // whether the dark mode media query matches\r\n\r\n  userExpertMode: boolean\r\n\r\n  // user defined slippage tolerance in bips, used in all txns\r\n  userSlippageTolerance: number\r\n\r\n  // deadline set by user in minutes, used in all txns\r\n  userDeadline: number\r\n\r\n  tokens: {\r\n    [chainId: number]: {\r\n      [address: string]: SerializedToken\r\n    }\r\n  }\r\n\r\n  pairs: {\r\n    [chainId: number]: {\r\n      // keyed by token0Address:token1Address\r\n      [key: string]: SerializedPair\r\n    }\r\n  }\r\n\r\n  timestamp: number\r\n\r\n  audioPlay: boolean\r\n}\r\n\r\nfunction pairKey(token0Address: string, token1Address: string) {\r\n  return `${token0Address};${token1Address}`\r\n}\r\n\r\nexport const initialState: UserState = {\r\n  userDarkMode: null,\r\n  matchesDarkMode: false,\r\n  userExpertMode: false,\r\n  userSlippageTolerance: INITIAL_ALLOWED_SLIPPAGE,\r\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\r\n  tokens: {},\r\n  pairs: {},\r\n  timestamp: currentTimestamp(),\r\n  audioPlay: true\r\n}\r\n\r\nexport default createReducer(initialState, builder =>\r\n  builder\r\n    .addCase(updateVersion, state => {\r\n      // slippage isnt being tracked in local storage, reset to default\r\n      // noinspection SuspiciousTypeOfGuard\r\n      if (typeof state.userSlippageTolerance !== 'number') {\r\n        state.userSlippageTolerance = INITIAL_ALLOWED_SLIPPAGE\r\n      }\r\n\r\n      // deadline isnt being tracked in local storage, reset to default\r\n      // noinspection SuspiciousTypeOfGuard\r\n      if (typeof state.userDeadline !== 'number') {\r\n        state.userDeadline = DEFAULT_DEADLINE_FROM_NOW\r\n      }\r\n\r\n      state.lastUpdateVersionTimestamp = currentTimestamp()\r\n    })\r\n    .addCase(updateUserDarkMode, (state, action) => {\r\n      state.userDarkMode = action.payload.userDarkMode\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(updateMatchesDarkMode, (state, action) => {\r\n      state.matchesDarkMode = action.payload.matchesDarkMode\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(updateUserExpertMode, (state, action) => {\r\n      state.userExpertMode = action.payload.userExpertMode\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(updateUserSlippageTolerance, (state, action) => {\r\n      state.userSlippageTolerance = action.payload.userSlippageTolerance\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(updateUserDeadline, (state, action) => {\r\n      state.userDeadline = action.payload.userDeadline\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(addSerializedToken, (state, { payload: { serializedToken } }) => {\r\n      state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {}\r\n      state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(removeSerializedToken, (state, { payload: { address, chainId } }) => {\r\n      state.tokens[chainId] = state.tokens[chainId] || {}\r\n      delete state.tokens[chainId][address]\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(addSerializedPair, (state, { payload: { serializedPair } }) => {\r\n      if (\r\n        serializedPair.token0.chainId === serializedPair.token1.chainId &&\r\n        serializedPair.token0.address !== serializedPair.token1.address\r\n      ) {\r\n        const {chainId} = serializedPair.token0\r\n        state.pairs[chainId] = state.pairs[chainId] || {}\r\n        state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair\r\n      }\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(removeSerializedPair, (state, { payload: { chainId, tokenAAddress, tokenBAddress } }) => {\r\n      if (state.pairs[chainId]) {\r\n        // just delete both keys if either exists\r\n        delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)]\r\n        delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)]\r\n      }\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(muteAudio, state => {\r\n      state.audioPlay = false\r\n    })\r\n    .addCase(unmuteAudio, state => {\r\n      state.audioPlay = true\r\n    })\r\n)\r\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport {\r\n  addTransaction,\r\n  checkedTransaction,\r\n  clearAllTransactions,\r\n  finalizeTransaction,\r\n  SerializableTransactionReceipt\r\n} from './actions'\r\n\r\nconst now = () => new Date().getTime()\r\n\r\nexport interface TransactionDetails {\r\n  hash: string\r\n  approval?: { tokenAddress: string; spender: string }\r\n  summary?: string\r\n  receipt?: SerializableTransactionReceipt\r\n  lastCheckedBlockNumber?: number\r\n  addedTime: number\r\n  confirmedTime?: number\r\n  from: string\r\n}\r\n\r\nexport interface TransactionState {\r\n  [chainId: number]: {\r\n    [txHash: string]: TransactionDetails\r\n  }\r\n}\r\n\r\nexport const initialState: TransactionState = {}\r\n\r\nexport default createReducer(initialState, builder =>\r\n  builder\r\n    .addCase(addTransaction, (transactions, { payload: { chainId, from, hash, approval, summary } }) => {\r\n      if (transactions[chainId]?.[hash]) {\r\n        throw Error('Attempted to add existing transaction.')\r\n      }\r\n      const txs = transactions[chainId] ?? {}\r\n      txs[hash] = { hash, approval, summary, from, addedTime: now() }\r\n      transactions[chainId] = txs\r\n    })\r\n    .addCase(clearAllTransactions, (transactions, { payload: { chainId } }) => {\r\n      if (!transactions[chainId]) return\r\n      transactions[chainId] = {}\r\n    })\r\n    .addCase(checkedTransaction, (transactions, { payload: { chainId, hash, blockNumber } }) => {\r\n      const tx = transactions[chainId]?.[hash]\r\n      if (!tx) {\r\n        return\r\n      }\r\n      if (!tx.lastCheckedBlockNumber) {\r\n        tx.lastCheckedBlockNumber = blockNumber\r\n      } else {\r\n        tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber)\r\n      }\r\n    })\r\n    .addCase(finalizeTransaction, (transactions, { payload: { hash, chainId, receipt } }) => {\r\n      const tx = transactions[chainId]?.[hash]\r\n      if (!tx) {\r\n        return\r\n      }\r\n      tx.receipt = receipt\r\n      tx.confirmedTime = now()\r\n    })\r\n)\r\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\r\n\r\nexport interface SwapState {\r\n  readonly independentField: Field\r\n  readonly typedValue: string\r\n  readonly [Field.INPUT]: {\r\n    readonly currencyId: string | undefined\r\n  }\r\n  readonly [Field.OUTPUT]: {\r\n    readonly currencyId: string | undefined\r\n  }\r\n  // the typed recipient address or ENS name, or null if swap should go to sender\r\n  readonly recipient: string | null\r\n}\r\n\r\nconst initialState: SwapState = {\r\n  independentField: Field.INPUT,\r\n  typedValue: '',\r\n  [Field.INPUT]: {\r\n    currencyId: '',\r\n  },\r\n  [Field.OUTPUT]: {\r\n    currencyId: '',\r\n  },\r\n  recipient: null,\r\n}\r\n\r\nexport default createReducer<SwapState>(initialState, (builder) =>\r\n  builder\r\n    .addCase(\r\n      replaceSwapState,\r\n      (state, { payload: { typedValue, recipient, field, inputCurrencyId, outputCurrencyId } }) => {\r\n        return {\r\n          [Field.INPUT]: {\r\n            currencyId: inputCurrencyId,\r\n          },\r\n          [Field.OUTPUT]: {\r\n            currencyId: outputCurrencyId,\r\n          },\r\n          independentField: field,\r\n          typedValue,\r\n          recipient,\r\n        }\r\n      }\r\n    )\r\n    .addCase(selectCurrency, (state, { payload: { currencyId, field } }) => {\r\n      const otherField = field === Field.INPUT ? Field.OUTPUT : Field.INPUT\r\n      if (currencyId === state[otherField].currencyId) {\r\n        // the case where we have to swap the order\r\n        return {\r\n          ...state,\r\n          independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\r\n          [field]: { currencyId },\r\n          [otherField]: { currencyId: state[field].currencyId },\r\n        }\r\n      }\r\n      // the normal case\r\n      return {\r\n        ...state,\r\n        [field]: { currencyId },\r\n      }\r\n    })\r\n    .addCase(switchCurrencies, (state) => {\r\n      return {\r\n        ...state,\r\n        independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\r\n        [Field.INPUT]: { currencyId: state[Field.OUTPUT].currencyId },\r\n        [Field.OUTPUT]: { currencyId: state[Field.INPUT].currencyId },\r\n      }\r\n    })\r\n    .addCase(typeInput, (state, { payload: { field, typedValue } }) => {\r\n      return {\r\n        ...state,\r\n        independentField: field,\r\n        typedValue,\r\n      }\r\n    })\r\n    .addCase(setRecipient, (state, { payload: { recipient } }) => {\r\n      state.recipient = recipient\r\n    })\r\n)\r\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport { Field, resetMintState, typeInput } from './actions'\r\n\r\nexport interface MintState {\r\n  readonly independentField: Field\r\n  readonly typedValue: string\r\n  readonly otherTypedValue: string // for the case when there's no liquidity\r\n}\r\n\r\nconst initialState: MintState = {\r\n  independentField: Field.CURRENCY_A,\r\n  typedValue: '',\r\n  otherTypedValue: ''\r\n}\r\n\r\nexport default createReducer<MintState>(initialState, builder =>\r\n  builder\r\n    .addCase(resetMintState, () => initialState)\r\n    .addCase(typeInput, (state, { payload: { field, typedValue, noLiquidity } }) => {\r\n      if (noLiquidity) {\r\n        // they're typing into the field they've last typed in\r\n        if (field === state.independentField) {\r\n          return {\r\n            ...state,\r\n            independentField: field,\r\n            typedValue\r\n          }\r\n        }\r\n        // they're typing into a new field, store the other value\r\n        \r\n          return {\r\n            ...state,\r\n            independentField: field,\r\n            typedValue,\r\n            otherTypedValue: state.typedValue\r\n          }\r\n        \r\n      } \r\n        return {\r\n          ...state,\r\n          independentField: field,\r\n          typedValue,\r\n          otherTypedValue: ''\r\n        }\r\n      \r\n    })\r\n)\r\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\r\n// eslint-disable-next-line import/no-unresolved\r\nimport { TokenList } from '@uniswap/token-lists/dist/types'\r\nimport { DEFAULT_LIST_OF_LISTS, DEFAULT_TOKEN_LIST_URL } from '../../constants/lists'\r\nimport { updateVersion } from '../global/actions'\r\nimport { acceptListUpdate, addList, fetchTokenList, removeList, selectList } from './actions'\r\nimport DEFAULT_LIST from '../../constants/token/pancakeswap.json'\r\n\r\nexport interface ListsState {\r\n  readonly byUrl: {\r\n    readonly [url: string]: {\r\n      readonly current: TokenList | null\r\n      readonly pendingUpdate: TokenList | null\r\n      readonly loadingRequestId: string | null\r\n      readonly error: string | null\r\n    }\r\n  }\r\n  // this contains the default list of lists from the last time the updateVersion was called, i.e. the app was reloaded\r\n  readonly lastInitializedDefaultListOfLists?: string[]\r\n  readonly selectedListUrl: string | undefined\r\n}\r\n\r\nconst NEW_LIST_STATE: ListsState['byUrl'][string] = {\r\n  error: null,\r\n  current: null,\r\n  loadingRequestId: null,\r\n  pendingUpdate: null,\r\n}\r\n\r\ntype Mutable<T> = { -readonly [P in keyof T]: T[P] extends ReadonlyArray<infer U> ? U[] : T[P] }\r\n\r\nconst initialState: ListsState = {\r\n  lastInitializedDefaultListOfLists: DEFAULT_LIST_OF_LISTS,\r\n  byUrl: {\r\n    ...DEFAULT_LIST_OF_LISTS.reduce<Mutable<ListsState['byUrl']>>((memo, listUrl) => {\r\n      memo[listUrl] = NEW_LIST_STATE\r\n      return memo\r\n    }, {}),\r\n    [DEFAULT_TOKEN_LIST_URL]: {\r\n      error: null,\r\n      current: DEFAULT_LIST,\r\n      loadingRequestId: null,\r\n      pendingUpdate: null,\r\n    },\r\n  },\r\n  selectedListUrl: DEFAULT_TOKEN_LIST_URL,\r\n}\r\n\r\nexport default createReducer(initialState, (builder) =>\r\n  builder\r\n    .addCase(fetchTokenList.pending, (state, { payload: { requestId, url } }) => {\r\n      state.byUrl[url] = {\r\n        current: null,\r\n        pendingUpdate: null,\r\n        ...state.byUrl[url],\r\n        loadingRequestId: requestId,\r\n        error: null,\r\n      }\r\n    })\r\n    .addCase(fetchTokenList.fulfilled, (state, { payload: { requestId, tokenList, url } }) => {\r\n      const current = state.byUrl[url]?.current\r\n      const loadingRequestId = state.byUrl[url]?.loadingRequestId\r\n\r\n      // no-op if update does nothing\r\n      if (current) {\r\n        const upgradeType = getVersionUpgrade(current.version, tokenList.version)\r\n        if (upgradeType === VersionUpgrade.NONE) return\r\n        if (loadingRequestId === null || loadingRequestId === requestId) {\r\n          state.byUrl[url] = {\r\n            ...state.byUrl[url],\r\n            loadingRequestId: null,\r\n            error: null,\r\n            current,\r\n            pendingUpdate: tokenList,\r\n          }\r\n        }\r\n      } else {\r\n        state.byUrl[url] = {\r\n          ...state.byUrl[url],\r\n          loadingRequestId: null,\r\n          error: null,\r\n          current: tokenList,\r\n          pendingUpdate: null,\r\n        }\r\n      }\r\n    })\r\n    .addCase(fetchTokenList.rejected, (state, { payload: { url, requestId, errorMessage } }) => {\r\n      if (state.byUrl[url]?.loadingRequestId !== requestId) {\r\n        // no-op since it's not the latest request\r\n        return\r\n      }\r\n\r\n      state.byUrl[url] = {\r\n        ...state.byUrl[url],\r\n        loadingRequestId: null,\r\n        error: errorMessage,\r\n        current: null,\r\n        pendingUpdate: null,\r\n      }\r\n    })\r\n    .addCase(selectList, (state, { payload: url }) => {\r\n      state.selectedListUrl = url\r\n      // automatically adds list\r\n      if (!state.byUrl[url]) {\r\n        state.byUrl[url] = NEW_LIST_STATE\r\n      }\r\n    })\r\n    .addCase(addList, (state, { payload: url }) => {\r\n      if (!state.byUrl[url]) {\r\n        state.byUrl[url] = NEW_LIST_STATE\r\n      }\r\n    })\r\n    .addCase(removeList, (state, { payload: url }) => {\r\n      if (state.byUrl[url]) {\r\n        delete state.byUrl[url]\r\n      }\r\n      if (state.selectedListUrl === url) {\r\n        state.selectedListUrl = Object.keys(state.byUrl)[0]\r\n      }\r\n    })\r\n    .addCase(acceptListUpdate, (state, { payload: url }) => {\r\n      if (!state.byUrl[url]?.pendingUpdate) {\r\n        throw new Error('accept list update called without pending update')\r\n      }\r\n      state.byUrl[url] = {\r\n        ...state.byUrl[url],\r\n        pendingUpdate: null,\r\n        current: state.byUrl[url].pendingUpdate,\r\n      }\r\n    })\r\n    .addCase(updateVersion, (state) => {\r\n      // state loaded from localStorage, but new lists have never been initialized\r\n      if (!state.lastInitializedDefaultListOfLists) {\r\n        state.byUrl = initialState.byUrl\r\n        state.selectedListUrl = undefined\r\n      } else if (state.lastInitializedDefaultListOfLists) {\r\n        const lastInitializedSet = state.lastInitializedDefaultListOfLists.reduce<Set<string>>(\r\n          (s, l) => s.add(l),\r\n          new Set()\r\n        )\r\n        const newListOfListsSet = DEFAULT_LIST_OF_LISTS.reduce<Set<string>>((s, l) => s.add(l), new Set())\r\n\r\n        DEFAULT_LIST_OF_LISTS.forEach((listUrl) => {\r\n          if (!lastInitializedSet.has(listUrl)) {\r\n            state.byUrl[listUrl] = NEW_LIST_STATE\r\n          }\r\n        })\r\n\r\n        state.lastInitializedDefaultListOfLists.forEach((listUrl) => {\r\n          if (!newListOfListsSet.has(listUrl)) {\r\n            delete state.byUrl[listUrl]\r\n          }\r\n        })\r\n      }\r\n\r\n      state.lastInitializedDefaultListOfLists = DEFAULT_LIST_OF_LISTS\r\n    })\r\n)\r\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport { Field, typeInput } from './actions'\r\n\r\nexport interface BurnState {\r\n  readonly independentField: Field\r\n  readonly typedValue: string\r\n}\r\n\r\nconst initialState: BurnState = {\r\n  independentField: Field.LIQUIDITY_PERCENT,\r\n  typedValue: '0'\r\n}\r\n\r\nexport default createReducer<BurnState>(initialState, builder =>\r\n  builder.addCase(typeInput, (state, { payload: { field, typedValue } }) => {\r\n    return {\r\n      ...state,\r\n      independentField: field,\r\n      typedValue\r\n    }\r\n  })\r\n)\r\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport {\r\n  addMulticallListeners,\r\n  errorFetchingMulticallResults,\r\n  fetchingMulticallResults,\r\n  removeMulticallListeners,\r\n  toCallKey,\r\n  updateMulticallResults\r\n} from './actions'\r\n\r\nexport interface MulticallState {\r\n  callListeners?: {\r\n    // on a per-chain basis\r\n    [chainId: number]: {\r\n      // stores for each call key the listeners' preferences\r\n      [callKey: string]: {\r\n        // stores how many listeners there are per each blocks per fetch preference\r\n        [blocksPerFetch: number]: number\r\n      }\r\n    }\r\n  }\r\n\r\n  callResults: {\r\n    [chainId: number]: {\r\n      [callKey: string]: {\r\n        data?: string | null\r\n        blockNumber?: number\r\n        fetchingBlockNumber?: number\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst initialState: MulticallState = {\r\n  callResults: {}\r\n}\r\n\r\nexport default createReducer(initialState, builder =>\r\n  builder\r\n    .addCase(addMulticallListeners, (state, { payload: { calls, chainId, options: { blocksPerFetch = 1 } = {} } }) => {\r\n      const listeners: MulticallState['callListeners'] = state.callListeners\r\n        ? state.callListeners\r\n        : (state.callListeners = {})\r\n      listeners[chainId] = listeners[chainId] ?? {}\r\n      calls.forEach(call => {\r\n        const callKey = toCallKey(call)\r\n        listeners[chainId][callKey] = listeners[chainId][callKey] ?? {}\r\n        listeners[chainId][callKey][blocksPerFetch] = (listeners[chainId][callKey][blocksPerFetch] ?? 0) + 1\r\n      })\r\n    })\r\n    .addCase(\r\n      removeMulticallListeners,\r\n      (state, { payload: { chainId, calls, options: { blocksPerFetch = 1 } = {} } }) => {\r\n        const listeners: MulticallState['callListeners'] = state.callListeners\r\n          ? state.callListeners\r\n          : (state.callListeners = {})\r\n\r\n        if (!listeners[chainId]) return\r\n        calls.forEach(call => {\r\n          const callKey = toCallKey(call)\r\n          if (!listeners[chainId][callKey]) return\r\n          if (!listeners[chainId][callKey][blocksPerFetch]) return\r\n\r\n          if (listeners[chainId][callKey][blocksPerFetch] === 1) {\r\n            delete listeners[chainId][callKey][blocksPerFetch]\r\n          } else {\r\n            listeners[chainId][callKey][blocksPerFetch]--\r\n          }\r\n        })\r\n      }\r\n    )\r\n    .addCase(fetchingMulticallResults, (state, { payload: { chainId, fetchingBlockNumber, calls } }) => {\r\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\r\n      calls.forEach(call => {\r\n        const callKey = toCallKey(call)\r\n        const current = state.callResults[chainId][callKey]\r\n        if (!current) {\r\n          state.callResults[chainId][callKey] = {\r\n            fetchingBlockNumber\r\n          }\r\n        } else {\r\n          if ((current.fetchingBlockNumber ?? 0) >= fetchingBlockNumber) return\r\n          state.callResults[chainId][callKey].fetchingBlockNumber = fetchingBlockNumber\r\n        }\r\n      })\r\n    })\r\n    .addCase(errorFetchingMulticallResults, (state, { payload: { fetchingBlockNumber, chainId, calls } }) => {\r\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\r\n      calls.forEach(call => {\r\n        const callKey = toCallKey(call)\r\n        const current = state.callResults[chainId][callKey]\r\n        if (!current) return // only should be dispatched if we are already fetching\r\n        if (current.fetchingBlockNumber === fetchingBlockNumber) {\r\n          delete current.fetchingBlockNumber\r\n          current.data = null\r\n          current.blockNumber = fetchingBlockNumber\r\n        }\r\n      })\r\n    })\r\n    .addCase(updateMulticallResults, (state, { payload: { chainId, results, blockNumber } }) => {\r\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\r\n      Object.keys(results).forEach(callKey => {\r\n        const current = state.callResults[chainId][callKey]\r\n        if ((current?.blockNumber ?? 0) > blockNumber) return\r\n        state.callResults[chainId][callKey] = {\r\n          data: results[callKey],\r\n          blockNumber\r\n        }\r\n      })\r\n    })\r\n)\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\r\nimport { save, load } from 'redux-localstorage-simple'\r\n\r\nimport application from './application/reducer'\r\nimport { updateVersion } from './global/actions'\r\nimport user from './user/reducer'\r\nimport transactions from './transactions/reducer'\r\nimport swap from './swap/reducer'\r\nimport mint from './mint/reducer'\r\nimport lists from './lists/reducer'\r\nimport burn from './burn/reducer'\r\nimport multicall from './multicall/reducer'\r\nimport toasts from './toasts'\r\nimport { getThemeCache } from '../utils/theme'\r\n\r\ntype MergedState = {\r\n  user: {\r\n    [key: string]: any\r\n  }\r\n  transactions: {\r\n    [key: string]: any\r\n  }\r\n}\r\nconst PERSISTED_KEYS: string[] = ['user', 'transactions']\r\nconst loadedState = load({ states: PERSISTED_KEYS }) as MergedState\r\nif (loadedState.user) {\r\n  loadedState.user.userDarkMode = getThemeCache()\r\n}\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    application,\r\n    user,\r\n    transactions,\r\n    swap,\r\n    mint,\r\n    burn,\r\n    multicall,\r\n    lists,\r\n    toasts\r\n  },\r\n  middleware: [...getDefaultMiddleware({ thunk: false }), save({ states: PERSISTED_KEYS })],\r\n  preloadedState: loadedState,\r\n})\r\n\r\nstore.dispatch(updateVersion())\r\n\r\nexport default store\r\n\r\nexport type AppState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch\r\n","import { Web3Provider } from '@ethersproject/providers'\r\n\r\nexport default function getLibrary(provider: any): Web3Provider {\r\n  const library = new Web3Provider(provider)\r\n  library.pollingInterval = 15000\r\n  return library\r\n}\r\n","import React from 'react'\r\nimport { createWeb3ReactRoot, Web3ReactProvider } from '@web3-react/core'\r\nimport { Provider } from 'react-redux'\r\nimport { ModalProvider } from '@pancakeswap-libs/uikit'\r\nimport { NetworkContextName } from './constants'\r\nimport store from './state'\r\nimport getLibrary from './utils/getLibrary'\r\nimport { ThemeContextProvider } from './ThemeContext'\r\n\r\nconst Web3ProviderNetwork = createWeb3ReactRoot(NetworkContextName)\r\n\r\nconst Providers: React.FC = ({ children }) => {\r\n  return (\r\n    <Web3ReactProvider getLibrary={getLibrary}>\r\n      <Web3ProviderNetwork getLibrary={getLibrary}>\r\n        <Provider store={store}>\r\n          <ThemeContextProvider>\r\n            <ModalProvider>{children}</ModalProvider>\r\n          </ThemeContextProvider>\r\n        </Provider>\r\n      </Web3ProviderNetwork>\r\n    </Web3ReactProvider>\r\n  )\r\n}\r\n\r\nexport default Providers\r\n","import i18next from 'i18next'\r\nimport { initReactI18next } from 'react-i18next'\r\nimport XHR from 'i18next-xhr-backend'\r\nimport LanguageDetector from 'i18next-browser-languagedetector'\r\n\r\ni18next\r\n  .use(XHR)\r\n  .use(LanguageDetector)\r\n  .use(initReactI18next)\r\n  .init({\r\n    backend: {\r\n      loadPath: `./locales/{{lng}}.json`\r\n    },\r\n    react: {\r\n      useSuspense: true\r\n    },\r\n    fallbackLng: 'en',\r\n    preload: ['en'],\r\n    keySeparator: false,\r\n    interpolation: { escapeValue: false }\r\n  })\r\n\r\nexport default i18next\r\n","import React, { StrictMode } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { ResetCSS } from '@pancakeswap-libs/uikit'\r\nimport GlobalStyle from './style/Global'\r\nimport App from './pages/App'\r\nimport ApplicationUpdater from './state/application/updater'\r\nimport ListsUpdater from './state/lists/updater'\r\nimport MulticallUpdater from './state/multicall/updater'\r\nimport TransactionUpdater from './state/transactions/updater'\r\nimport ToastListener from './components/ToastListener'\r\nimport Providers from './Providers'\r\nimport 'inter-ui'\r\nimport './i18n'\r\n\r\nif ('ethereum' in window) {\r\n  (window.ethereum as any).autoRefreshOnNetworkChange = false\r\n}\r\n\r\nwindow.addEventListener('error', () => {\r\n   localStorage?.removeItem('redux_localstorage_simple_lists')\r\n})\r\n\r\nReactDOM.render(\r\n  <StrictMode>\r\n    <Providers>\r\n      <>\r\n        <ListsUpdater />\r\n        <ApplicationUpdater />\r\n        <TransactionUpdater />\r\n        <MulticallUpdater />\r\n        <ToastListener />\r\n      </>\r\n      <ResetCSS />\r\n      <GlobalStyle />\r\n      <App />\r\n    </Providers>\r\n  </StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}